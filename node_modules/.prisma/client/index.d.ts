
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model ProductPool
 * 
 */
export type ProductPool = $Result.DefaultSelection<Prisma.$ProductPoolPayload>
/**
 * Model AgencyBlog
 * 
 */
export type AgencyBlog = $Result.DefaultSelection<Prisma.$AgencyBlogPayload>
/**
 * Model SeoArticle
 * 
 */
export type SeoArticle = $Result.DefaultSelection<Prisma.$SeoArticlePayload>
/**
 * Model TwPage
 * 
 */
export type TwPage = $Result.DefaultSelection<Prisma.$TwPagePayload>
/**
 * Model TwPageType
 * 
 */
export type TwPageType = $Result.DefaultSelection<Prisma.$TwPageTypePayload>
/**
 * Model SeoArticleType
 * 
 */
export type SeoArticleType = $Result.DefaultSelection<Prisma.$SeoArticleTypePayload>
/**
 * Model BlogDescription
 * 
 */
export type BlogDescription = $Result.DefaultSelection<Prisma.$BlogDescriptionPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model TourOrder
 * 
 */
export type TourOrder = $Result.DefaultSelection<Prisma.$TourOrderPayload>
/**
 * Model OrderTraveler
 * 
 */
export type OrderTraveler = $Result.DefaultSelection<Prisma.$OrderTravelerPayload>
/**
 * Model OrderPayment
 * 
 */
export type OrderPayment = $Result.DefaultSelection<Prisma.$OrderPaymentPayload>
/**
 * Model OrderDocument
 * 
 */
export type OrderDocument = $Result.DefaultSelection<Prisma.$OrderDocumentPayload>
/**
 * Model OrderNote
 * 
 */
export type OrderNote = $Result.DefaultSelection<Prisma.$OrderNotePayload>
/**
 * Model TwOrder
 * 
 */
export type TwOrder = $Result.DefaultSelection<Prisma.$TwOrderPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more ProductPools
 * const productPools = await prisma.productPool.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more ProductPools
   * const productPools = await prisma.productPool.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.productPool`: Exposes CRUD operations for the **ProductPool** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductPools
    * const productPools = await prisma.productPool.findMany()
    * ```
    */
  get productPool(): Prisma.ProductPoolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agencyBlog`: Exposes CRUD operations for the **AgencyBlog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyBlogs
    * const agencyBlogs = await prisma.agencyBlog.findMany()
    * ```
    */
  get agencyBlog(): Prisma.AgencyBlogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seoArticle`: Exposes CRUD operations for the **SeoArticle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SeoArticles
    * const seoArticles = await prisma.seoArticle.findMany()
    * ```
    */
  get seoArticle(): Prisma.SeoArticleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.twPage`: Exposes CRUD operations for the **TwPage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TwPages
    * const twPages = await prisma.twPage.findMany()
    * ```
    */
  get twPage(): Prisma.TwPageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.twPageType`: Exposes CRUD operations for the **TwPageType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TwPageTypes
    * const twPageTypes = await prisma.twPageType.findMany()
    * ```
    */
  get twPageType(): Prisma.TwPageTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seoArticleType`: Exposes CRUD operations for the **SeoArticleType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SeoArticleTypes
    * const seoArticleTypes = await prisma.seoArticleType.findMany()
    * ```
    */
  get seoArticleType(): Prisma.SeoArticleTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.blogDescription`: Exposes CRUD operations for the **BlogDescription** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BlogDescriptions
    * const blogDescriptions = await prisma.blogDescription.findMany()
    * ```
    */
  get blogDescription(): Prisma.BlogDescriptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tourOrder`: Exposes CRUD operations for the **TourOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TourOrders
    * const tourOrders = await prisma.tourOrder.findMany()
    * ```
    */
  get tourOrder(): Prisma.TourOrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderTraveler`: Exposes CRUD operations for the **OrderTraveler** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderTravelers
    * const orderTravelers = await prisma.orderTraveler.findMany()
    * ```
    */
  get orderTraveler(): Prisma.OrderTravelerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderPayment`: Exposes CRUD operations for the **OrderPayment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderPayments
    * const orderPayments = await prisma.orderPayment.findMany()
    * ```
    */
  get orderPayment(): Prisma.OrderPaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderDocument`: Exposes CRUD operations for the **OrderDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderDocuments
    * const orderDocuments = await prisma.orderDocument.findMany()
    * ```
    */
  get orderDocument(): Prisma.OrderDocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderNote`: Exposes CRUD operations for the **OrderNote** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderNotes
    * const orderNotes = await prisma.orderNote.findMany()
    * ```
    */
  get orderNote(): Prisma.OrderNoteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.twOrder`: Exposes CRUD operations for the **TwOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TwOrders
    * const twOrders = await prisma.twOrder.findMany()
    * ```
    */
  get twOrder(): Prisma.TwOrderDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.1
   * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    ProductPool: 'ProductPool',
    AgencyBlog: 'AgencyBlog',
    SeoArticle: 'SeoArticle',
    TwPage: 'TwPage',
    TwPageType: 'TwPageType',
    SeoArticleType: 'SeoArticleType',
    BlogDescription: 'BlogDescription',
    User: 'User',
    TourOrder: 'TourOrder',
    OrderTraveler: 'OrderTraveler',
    OrderPayment: 'OrderPayment',
    OrderDocument: 'OrderDocument',
    OrderNote: 'OrderNote',
    TwOrder: 'TwOrder'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "productPool" | "agencyBlog" | "seoArticle" | "twPage" | "twPageType" | "seoArticleType" | "blogDescription" | "user" | "tourOrder" | "orderTraveler" | "orderPayment" | "orderDocument" | "orderNote" | "twOrder"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      ProductPool: {
        payload: Prisma.$ProductPoolPayload<ExtArgs>
        fields: Prisma.ProductPoolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductPoolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductPoolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>
          }
          findFirst: {
            args: Prisma.ProductPoolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductPoolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>
          }
          findMany: {
            args: Prisma.ProductPoolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>[]
          }
          create: {
            args: Prisma.ProductPoolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>
          }
          createMany: {
            args: Prisma.ProductPoolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductPoolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>[]
          }
          delete: {
            args: Prisma.ProductPoolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>
          }
          update: {
            args: Prisma.ProductPoolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>
          }
          deleteMany: {
            args: Prisma.ProductPoolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductPoolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductPoolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>[]
          }
          upsert: {
            args: Prisma.ProductPoolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPoolPayload>
          }
          aggregate: {
            args: Prisma.ProductPoolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductPool>
          }
          groupBy: {
            args: Prisma.ProductPoolGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductPoolGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductPoolCountArgs<ExtArgs>
            result: $Utils.Optional<ProductPoolCountAggregateOutputType> | number
          }
        }
      }
      AgencyBlog: {
        payload: Prisma.$AgencyBlogPayload<ExtArgs>
        fields: Prisma.AgencyBlogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyBlogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyBlogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>
          }
          findFirst: {
            args: Prisma.AgencyBlogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyBlogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>
          }
          findMany: {
            args: Prisma.AgencyBlogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>[]
          }
          create: {
            args: Prisma.AgencyBlogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>
          }
          createMany: {
            args: Prisma.AgencyBlogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyBlogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>[]
          }
          delete: {
            args: Prisma.AgencyBlogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>
          }
          update: {
            args: Prisma.AgencyBlogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>
          }
          deleteMany: {
            args: Prisma.AgencyBlogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyBlogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgencyBlogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>[]
          }
          upsert: {
            args: Prisma.AgencyBlogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyBlogPayload>
          }
          aggregate: {
            args: Prisma.AgencyBlogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyBlog>
          }
          groupBy: {
            args: Prisma.AgencyBlogGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyBlogGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyBlogCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyBlogCountAggregateOutputType> | number
          }
        }
      }
      SeoArticle: {
        payload: Prisma.$SeoArticlePayload<ExtArgs>
        fields: Prisma.SeoArticleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SeoArticleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SeoArticleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>
          }
          findFirst: {
            args: Prisma.SeoArticleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SeoArticleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>
          }
          findMany: {
            args: Prisma.SeoArticleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>[]
          }
          create: {
            args: Prisma.SeoArticleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>
          }
          createMany: {
            args: Prisma.SeoArticleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SeoArticleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>[]
          }
          delete: {
            args: Prisma.SeoArticleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>
          }
          update: {
            args: Prisma.SeoArticleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>
          }
          deleteMany: {
            args: Prisma.SeoArticleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SeoArticleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SeoArticleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>[]
          }
          upsert: {
            args: Prisma.SeoArticleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticlePayload>
          }
          aggregate: {
            args: Prisma.SeoArticleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeoArticle>
          }
          groupBy: {
            args: Prisma.SeoArticleGroupByArgs<ExtArgs>
            result: $Utils.Optional<SeoArticleGroupByOutputType>[]
          }
          count: {
            args: Prisma.SeoArticleCountArgs<ExtArgs>
            result: $Utils.Optional<SeoArticleCountAggregateOutputType> | number
          }
        }
      }
      TwPage: {
        payload: Prisma.$TwPagePayload<ExtArgs>
        fields: Prisma.TwPageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TwPageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TwPageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>
          }
          findFirst: {
            args: Prisma.TwPageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TwPageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>
          }
          findMany: {
            args: Prisma.TwPageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>[]
          }
          create: {
            args: Prisma.TwPageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>
          }
          createMany: {
            args: Prisma.TwPageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TwPageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>[]
          }
          delete: {
            args: Prisma.TwPageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>
          }
          update: {
            args: Prisma.TwPageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>
          }
          deleteMany: {
            args: Prisma.TwPageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TwPageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TwPageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>[]
          }
          upsert: {
            args: Prisma.TwPageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPagePayload>
          }
          aggregate: {
            args: Prisma.TwPageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTwPage>
          }
          groupBy: {
            args: Prisma.TwPageGroupByArgs<ExtArgs>
            result: $Utils.Optional<TwPageGroupByOutputType>[]
          }
          count: {
            args: Prisma.TwPageCountArgs<ExtArgs>
            result: $Utils.Optional<TwPageCountAggregateOutputType> | number
          }
        }
      }
      TwPageType: {
        payload: Prisma.$TwPageTypePayload<ExtArgs>
        fields: Prisma.TwPageTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TwPageTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TwPageTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>
          }
          findFirst: {
            args: Prisma.TwPageTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TwPageTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>
          }
          findMany: {
            args: Prisma.TwPageTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>[]
          }
          create: {
            args: Prisma.TwPageTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>
          }
          createMany: {
            args: Prisma.TwPageTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TwPageTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>[]
          }
          delete: {
            args: Prisma.TwPageTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>
          }
          update: {
            args: Prisma.TwPageTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>
          }
          deleteMany: {
            args: Prisma.TwPageTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TwPageTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TwPageTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>[]
          }
          upsert: {
            args: Prisma.TwPageTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwPageTypePayload>
          }
          aggregate: {
            args: Prisma.TwPageTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTwPageType>
          }
          groupBy: {
            args: Prisma.TwPageTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<TwPageTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.TwPageTypeCountArgs<ExtArgs>
            result: $Utils.Optional<TwPageTypeCountAggregateOutputType> | number
          }
        }
      }
      SeoArticleType: {
        payload: Prisma.$SeoArticleTypePayload<ExtArgs>
        fields: Prisma.SeoArticleTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SeoArticleTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SeoArticleTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>
          }
          findFirst: {
            args: Prisma.SeoArticleTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SeoArticleTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>
          }
          findMany: {
            args: Prisma.SeoArticleTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>[]
          }
          create: {
            args: Prisma.SeoArticleTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>
          }
          createMany: {
            args: Prisma.SeoArticleTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SeoArticleTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>[]
          }
          delete: {
            args: Prisma.SeoArticleTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>
          }
          update: {
            args: Prisma.SeoArticleTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>
          }
          deleteMany: {
            args: Prisma.SeoArticleTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SeoArticleTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SeoArticleTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>[]
          }
          upsert: {
            args: Prisma.SeoArticleTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeoArticleTypePayload>
          }
          aggregate: {
            args: Prisma.SeoArticleTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeoArticleType>
          }
          groupBy: {
            args: Prisma.SeoArticleTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<SeoArticleTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.SeoArticleTypeCountArgs<ExtArgs>
            result: $Utils.Optional<SeoArticleTypeCountAggregateOutputType> | number
          }
        }
      }
      BlogDescription: {
        payload: Prisma.$BlogDescriptionPayload<ExtArgs>
        fields: Prisma.BlogDescriptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BlogDescriptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BlogDescriptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>
          }
          findFirst: {
            args: Prisma.BlogDescriptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BlogDescriptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>
          }
          findMany: {
            args: Prisma.BlogDescriptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>[]
          }
          create: {
            args: Prisma.BlogDescriptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>
          }
          createMany: {
            args: Prisma.BlogDescriptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BlogDescriptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>[]
          }
          delete: {
            args: Prisma.BlogDescriptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>
          }
          update: {
            args: Prisma.BlogDescriptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>
          }
          deleteMany: {
            args: Prisma.BlogDescriptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BlogDescriptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BlogDescriptionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>[]
          }
          upsert: {
            args: Prisma.BlogDescriptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogDescriptionPayload>
          }
          aggregate: {
            args: Prisma.BlogDescriptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBlogDescription>
          }
          groupBy: {
            args: Prisma.BlogDescriptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<BlogDescriptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.BlogDescriptionCountArgs<ExtArgs>
            result: $Utils.Optional<BlogDescriptionCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      TourOrder: {
        payload: Prisma.$TourOrderPayload<ExtArgs>
        fields: Prisma.TourOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TourOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TourOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>
          }
          findFirst: {
            args: Prisma.TourOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TourOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>
          }
          findMany: {
            args: Prisma.TourOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>[]
          }
          create: {
            args: Prisma.TourOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>
          }
          createMany: {
            args: Prisma.TourOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TourOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>[]
          }
          delete: {
            args: Prisma.TourOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>
          }
          update: {
            args: Prisma.TourOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>
          }
          deleteMany: {
            args: Prisma.TourOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TourOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TourOrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>[]
          }
          upsert: {
            args: Prisma.TourOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TourOrderPayload>
          }
          aggregate: {
            args: Prisma.TourOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTourOrder>
          }
          groupBy: {
            args: Prisma.TourOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<TourOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.TourOrderCountArgs<ExtArgs>
            result: $Utils.Optional<TourOrderCountAggregateOutputType> | number
          }
        }
      }
      OrderTraveler: {
        payload: Prisma.$OrderTravelerPayload<ExtArgs>
        fields: Prisma.OrderTravelerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderTravelerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderTravelerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>
          }
          findFirst: {
            args: Prisma.OrderTravelerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderTravelerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>
          }
          findMany: {
            args: Prisma.OrderTravelerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>[]
          }
          create: {
            args: Prisma.OrderTravelerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>
          }
          createMany: {
            args: Prisma.OrderTravelerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderTravelerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>[]
          }
          delete: {
            args: Prisma.OrderTravelerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>
          }
          update: {
            args: Prisma.OrderTravelerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>
          }
          deleteMany: {
            args: Prisma.OrderTravelerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderTravelerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderTravelerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>[]
          }
          upsert: {
            args: Prisma.OrderTravelerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderTravelerPayload>
          }
          aggregate: {
            args: Prisma.OrderTravelerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderTraveler>
          }
          groupBy: {
            args: Prisma.OrderTravelerGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderTravelerGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderTravelerCountArgs<ExtArgs>
            result: $Utils.Optional<OrderTravelerCountAggregateOutputType> | number
          }
        }
      }
      OrderPayment: {
        payload: Prisma.$OrderPaymentPayload<ExtArgs>
        fields: Prisma.OrderPaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderPaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderPaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>
          }
          findFirst: {
            args: Prisma.OrderPaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderPaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>
          }
          findMany: {
            args: Prisma.OrderPaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>[]
          }
          create: {
            args: Prisma.OrderPaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>
          }
          createMany: {
            args: Prisma.OrderPaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderPaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>[]
          }
          delete: {
            args: Prisma.OrderPaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>
          }
          update: {
            args: Prisma.OrderPaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>
          }
          deleteMany: {
            args: Prisma.OrderPaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderPaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderPaymentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>[]
          }
          upsert: {
            args: Prisma.OrderPaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPaymentPayload>
          }
          aggregate: {
            args: Prisma.OrderPaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderPayment>
          }
          groupBy: {
            args: Prisma.OrderPaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderPaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderPaymentCountArgs<ExtArgs>
            result: $Utils.Optional<OrderPaymentCountAggregateOutputType> | number
          }
        }
      }
      OrderDocument: {
        payload: Prisma.$OrderDocumentPayload<ExtArgs>
        fields: Prisma.OrderDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>
          }
          findFirst: {
            args: Prisma.OrderDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>
          }
          findMany: {
            args: Prisma.OrderDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>[]
          }
          create: {
            args: Prisma.OrderDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>
          }
          createMany: {
            args: Prisma.OrderDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderDocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>[]
          }
          delete: {
            args: Prisma.OrderDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>
          }
          update: {
            args: Prisma.OrderDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>
          }
          deleteMany: {
            args: Prisma.OrderDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderDocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>[]
          }
          upsert: {
            args: Prisma.OrderDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderDocumentPayload>
          }
          aggregate: {
            args: Prisma.OrderDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderDocument>
          }
          groupBy: {
            args: Prisma.OrderDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<OrderDocumentCountAggregateOutputType> | number
          }
        }
      }
      OrderNote: {
        payload: Prisma.$OrderNotePayload<ExtArgs>
        fields: Prisma.OrderNoteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderNoteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderNoteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>
          }
          findFirst: {
            args: Prisma.OrderNoteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderNoteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>
          }
          findMany: {
            args: Prisma.OrderNoteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>[]
          }
          create: {
            args: Prisma.OrderNoteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>
          }
          createMany: {
            args: Prisma.OrderNoteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderNoteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>[]
          }
          delete: {
            args: Prisma.OrderNoteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>
          }
          update: {
            args: Prisma.OrderNoteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>
          }
          deleteMany: {
            args: Prisma.OrderNoteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderNoteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderNoteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>[]
          }
          upsert: {
            args: Prisma.OrderNoteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderNotePayload>
          }
          aggregate: {
            args: Prisma.OrderNoteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderNote>
          }
          groupBy: {
            args: Prisma.OrderNoteGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderNoteGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderNoteCountArgs<ExtArgs>
            result: $Utils.Optional<OrderNoteCountAggregateOutputType> | number
          }
        }
      }
      TwOrder: {
        payload: Prisma.$TwOrderPayload<ExtArgs>
        fields: Prisma.TwOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TwOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TwOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>
          }
          findFirst: {
            args: Prisma.TwOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TwOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>
          }
          findMany: {
            args: Prisma.TwOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>[]
          }
          create: {
            args: Prisma.TwOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>
          }
          createMany: {
            args: Prisma.TwOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TwOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>[]
          }
          delete: {
            args: Prisma.TwOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>
          }
          update: {
            args: Prisma.TwOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>
          }
          deleteMany: {
            args: Prisma.TwOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TwOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TwOrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>[]
          }
          upsert: {
            args: Prisma.TwOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TwOrderPayload>
          }
          aggregate: {
            args: Prisma.TwOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTwOrder>
          }
          groupBy: {
            args: Prisma.TwOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<TwOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.TwOrderCountArgs<ExtArgs>
            result: $Utils.Optional<TwOrderCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    productPool?: ProductPoolOmit
    agencyBlog?: AgencyBlogOmit
    seoArticle?: SeoArticleOmit
    twPage?: TwPageOmit
    twPageType?: TwPageTypeOmit
    seoArticleType?: SeoArticleTypeOmit
    blogDescription?: BlogDescriptionOmit
    user?: UserOmit
    tourOrder?: TourOrderOmit
    orderTraveler?: OrderTravelerOmit
    orderPayment?: OrderPaymentOmit
    orderDocument?: OrderDocumentOmit
    orderNote?: OrderNoteOmit
    twOrder?: TwOrderOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    orders: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | UserCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TourOrderWhereInput
  }


  /**
   * Count Type TourOrderCountOutputType
   */

  export type TourOrderCountOutputType = {
    travelers: number
    payments: number
    documents: number
    notes: number
  }

  export type TourOrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    travelers?: boolean | TourOrderCountOutputTypeCountTravelersArgs
    payments?: boolean | TourOrderCountOutputTypeCountPaymentsArgs
    documents?: boolean | TourOrderCountOutputTypeCountDocumentsArgs
    notes?: boolean | TourOrderCountOutputTypeCountNotesArgs
  }

  // Custom InputTypes
  /**
   * TourOrderCountOutputType without action
   */
  export type TourOrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrderCountOutputType
     */
    select?: TourOrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TourOrderCountOutputType without action
   */
  export type TourOrderCountOutputTypeCountTravelersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderTravelerWhereInput
  }

  /**
   * TourOrderCountOutputType without action
   */
  export type TourOrderCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderPaymentWhereInput
  }

  /**
   * TourOrderCountOutputType without action
   */
  export type TourOrderCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderDocumentWhereInput
  }

  /**
   * TourOrderCountOutputType without action
   */
  export type TourOrderCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderNoteWhereInput
  }


  /**
   * Models
   */

  /**
   * Model ProductPool
   */

  export type AggregateProductPool = {
    _count: ProductPoolCountAggregateOutputType | null
    _avg: ProductPoolAvgAggregateOutputType | null
    _sum: ProductPoolSumAggregateOutputType | null
    _min: ProductPoolMinAggregateOutputType | null
    _max: ProductPoolMaxAggregateOutputType | null
  }

  export type ProductPoolAvgAggregateOutputType = {
    id: number | null
    supplierId: number | null
    productRunningId: number | null
    productId: number | null
    periodId: number | null
    productSubCategoryId: number | null
    productPrice: Decimal | null
    productPriceCompare: Decimal | null
    productHasOneCountry: number | null
    productMainCountryId: number | null
    productDurationDay: number | null
    productDurationNight: number | null
    productFreeDay: number | null
    productMealAmount: number | null
    productHotelStar: number | null
    productHasVisa: number | null
    productVisaPrice: Decimal | null
    productHasActivePeriods: number | null
    productIsRecommended: number | null
    periodIsChannelTwpOnlineBooking: number | null
    periodPriceAdultDouble: Decimal | null
    periodPriceAdultSingle: Decimal | null
    periodPriceAdultTripple: Decimal | null
    periodPriceChildNoBed: Decimal | null
    periodPriceChildBed: Decimal | null
    periodPriceInfant: Decimal | null
    periodPriceJoinLand: Decimal | null
    periodPriceAdultDoubleCompare: Decimal | null
    periodPriceAdultSingleCompare: Decimal | null
    periodPriceAdultTrippleCompare: Decimal | null
    periodPriceChildNoBedCompare: Decimal | null
    periodPriceChildBedCompare: Decimal | null
    periodPriceInfantCompare: Decimal | null
    periodPriceJoinLandCompare: Decimal | null
    periodDeposit: Decimal | null
    periodCommission: Decimal | null
    periodCommissionCompany: Decimal | null
    periodCommissionSeller: Decimal | null
    periodQuantity: number | null
    periodQuantityRemaining: number | null
    periodSellStatusCode: number | null
    periodIsActive: number | null
    periodDeal: number | null
    periodConfig: number | null
    periodInstallmentCount: number | null
    periodTransportationCategoryId: number | null
    periodGoTransportationId: number | null
    periodBackTransportationId: number | null
  }

  export type ProductPoolSumAggregateOutputType = {
    id: number | null
    supplierId: number | null
    productRunningId: number | null
    productId: number | null
    periodId: number | null
    productSubCategoryId: number | null
    productPrice: Decimal | null
    productPriceCompare: Decimal | null
    productHasOneCountry: number | null
    productMainCountryId: number | null
    productDurationDay: number | null
    productDurationNight: number | null
    productFreeDay: number | null
    productMealAmount: number | null
    productHotelStar: number | null
    productHasVisa: number | null
    productVisaPrice: Decimal | null
    productHasActivePeriods: number | null
    productIsRecommended: number | null
    periodIsChannelTwpOnlineBooking: number | null
    periodPriceAdultDouble: Decimal | null
    periodPriceAdultSingle: Decimal | null
    periodPriceAdultTripple: Decimal | null
    periodPriceChildNoBed: Decimal | null
    periodPriceChildBed: Decimal | null
    periodPriceInfant: Decimal | null
    periodPriceJoinLand: Decimal | null
    periodPriceAdultDoubleCompare: Decimal | null
    periodPriceAdultSingleCompare: Decimal | null
    periodPriceAdultTrippleCompare: Decimal | null
    periodPriceChildNoBedCompare: Decimal | null
    periodPriceChildBedCompare: Decimal | null
    periodPriceInfantCompare: Decimal | null
    periodPriceJoinLandCompare: Decimal | null
    periodDeposit: Decimal | null
    periodCommission: Decimal | null
    periodCommissionCompany: Decimal | null
    periodCommissionSeller: Decimal | null
    periodQuantity: number | null
    periodQuantityRemaining: number | null
    periodSellStatusCode: number | null
    periodIsActive: number | null
    periodDeal: number | null
    periodConfig: number | null
    periodInstallmentCount: number | null
    periodTransportationCategoryId: number | null
    periodGoTransportationId: number | null
    periodBackTransportationId: number | null
  }

  export type ProductPoolMinAggregateOutputType = {
    id: number | null
    supplierId: number | null
    productRunningId: number | null
    productId: number | null
    periodId: number | null
    productSubCategoryId: number | null
    productTourCode: string | null
    productTourwowCode: string | null
    productTwUrlPath: string | null
    productName: string | null
    productStartAt: Date | null
    productPrice: Decimal | null
    productPriceCompare: Decimal | null
    productHasOneCountry: number | null
    productMainCountryId: number | null
    productMainCountryNameTh: string | null
    productMainCountryNameEn: string | null
    productCountries: string | null
    productCountrySubUnits: string | null
    productTags: string | null
    productTagsJson: string | null
    productDurationDay: number | null
    productDurationNight: number | null
    productDurationDayAndNight: string | null
    productFreeDay: number | null
    productMealAmount: number | null
    productHotelStar: number | null
    productHasVisa: number | null
    productVisaPrice: Decimal | null
    productHilightDescription: string | null
    productSubCategoryLabel: string | null
    productBannerUrl: string | null
    productHasActivePeriods: number | null
    productIsRecommended: number | null
    periodGroupCode: string | null
    periodStartAt: Date | null
    periodEndAt: Date | null
    periodIsChannelTwpOnlineBooking: number | null
    periodPriceAdultDouble: Decimal | null
    periodPriceAdultSingle: Decimal | null
    periodPriceAdultTripple: Decimal | null
    periodPriceChildNoBed: Decimal | null
    periodPriceChildBed: Decimal | null
    periodPriceInfant: Decimal | null
    periodPriceJoinLand: Decimal | null
    periodPriceAdultDoubleCompare: Decimal | null
    periodPriceAdultSingleCompare: Decimal | null
    periodPriceAdultTrippleCompare: Decimal | null
    periodPriceChildNoBedCompare: Decimal | null
    periodPriceChildBedCompare: Decimal | null
    periodPriceInfantCompare: Decimal | null
    periodPriceJoinLandCompare: Decimal | null
    periodDeposit: Decimal | null
    periodCommission: Decimal | null
    periodCommissionCompany: Decimal | null
    periodCommissionSeller: Decimal | null
    periodQuantity: number | null
    periodQuantityRemaining: number | null
    periodSellStatusCode: number | null
    periodIsActive: number | null
    periodDeal: number | null
    periodConfig: number | null
    periodInstallmentCount: number | null
    periodTransportationCategoryId: number | null
    periodTransportationCategoryName: string | null
    periodGoTransportationId: number | null
    periodGoTransportationNameEn: string | null
    periodGoTransportationCode: string | null
    periodGoAirportArrival: string | null
    periodGoAirportDeparture: string | null
    periodGoFlightNumberArrival: string | null
    periodGoFlightNumberDeparture: string | null
    periodGoFlightTimeArrival: string | null
    periodGoFlightTimeDeparture: string | null
    periodBackTransportationId: number | null
    periodBackTransportationNameEn: string | null
    periodBackTransportationCode: string | null
    periodBackAirportArrival: string | null
    periodBackAirportDeparture: string | null
    periodBackFlightNumberArrival: string | null
    periodBackFlightNumberDeparture: string | null
    periodBackFlightTimeArrival: string | null
    periodBackFlightTimeDeparture: string | null
    createdAt: Date | null
  }

  export type ProductPoolMaxAggregateOutputType = {
    id: number | null
    supplierId: number | null
    productRunningId: number | null
    productId: number | null
    periodId: number | null
    productSubCategoryId: number | null
    productTourCode: string | null
    productTourwowCode: string | null
    productTwUrlPath: string | null
    productName: string | null
    productStartAt: Date | null
    productPrice: Decimal | null
    productPriceCompare: Decimal | null
    productHasOneCountry: number | null
    productMainCountryId: number | null
    productMainCountryNameTh: string | null
    productMainCountryNameEn: string | null
    productCountries: string | null
    productCountrySubUnits: string | null
    productTags: string | null
    productTagsJson: string | null
    productDurationDay: number | null
    productDurationNight: number | null
    productDurationDayAndNight: string | null
    productFreeDay: number | null
    productMealAmount: number | null
    productHotelStar: number | null
    productHasVisa: number | null
    productVisaPrice: Decimal | null
    productHilightDescription: string | null
    productSubCategoryLabel: string | null
    productBannerUrl: string | null
    productHasActivePeriods: number | null
    productIsRecommended: number | null
    periodGroupCode: string | null
    periodStartAt: Date | null
    periodEndAt: Date | null
    periodIsChannelTwpOnlineBooking: number | null
    periodPriceAdultDouble: Decimal | null
    periodPriceAdultSingle: Decimal | null
    periodPriceAdultTripple: Decimal | null
    periodPriceChildNoBed: Decimal | null
    periodPriceChildBed: Decimal | null
    periodPriceInfant: Decimal | null
    periodPriceJoinLand: Decimal | null
    periodPriceAdultDoubleCompare: Decimal | null
    periodPriceAdultSingleCompare: Decimal | null
    periodPriceAdultTrippleCompare: Decimal | null
    periodPriceChildNoBedCompare: Decimal | null
    periodPriceChildBedCompare: Decimal | null
    periodPriceInfantCompare: Decimal | null
    periodPriceJoinLandCompare: Decimal | null
    periodDeposit: Decimal | null
    periodCommission: Decimal | null
    periodCommissionCompany: Decimal | null
    periodCommissionSeller: Decimal | null
    periodQuantity: number | null
    periodQuantityRemaining: number | null
    periodSellStatusCode: number | null
    periodIsActive: number | null
    periodDeal: number | null
    periodConfig: number | null
    periodInstallmentCount: number | null
    periodTransportationCategoryId: number | null
    periodTransportationCategoryName: string | null
    periodGoTransportationId: number | null
    periodGoTransportationNameEn: string | null
    periodGoTransportationCode: string | null
    periodGoAirportArrival: string | null
    periodGoAirportDeparture: string | null
    periodGoFlightNumberArrival: string | null
    periodGoFlightNumberDeparture: string | null
    periodGoFlightTimeArrival: string | null
    periodGoFlightTimeDeparture: string | null
    periodBackTransportationId: number | null
    periodBackTransportationNameEn: string | null
    periodBackTransportationCode: string | null
    periodBackAirportArrival: string | null
    periodBackAirportDeparture: string | null
    periodBackFlightNumberArrival: string | null
    periodBackFlightNumberDeparture: string | null
    periodBackFlightTimeArrival: string | null
    periodBackFlightTimeDeparture: string | null
    createdAt: Date | null
  }

  export type ProductPoolCountAggregateOutputType = {
    id: number
    supplierId: number
    productRunningId: number
    productId: number
    periodId: number
    productSubCategoryId: number
    productTourCode: number
    productTourwowCode: number
    productTwUrlPath: number
    productName: number
    productStartAt: number
    productPrice: number
    productPriceCompare: number
    productHasOneCountry: number
    productMainCountryId: number
    productMainCountryNameTh: number
    productMainCountryNameEn: number
    productCountries: number
    productCountrySubUnits: number
    productTags: number
    productTagsJson: number
    productDurationDay: number
    productDurationNight: number
    productDurationDayAndNight: number
    productFreeDay: number
    productMealAmount: number
    productHotelStar: number
    productHasVisa: number
    productVisaPrice: number
    productHilightDescription: number
    productSubCategoryLabel: number
    productBannerUrl: number
    productHasActivePeriods: number
    productIsRecommended: number
    periodGroupCode: number
    periodStartAt: number
    periodEndAt: number
    periodIsChannelTwpOnlineBooking: number
    periodPriceAdultDouble: number
    periodPriceAdultSingle: number
    periodPriceAdultTripple: number
    periodPriceChildNoBed: number
    periodPriceChildBed: number
    periodPriceInfant: number
    periodPriceJoinLand: number
    periodPriceAdultDoubleCompare: number
    periodPriceAdultSingleCompare: number
    periodPriceAdultTrippleCompare: number
    periodPriceChildNoBedCompare: number
    periodPriceChildBedCompare: number
    periodPriceInfantCompare: number
    periodPriceJoinLandCompare: number
    periodDeposit: number
    periodCommission: number
    periodCommissionCompany: number
    periodCommissionSeller: number
    periodQuantity: number
    periodQuantityRemaining: number
    periodSellStatusCode: number
    periodIsActive: number
    periodDeal: number
    periodConfig: number
    periodInstallmentCount: number
    periodTransportationCategoryId: number
    periodTransportationCategoryName: number
    periodGoTransportationId: number
    periodGoTransportationNameEn: number
    periodGoTransportationCode: number
    periodGoAirportArrival: number
    periodGoAirportDeparture: number
    periodGoFlightNumberArrival: number
    periodGoFlightNumberDeparture: number
    periodGoFlightTimeArrival: number
    periodGoFlightTimeDeparture: number
    periodBackTransportationId: number
    periodBackTransportationNameEn: number
    periodBackTransportationCode: number
    periodBackAirportArrival: number
    periodBackAirportDeparture: number
    periodBackFlightNumberArrival: number
    periodBackFlightNumberDeparture: number
    periodBackFlightTimeArrival: number
    periodBackFlightTimeDeparture: number
    createdAt: number
    _all: number
  }


  export type ProductPoolAvgAggregateInputType = {
    id?: true
    supplierId?: true
    productRunningId?: true
    productId?: true
    periodId?: true
    productSubCategoryId?: true
    productPrice?: true
    productPriceCompare?: true
    productHasOneCountry?: true
    productMainCountryId?: true
    productDurationDay?: true
    productDurationNight?: true
    productFreeDay?: true
    productMealAmount?: true
    productHotelStar?: true
    productHasVisa?: true
    productVisaPrice?: true
    productHasActivePeriods?: true
    productIsRecommended?: true
    periodIsChannelTwpOnlineBooking?: true
    periodPriceAdultDouble?: true
    periodPriceAdultSingle?: true
    periodPriceAdultTripple?: true
    periodPriceChildNoBed?: true
    periodPriceChildBed?: true
    periodPriceInfant?: true
    periodPriceJoinLand?: true
    periodPriceAdultDoubleCompare?: true
    periodPriceAdultSingleCompare?: true
    periodPriceAdultTrippleCompare?: true
    periodPriceChildNoBedCompare?: true
    periodPriceChildBedCompare?: true
    periodPriceInfantCompare?: true
    periodPriceJoinLandCompare?: true
    periodDeposit?: true
    periodCommission?: true
    periodCommissionCompany?: true
    periodCommissionSeller?: true
    periodQuantity?: true
    periodQuantityRemaining?: true
    periodSellStatusCode?: true
    periodIsActive?: true
    periodDeal?: true
    periodConfig?: true
    periodInstallmentCount?: true
    periodTransportationCategoryId?: true
    periodGoTransportationId?: true
    periodBackTransportationId?: true
  }

  export type ProductPoolSumAggregateInputType = {
    id?: true
    supplierId?: true
    productRunningId?: true
    productId?: true
    periodId?: true
    productSubCategoryId?: true
    productPrice?: true
    productPriceCompare?: true
    productHasOneCountry?: true
    productMainCountryId?: true
    productDurationDay?: true
    productDurationNight?: true
    productFreeDay?: true
    productMealAmount?: true
    productHotelStar?: true
    productHasVisa?: true
    productVisaPrice?: true
    productHasActivePeriods?: true
    productIsRecommended?: true
    periodIsChannelTwpOnlineBooking?: true
    periodPriceAdultDouble?: true
    periodPriceAdultSingle?: true
    periodPriceAdultTripple?: true
    periodPriceChildNoBed?: true
    periodPriceChildBed?: true
    periodPriceInfant?: true
    periodPriceJoinLand?: true
    periodPriceAdultDoubleCompare?: true
    periodPriceAdultSingleCompare?: true
    periodPriceAdultTrippleCompare?: true
    periodPriceChildNoBedCompare?: true
    periodPriceChildBedCompare?: true
    periodPriceInfantCompare?: true
    periodPriceJoinLandCompare?: true
    periodDeposit?: true
    periodCommission?: true
    periodCommissionCompany?: true
    periodCommissionSeller?: true
    periodQuantity?: true
    periodQuantityRemaining?: true
    periodSellStatusCode?: true
    periodIsActive?: true
    periodDeal?: true
    periodConfig?: true
    periodInstallmentCount?: true
    periodTransportationCategoryId?: true
    periodGoTransportationId?: true
    periodBackTransportationId?: true
  }

  export type ProductPoolMinAggregateInputType = {
    id?: true
    supplierId?: true
    productRunningId?: true
    productId?: true
    periodId?: true
    productSubCategoryId?: true
    productTourCode?: true
    productTourwowCode?: true
    productTwUrlPath?: true
    productName?: true
    productStartAt?: true
    productPrice?: true
    productPriceCompare?: true
    productHasOneCountry?: true
    productMainCountryId?: true
    productMainCountryNameTh?: true
    productMainCountryNameEn?: true
    productCountries?: true
    productCountrySubUnits?: true
    productTags?: true
    productTagsJson?: true
    productDurationDay?: true
    productDurationNight?: true
    productDurationDayAndNight?: true
    productFreeDay?: true
    productMealAmount?: true
    productHotelStar?: true
    productHasVisa?: true
    productVisaPrice?: true
    productHilightDescription?: true
    productSubCategoryLabel?: true
    productBannerUrl?: true
    productHasActivePeriods?: true
    productIsRecommended?: true
    periodGroupCode?: true
    periodStartAt?: true
    periodEndAt?: true
    periodIsChannelTwpOnlineBooking?: true
    periodPriceAdultDouble?: true
    periodPriceAdultSingle?: true
    periodPriceAdultTripple?: true
    periodPriceChildNoBed?: true
    periodPriceChildBed?: true
    periodPriceInfant?: true
    periodPriceJoinLand?: true
    periodPriceAdultDoubleCompare?: true
    periodPriceAdultSingleCompare?: true
    periodPriceAdultTrippleCompare?: true
    periodPriceChildNoBedCompare?: true
    periodPriceChildBedCompare?: true
    periodPriceInfantCompare?: true
    periodPriceJoinLandCompare?: true
    periodDeposit?: true
    periodCommission?: true
    periodCommissionCompany?: true
    periodCommissionSeller?: true
    periodQuantity?: true
    periodQuantityRemaining?: true
    periodSellStatusCode?: true
    periodIsActive?: true
    periodDeal?: true
    periodConfig?: true
    periodInstallmentCount?: true
    periodTransportationCategoryId?: true
    periodTransportationCategoryName?: true
    periodGoTransportationId?: true
    periodGoTransportationNameEn?: true
    periodGoTransportationCode?: true
    periodGoAirportArrival?: true
    periodGoAirportDeparture?: true
    periodGoFlightNumberArrival?: true
    periodGoFlightNumberDeparture?: true
    periodGoFlightTimeArrival?: true
    periodGoFlightTimeDeparture?: true
    periodBackTransportationId?: true
    periodBackTransportationNameEn?: true
    periodBackTransportationCode?: true
    periodBackAirportArrival?: true
    periodBackAirportDeparture?: true
    periodBackFlightNumberArrival?: true
    periodBackFlightNumberDeparture?: true
    periodBackFlightTimeArrival?: true
    periodBackFlightTimeDeparture?: true
    createdAt?: true
  }

  export type ProductPoolMaxAggregateInputType = {
    id?: true
    supplierId?: true
    productRunningId?: true
    productId?: true
    periodId?: true
    productSubCategoryId?: true
    productTourCode?: true
    productTourwowCode?: true
    productTwUrlPath?: true
    productName?: true
    productStartAt?: true
    productPrice?: true
    productPriceCompare?: true
    productHasOneCountry?: true
    productMainCountryId?: true
    productMainCountryNameTh?: true
    productMainCountryNameEn?: true
    productCountries?: true
    productCountrySubUnits?: true
    productTags?: true
    productTagsJson?: true
    productDurationDay?: true
    productDurationNight?: true
    productDurationDayAndNight?: true
    productFreeDay?: true
    productMealAmount?: true
    productHotelStar?: true
    productHasVisa?: true
    productVisaPrice?: true
    productHilightDescription?: true
    productSubCategoryLabel?: true
    productBannerUrl?: true
    productHasActivePeriods?: true
    productIsRecommended?: true
    periodGroupCode?: true
    periodStartAt?: true
    periodEndAt?: true
    periodIsChannelTwpOnlineBooking?: true
    periodPriceAdultDouble?: true
    periodPriceAdultSingle?: true
    periodPriceAdultTripple?: true
    periodPriceChildNoBed?: true
    periodPriceChildBed?: true
    periodPriceInfant?: true
    periodPriceJoinLand?: true
    periodPriceAdultDoubleCompare?: true
    periodPriceAdultSingleCompare?: true
    periodPriceAdultTrippleCompare?: true
    periodPriceChildNoBedCompare?: true
    periodPriceChildBedCompare?: true
    periodPriceInfantCompare?: true
    periodPriceJoinLandCompare?: true
    periodDeposit?: true
    periodCommission?: true
    periodCommissionCompany?: true
    periodCommissionSeller?: true
    periodQuantity?: true
    periodQuantityRemaining?: true
    periodSellStatusCode?: true
    periodIsActive?: true
    periodDeal?: true
    periodConfig?: true
    periodInstallmentCount?: true
    periodTransportationCategoryId?: true
    periodTransportationCategoryName?: true
    periodGoTransportationId?: true
    periodGoTransportationNameEn?: true
    periodGoTransportationCode?: true
    periodGoAirportArrival?: true
    periodGoAirportDeparture?: true
    periodGoFlightNumberArrival?: true
    periodGoFlightNumberDeparture?: true
    periodGoFlightTimeArrival?: true
    periodGoFlightTimeDeparture?: true
    periodBackTransportationId?: true
    periodBackTransportationNameEn?: true
    periodBackTransportationCode?: true
    periodBackAirportArrival?: true
    periodBackAirportDeparture?: true
    periodBackFlightNumberArrival?: true
    periodBackFlightNumberDeparture?: true
    periodBackFlightTimeArrival?: true
    periodBackFlightTimeDeparture?: true
    createdAt?: true
  }

  export type ProductPoolCountAggregateInputType = {
    id?: true
    supplierId?: true
    productRunningId?: true
    productId?: true
    periodId?: true
    productSubCategoryId?: true
    productTourCode?: true
    productTourwowCode?: true
    productTwUrlPath?: true
    productName?: true
    productStartAt?: true
    productPrice?: true
    productPriceCompare?: true
    productHasOneCountry?: true
    productMainCountryId?: true
    productMainCountryNameTh?: true
    productMainCountryNameEn?: true
    productCountries?: true
    productCountrySubUnits?: true
    productTags?: true
    productTagsJson?: true
    productDurationDay?: true
    productDurationNight?: true
    productDurationDayAndNight?: true
    productFreeDay?: true
    productMealAmount?: true
    productHotelStar?: true
    productHasVisa?: true
    productVisaPrice?: true
    productHilightDescription?: true
    productSubCategoryLabel?: true
    productBannerUrl?: true
    productHasActivePeriods?: true
    productIsRecommended?: true
    periodGroupCode?: true
    periodStartAt?: true
    periodEndAt?: true
    periodIsChannelTwpOnlineBooking?: true
    periodPriceAdultDouble?: true
    periodPriceAdultSingle?: true
    periodPriceAdultTripple?: true
    periodPriceChildNoBed?: true
    periodPriceChildBed?: true
    periodPriceInfant?: true
    periodPriceJoinLand?: true
    periodPriceAdultDoubleCompare?: true
    periodPriceAdultSingleCompare?: true
    periodPriceAdultTrippleCompare?: true
    periodPriceChildNoBedCompare?: true
    periodPriceChildBedCompare?: true
    periodPriceInfantCompare?: true
    periodPriceJoinLandCompare?: true
    periodDeposit?: true
    periodCommission?: true
    periodCommissionCompany?: true
    periodCommissionSeller?: true
    periodQuantity?: true
    periodQuantityRemaining?: true
    periodSellStatusCode?: true
    periodIsActive?: true
    periodDeal?: true
    periodConfig?: true
    periodInstallmentCount?: true
    periodTransportationCategoryId?: true
    periodTransportationCategoryName?: true
    periodGoTransportationId?: true
    periodGoTransportationNameEn?: true
    periodGoTransportationCode?: true
    periodGoAirportArrival?: true
    periodGoAirportDeparture?: true
    periodGoFlightNumberArrival?: true
    periodGoFlightNumberDeparture?: true
    periodGoFlightTimeArrival?: true
    periodGoFlightTimeDeparture?: true
    periodBackTransportationId?: true
    periodBackTransportationNameEn?: true
    periodBackTransportationCode?: true
    periodBackAirportArrival?: true
    periodBackAirportDeparture?: true
    periodBackFlightNumberArrival?: true
    periodBackFlightNumberDeparture?: true
    periodBackFlightTimeArrival?: true
    periodBackFlightTimeDeparture?: true
    createdAt?: true
    _all?: true
  }

  export type ProductPoolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductPool to aggregate.
     */
    where?: ProductPoolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductPools to fetch.
     */
    orderBy?: ProductPoolOrderByWithRelationInput | ProductPoolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductPoolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductPools from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductPools.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductPools
    **/
    _count?: true | ProductPoolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductPoolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductPoolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductPoolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductPoolMaxAggregateInputType
  }

  export type GetProductPoolAggregateType<T extends ProductPoolAggregateArgs> = {
        [P in keyof T & keyof AggregateProductPool]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductPool[P]>
      : GetScalarType<T[P], AggregateProductPool[P]>
  }




  export type ProductPoolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductPoolWhereInput
    orderBy?: ProductPoolOrderByWithAggregationInput | ProductPoolOrderByWithAggregationInput[]
    by: ProductPoolScalarFieldEnum[] | ProductPoolScalarFieldEnum
    having?: ProductPoolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductPoolCountAggregateInputType | true
    _avg?: ProductPoolAvgAggregateInputType
    _sum?: ProductPoolSumAggregateInputType
    _min?: ProductPoolMinAggregateInputType
    _max?: ProductPoolMaxAggregateInputType
  }

  export type ProductPoolGroupByOutputType = {
    id: number
    supplierId: number
    productRunningId: number
    productId: number
    periodId: number
    productSubCategoryId: number
    productTourCode: string
    productTourwowCode: string
    productTwUrlPath: string
    productName: string
    productStartAt: Date
    productPrice: Decimal
    productPriceCompare: Decimal | null
    productHasOneCountry: number
    productMainCountryId: number
    productMainCountryNameTh: string
    productMainCountryNameEn: string
    productCountries: string
    productCountrySubUnits: string
    productTags: string
    productTagsJson: string
    productDurationDay: number
    productDurationNight: number
    productDurationDayAndNight: string
    productFreeDay: number | null
    productMealAmount: number
    productHotelStar: number
    productHasVisa: number
    productVisaPrice: Decimal | null
    productHilightDescription: string
    productSubCategoryLabel: string
    productBannerUrl: string
    productHasActivePeriods: number
    productIsRecommended: number
    periodGroupCode: string | null
    periodStartAt: Date
    periodEndAt: Date
    periodIsChannelTwpOnlineBooking: number
    periodPriceAdultDouble: Decimal
    periodPriceAdultSingle: Decimal | null
    periodPriceAdultTripple: Decimal | null
    periodPriceChildNoBed: Decimal | null
    periodPriceChildBed: Decimal | null
    periodPriceInfant: Decimal | null
    periodPriceJoinLand: Decimal | null
    periodPriceAdultDoubleCompare: Decimal | null
    periodPriceAdultSingleCompare: Decimal | null
    periodPriceAdultTrippleCompare: Decimal | null
    periodPriceChildNoBedCompare: Decimal | null
    periodPriceChildBedCompare: Decimal | null
    periodPriceInfantCompare: Decimal | null
    periodPriceJoinLandCompare: Decimal | null
    periodDeposit: Decimal | null
    periodCommission: Decimal
    periodCommissionCompany: Decimal
    periodCommissionSeller: Decimal
    periodQuantity: number
    periodQuantityRemaining: number
    periodSellStatusCode: number
    periodIsActive: number
    periodDeal: number
    periodConfig: number
    periodInstallmentCount: number
    periodTransportationCategoryId: number
    periodTransportationCategoryName: string
    periodGoTransportationId: number
    periodGoTransportationNameEn: string
    periodGoTransportationCode: string
    periodGoAirportArrival: string | null
    periodGoAirportDeparture: string | null
    periodGoFlightNumberArrival: string | null
    periodGoFlightNumberDeparture: string | null
    periodGoFlightTimeArrival: string | null
    periodGoFlightTimeDeparture: string | null
    periodBackTransportationId: number
    periodBackTransportationNameEn: string
    periodBackTransportationCode: string
    periodBackAirportArrival: string | null
    periodBackAirportDeparture: string | null
    periodBackFlightNumberArrival: string | null
    periodBackFlightNumberDeparture: string | null
    periodBackFlightTimeArrival: string | null
    periodBackFlightTimeDeparture: string | null
    createdAt: Date
    _count: ProductPoolCountAggregateOutputType | null
    _avg: ProductPoolAvgAggregateOutputType | null
    _sum: ProductPoolSumAggregateOutputType | null
    _min: ProductPoolMinAggregateOutputType | null
    _max: ProductPoolMaxAggregateOutputType | null
  }

  type GetProductPoolGroupByPayload<T extends ProductPoolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductPoolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductPoolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductPoolGroupByOutputType[P]>
            : GetScalarType<T[P], ProductPoolGroupByOutputType[P]>
        }
      >
    >


  export type ProductPoolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    productRunningId?: boolean
    productId?: boolean
    periodId?: boolean
    productSubCategoryId?: boolean
    productTourCode?: boolean
    productTourwowCode?: boolean
    productTwUrlPath?: boolean
    productName?: boolean
    productStartAt?: boolean
    productPrice?: boolean
    productPriceCompare?: boolean
    productHasOneCountry?: boolean
    productMainCountryId?: boolean
    productMainCountryNameTh?: boolean
    productMainCountryNameEn?: boolean
    productCountries?: boolean
    productCountrySubUnits?: boolean
    productTags?: boolean
    productTagsJson?: boolean
    productDurationDay?: boolean
    productDurationNight?: boolean
    productDurationDayAndNight?: boolean
    productFreeDay?: boolean
    productMealAmount?: boolean
    productHotelStar?: boolean
    productHasVisa?: boolean
    productVisaPrice?: boolean
    productHilightDescription?: boolean
    productSubCategoryLabel?: boolean
    productBannerUrl?: boolean
    productHasActivePeriods?: boolean
    productIsRecommended?: boolean
    periodGroupCode?: boolean
    periodStartAt?: boolean
    periodEndAt?: boolean
    periodIsChannelTwpOnlineBooking?: boolean
    periodPriceAdultDouble?: boolean
    periodPriceAdultSingle?: boolean
    periodPriceAdultTripple?: boolean
    periodPriceChildNoBed?: boolean
    periodPriceChildBed?: boolean
    periodPriceInfant?: boolean
    periodPriceJoinLand?: boolean
    periodPriceAdultDoubleCompare?: boolean
    periodPriceAdultSingleCompare?: boolean
    periodPriceAdultTrippleCompare?: boolean
    periodPriceChildNoBedCompare?: boolean
    periodPriceChildBedCompare?: boolean
    periodPriceInfantCompare?: boolean
    periodPriceJoinLandCompare?: boolean
    periodDeposit?: boolean
    periodCommission?: boolean
    periodCommissionCompany?: boolean
    periodCommissionSeller?: boolean
    periodQuantity?: boolean
    periodQuantityRemaining?: boolean
    periodSellStatusCode?: boolean
    periodIsActive?: boolean
    periodDeal?: boolean
    periodConfig?: boolean
    periodInstallmentCount?: boolean
    periodTransportationCategoryId?: boolean
    periodTransportationCategoryName?: boolean
    periodGoTransportationId?: boolean
    periodGoTransportationNameEn?: boolean
    periodGoTransportationCode?: boolean
    periodGoAirportArrival?: boolean
    periodGoAirportDeparture?: boolean
    periodGoFlightNumberArrival?: boolean
    periodGoFlightNumberDeparture?: boolean
    periodGoFlightTimeArrival?: boolean
    periodGoFlightTimeDeparture?: boolean
    periodBackTransportationId?: boolean
    periodBackTransportationNameEn?: boolean
    periodBackTransportationCode?: boolean
    periodBackAirportArrival?: boolean
    periodBackAirportDeparture?: boolean
    periodBackFlightNumberArrival?: boolean
    periodBackFlightNumberDeparture?: boolean
    periodBackFlightTimeArrival?: boolean
    periodBackFlightTimeDeparture?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["productPool"]>

  export type ProductPoolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    productRunningId?: boolean
    productId?: boolean
    periodId?: boolean
    productSubCategoryId?: boolean
    productTourCode?: boolean
    productTourwowCode?: boolean
    productTwUrlPath?: boolean
    productName?: boolean
    productStartAt?: boolean
    productPrice?: boolean
    productPriceCompare?: boolean
    productHasOneCountry?: boolean
    productMainCountryId?: boolean
    productMainCountryNameTh?: boolean
    productMainCountryNameEn?: boolean
    productCountries?: boolean
    productCountrySubUnits?: boolean
    productTags?: boolean
    productTagsJson?: boolean
    productDurationDay?: boolean
    productDurationNight?: boolean
    productDurationDayAndNight?: boolean
    productFreeDay?: boolean
    productMealAmount?: boolean
    productHotelStar?: boolean
    productHasVisa?: boolean
    productVisaPrice?: boolean
    productHilightDescription?: boolean
    productSubCategoryLabel?: boolean
    productBannerUrl?: boolean
    productHasActivePeriods?: boolean
    productIsRecommended?: boolean
    periodGroupCode?: boolean
    periodStartAt?: boolean
    periodEndAt?: boolean
    periodIsChannelTwpOnlineBooking?: boolean
    periodPriceAdultDouble?: boolean
    periodPriceAdultSingle?: boolean
    periodPriceAdultTripple?: boolean
    periodPriceChildNoBed?: boolean
    periodPriceChildBed?: boolean
    periodPriceInfant?: boolean
    periodPriceJoinLand?: boolean
    periodPriceAdultDoubleCompare?: boolean
    periodPriceAdultSingleCompare?: boolean
    periodPriceAdultTrippleCompare?: boolean
    periodPriceChildNoBedCompare?: boolean
    periodPriceChildBedCompare?: boolean
    periodPriceInfantCompare?: boolean
    periodPriceJoinLandCompare?: boolean
    periodDeposit?: boolean
    periodCommission?: boolean
    periodCommissionCompany?: boolean
    periodCommissionSeller?: boolean
    periodQuantity?: boolean
    periodQuantityRemaining?: boolean
    periodSellStatusCode?: boolean
    periodIsActive?: boolean
    periodDeal?: boolean
    periodConfig?: boolean
    periodInstallmentCount?: boolean
    periodTransportationCategoryId?: boolean
    periodTransportationCategoryName?: boolean
    periodGoTransportationId?: boolean
    periodGoTransportationNameEn?: boolean
    periodGoTransportationCode?: boolean
    periodGoAirportArrival?: boolean
    periodGoAirportDeparture?: boolean
    periodGoFlightNumberArrival?: boolean
    periodGoFlightNumberDeparture?: boolean
    periodGoFlightTimeArrival?: boolean
    periodGoFlightTimeDeparture?: boolean
    periodBackTransportationId?: boolean
    periodBackTransportationNameEn?: boolean
    periodBackTransportationCode?: boolean
    periodBackAirportArrival?: boolean
    periodBackAirportDeparture?: boolean
    periodBackFlightNumberArrival?: boolean
    periodBackFlightNumberDeparture?: boolean
    periodBackFlightTimeArrival?: boolean
    periodBackFlightTimeDeparture?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["productPool"]>

  export type ProductPoolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supplierId?: boolean
    productRunningId?: boolean
    productId?: boolean
    periodId?: boolean
    productSubCategoryId?: boolean
    productTourCode?: boolean
    productTourwowCode?: boolean
    productTwUrlPath?: boolean
    productName?: boolean
    productStartAt?: boolean
    productPrice?: boolean
    productPriceCompare?: boolean
    productHasOneCountry?: boolean
    productMainCountryId?: boolean
    productMainCountryNameTh?: boolean
    productMainCountryNameEn?: boolean
    productCountries?: boolean
    productCountrySubUnits?: boolean
    productTags?: boolean
    productTagsJson?: boolean
    productDurationDay?: boolean
    productDurationNight?: boolean
    productDurationDayAndNight?: boolean
    productFreeDay?: boolean
    productMealAmount?: boolean
    productHotelStar?: boolean
    productHasVisa?: boolean
    productVisaPrice?: boolean
    productHilightDescription?: boolean
    productSubCategoryLabel?: boolean
    productBannerUrl?: boolean
    productHasActivePeriods?: boolean
    productIsRecommended?: boolean
    periodGroupCode?: boolean
    periodStartAt?: boolean
    periodEndAt?: boolean
    periodIsChannelTwpOnlineBooking?: boolean
    periodPriceAdultDouble?: boolean
    periodPriceAdultSingle?: boolean
    periodPriceAdultTripple?: boolean
    periodPriceChildNoBed?: boolean
    periodPriceChildBed?: boolean
    periodPriceInfant?: boolean
    periodPriceJoinLand?: boolean
    periodPriceAdultDoubleCompare?: boolean
    periodPriceAdultSingleCompare?: boolean
    periodPriceAdultTrippleCompare?: boolean
    periodPriceChildNoBedCompare?: boolean
    periodPriceChildBedCompare?: boolean
    periodPriceInfantCompare?: boolean
    periodPriceJoinLandCompare?: boolean
    periodDeposit?: boolean
    periodCommission?: boolean
    periodCommissionCompany?: boolean
    periodCommissionSeller?: boolean
    periodQuantity?: boolean
    periodQuantityRemaining?: boolean
    periodSellStatusCode?: boolean
    periodIsActive?: boolean
    periodDeal?: boolean
    periodConfig?: boolean
    periodInstallmentCount?: boolean
    periodTransportationCategoryId?: boolean
    periodTransportationCategoryName?: boolean
    periodGoTransportationId?: boolean
    periodGoTransportationNameEn?: boolean
    periodGoTransportationCode?: boolean
    periodGoAirportArrival?: boolean
    periodGoAirportDeparture?: boolean
    periodGoFlightNumberArrival?: boolean
    periodGoFlightNumberDeparture?: boolean
    periodGoFlightTimeArrival?: boolean
    periodGoFlightTimeDeparture?: boolean
    periodBackTransportationId?: boolean
    periodBackTransportationNameEn?: boolean
    periodBackTransportationCode?: boolean
    periodBackAirportArrival?: boolean
    periodBackAirportDeparture?: boolean
    periodBackFlightNumberArrival?: boolean
    periodBackFlightNumberDeparture?: boolean
    periodBackFlightTimeArrival?: boolean
    periodBackFlightTimeDeparture?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["productPool"]>

  export type ProductPoolSelectScalar = {
    id?: boolean
    supplierId?: boolean
    productRunningId?: boolean
    productId?: boolean
    periodId?: boolean
    productSubCategoryId?: boolean
    productTourCode?: boolean
    productTourwowCode?: boolean
    productTwUrlPath?: boolean
    productName?: boolean
    productStartAt?: boolean
    productPrice?: boolean
    productPriceCompare?: boolean
    productHasOneCountry?: boolean
    productMainCountryId?: boolean
    productMainCountryNameTh?: boolean
    productMainCountryNameEn?: boolean
    productCountries?: boolean
    productCountrySubUnits?: boolean
    productTags?: boolean
    productTagsJson?: boolean
    productDurationDay?: boolean
    productDurationNight?: boolean
    productDurationDayAndNight?: boolean
    productFreeDay?: boolean
    productMealAmount?: boolean
    productHotelStar?: boolean
    productHasVisa?: boolean
    productVisaPrice?: boolean
    productHilightDescription?: boolean
    productSubCategoryLabel?: boolean
    productBannerUrl?: boolean
    productHasActivePeriods?: boolean
    productIsRecommended?: boolean
    periodGroupCode?: boolean
    periodStartAt?: boolean
    periodEndAt?: boolean
    periodIsChannelTwpOnlineBooking?: boolean
    periodPriceAdultDouble?: boolean
    periodPriceAdultSingle?: boolean
    periodPriceAdultTripple?: boolean
    periodPriceChildNoBed?: boolean
    periodPriceChildBed?: boolean
    periodPriceInfant?: boolean
    periodPriceJoinLand?: boolean
    periodPriceAdultDoubleCompare?: boolean
    periodPriceAdultSingleCompare?: boolean
    periodPriceAdultTrippleCompare?: boolean
    periodPriceChildNoBedCompare?: boolean
    periodPriceChildBedCompare?: boolean
    periodPriceInfantCompare?: boolean
    periodPriceJoinLandCompare?: boolean
    periodDeposit?: boolean
    periodCommission?: boolean
    periodCommissionCompany?: boolean
    periodCommissionSeller?: boolean
    periodQuantity?: boolean
    periodQuantityRemaining?: boolean
    periodSellStatusCode?: boolean
    periodIsActive?: boolean
    periodDeal?: boolean
    periodConfig?: boolean
    periodInstallmentCount?: boolean
    periodTransportationCategoryId?: boolean
    periodTransportationCategoryName?: boolean
    periodGoTransportationId?: boolean
    periodGoTransportationNameEn?: boolean
    periodGoTransportationCode?: boolean
    periodGoAirportArrival?: boolean
    periodGoAirportDeparture?: boolean
    periodGoFlightNumberArrival?: boolean
    periodGoFlightNumberDeparture?: boolean
    periodGoFlightTimeArrival?: boolean
    periodGoFlightTimeDeparture?: boolean
    periodBackTransportationId?: boolean
    periodBackTransportationNameEn?: boolean
    periodBackTransportationCode?: boolean
    periodBackAirportArrival?: boolean
    periodBackAirportDeparture?: boolean
    periodBackFlightNumberArrival?: boolean
    periodBackFlightNumberDeparture?: boolean
    periodBackFlightTimeArrival?: boolean
    periodBackFlightTimeDeparture?: boolean
    createdAt?: boolean
  }

  export type ProductPoolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "supplierId" | "productRunningId" | "productId" | "periodId" | "productSubCategoryId" | "productTourCode" | "productTourwowCode" | "productTwUrlPath" | "productName" | "productStartAt" | "productPrice" | "productPriceCompare" | "productHasOneCountry" | "productMainCountryId" | "productMainCountryNameTh" | "productMainCountryNameEn" | "productCountries" | "productCountrySubUnits" | "productTags" | "productTagsJson" | "productDurationDay" | "productDurationNight" | "productDurationDayAndNight" | "productFreeDay" | "productMealAmount" | "productHotelStar" | "productHasVisa" | "productVisaPrice" | "productHilightDescription" | "productSubCategoryLabel" | "productBannerUrl" | "productHasActivePeriods" | "productIsRecommended" | "periodGroupCode" | "periodStartAt" | "periodEndAt" | "periodIsChannelTwpOnlineBooking" | "periodPriceAdultDouble" | "periodPriceAdultSingle" | "periodPriceAdultTripple" | "periodPriceChildNoBed" | "periodPriceChildBed" | "periodPriceInfant" | "periodPriceJoinLand" | "periodPriceAdultDoubleCompare" | "periodPriceAdultSingleCompare" | "periodPriceAdultTrippleCompare" | "periodPriceChildNoBedCompare" | "periodPriceChildBedCompare" | "periodPriceInfantCompare" | "periodPriceJoinLandCompare" | "periodDeposit" | "periodCommission" | "periodCommissionCompany" | "periodCommissionSeller" | "periodQuantity" | "periodQuantityRemaining" | "periodSellStatusCode" | "periodIsActive" | "periodDeal" | "periodConfig" | "periodInstallmentCount" | "periodTransportationCategoryId" | "periodTransportationCategoryName" | "periodGoTransportationId" | "periodGoTransportationNameEn" | "periodGoTransportationCode" | "periodGoAirportArrival" | "periodGoAirportDeparture" | "periodGoFlightNumberArrival" | "periodGoFlightNumberDeparture" | "periodGoFlightTimeArrival" | "periodGoFlightTimeDeparture" | "periodBackTransportationId" | "periodBackTransportationNameEn" | "periodBackTransportationCode" | "periodBackAirportArrival" | "periodBackAirportDeparture" | "periodBackFlightNumberArrival" | "periodBackFlightNumberDeparture" | "periodBackFlightTimeArrival" | "periodBackFlightTimeDeparture" | "createdAt", ExtArgs["result"]["productPool"]>

  export type $ProductPoolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductPool"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      supplierId: number
      productRunningId: number
      productId: number
      periodId: number
      productSubCategoryId: number
      productTourCode: string
      productTourwowCode: string
      productTwUrlPath: string
      productName: string
      productStartAt: Date
      productPrice: Prisma.Decimal
      productPriceCompare: Prisma.Decimal | null
      productHasOneCountry: number
      productMainCountryId: number
      productMainCountryNameTh: string
      productMainCountryNameEn: string
      productCountries: string
      productCountrySubUnits: string
      productTags: string
      productTagsJson: string
      productDurationDay: number
      productDurationNight: number
      productDurationDayAndNight: string
      productFreeDay: number | null
      productMealAmount: number
      productHotelStar: number
      productHasVisa: number
      productVisaPrice: Prisma.Decimal | null
      productHilightDescription: string
      productSubCategoryLabel: string
      productBannerUrl: string
      productHasActivePeriods: number
      productIsRecommended: number
      periodGroupCode: string | null
      periodStartAt: Date
      periodEndAt: Date
      periodIsChannelTwpOnlineBooking: number
      periodPriceAdultDouble: Prisma.Decimal
      periodPriceAdultSingle: Prisma.Decimal | null
      periodPriceAdultTripple: Prisma.Decimal | null
      periodPriceChildNoBed: Prisma.Decimal | null
      periodPriceChildBed: Prisma.Decimal | null
      periodPriceInfant: Prisma.Decimal | null
      periodPriceJoinLand: Prisma.Decimal | null
      periodPriceAdultDoubleCompare: Prisma.Decimal | null
      periodPriceAdultSingleCompare: Prisma.Decimal | null
      periodPriceAdultTrippleCompare: Prisma.Decimal | null
      periodPriceChildNoBedCompare: Prisma.Decimal | null
      periodPriceChildBedCompare: Prisma.Decimal | null
      periodPriceInfantCompare: Prisma.Decimal | null
      periodPriceJoinLandCompare: Prisma.Decimal | null
      periodDeposit: Prisma.Decimal | null
      periodCommission: Prisma.Decimal
      periodCommissionCompany: Prisma.Decimal
      periodCommissionSeller: Prisma.Decimal
      periodQuantity: number
      periodQuantityRemaining: number
      periodSellStatusCode: number
      periodIsActive: number
      periodDeal: number
      periodConfig: number
      periodInstallmentCount: number
      periodTransportationCategoryId: number
      periodTransportationCategoryName: string
      periodGoTransportationId: number
      periodGoTransportationNameEn: string
      periodGoTransportationCode: string
      periodGoAirportArrival: string | null
      periodGoAirportDeparture: string | null
      periodGoFlightNumberArrival: string | null
      periodGoFlightNumberDeparture: string | null
      periodGoFlightTimeArrival: string | null
      periodGoFlightTimeDeparture: string | null
      periodBackTransportationId: number
      periodBackTransportationNameEn: string
      periodBackTransportationCode: string
      periodBackAirportArrival: string | null
      periodBackAirportDeparture: string | null
      periodBackFlightNumberArrival: string | null
      periodBackFlightNumberDeparture: string | null
      periodBackFlightTimeArrival: string | null
      periodBackFlightTimeDeparture: string | null
      createdAt: Date
    }, ExtArgs["result"]["productPool"]>
    composites: {}
  }

  type ProductPoolGetPayload<S extends boolean | null | undefined | ProductPoolDefaultArgs> = $Result.GetResult<Prisma.$ProductPoolPayload, S>

  type ProductPoolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductPoolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductPoolCountAggregateInputType | true
    }

  export interface ProductPoolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductPool'], meta: { name: 'ProductPool' } }
    /**
     * Find zero or one ProductPool that matches the filter.
     * @param {ProductPoolFindUniqueArgs} args - Arguments to find a ProductPool
     * @example
     * // Get one ProductPool
     * const productPool = await prisma.productPool.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductPoolFindUniqueArgs>(args: SelectSubset<T, ProductPoolFindUniqueArgs<ExtArgs>>): Prisma__ProductPoolClient<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductPool that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductPoolFindUniqueOrThrowArgs} args - Arguments to find a ProductPool
     * @example
     * // Get one ProductPool
     * const productPool = await prisma.productPool.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductPoolFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductPoolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductPoolClient<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductPool that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPoolFindFirstArgs} args - Arguments to find a ProductPool
     * @example
     * // Get one ProductPool
     * const productPool = await prisma.productPool.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductPoolFindFirstArgs>(args?: SelectSubset<T, ProductPoolFindFirstArgs<ExtArgs>>): Prisma__ProductPoolClient<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductPool that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPoolFindFirstOrThrowArgs} args - Arguments to find a ProductPool
     * @example
     * // Get one ProductPool
     * const productPool = await prisma.productPool.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductPoolFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductPoolFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductPoolClient<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductPools that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPoolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductPools
     * const productPools = await prisma.productPool.findMany()
     * 
     * // Get first 10 ProductPools
     * const productPools = await prisma.productPool.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productPoolWithIdOnly = await prisma.productPool.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductPoolFindManyArgs>(args?: SelectSubset<T, ProductPoolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductPool.
     * @param {ProductPoolCreateArgs} args - Arguments to create a ProductPool.
     * @example
     * // Create one ProductPool
     * const ProductPool = await prisma.productPool.create({
     *   data: {
     *     // ... data to create a ProductPool
     *   }
     * })
     * 
     */
    create<T extends ProductPoolCreateArgs>(args: SelectSubset<T, ProductPoolCreateArgs<ExtArgs>>): Prisma__ProductPoolClient<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductPools.
     * @param {ProductPoolCreateManyArgs} args - Arguments to create many ProductPools.
     * @example
     * // Create many ProductPools
     * const productPool = await prisma.productPool.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductPoolCreateManyArgs>(args?: SelectSubset<T, ProductPoolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductPools and returns the data saved in the database.
     * @param {ProductPoolCreateManyAndReturnArgs} args - Arguments to create many ProductPools.
     * @example
     * // Create many ProductPools
     * const productPool = await prisma.productPool.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductPools and only return the `id`
     * const productPoolWithIdOnly = await prisma.productPool.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductPoolCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductPoolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductPool.
     * @param {ProductPoolDeleteArgs} args - Arguments to delete one ProductPool.
     * @example
     * // Delete one ProductPool
     * const ProductPool = await prisma.productPool.delete({
     *   where: {
     *     // ... filter to delete one ProductPool
     *   }
     * })
     * 
     */
    delete<T extends ProductPoolDeleteArgs>(args: SelectSubset<T, ProductPoolDeleteArgs<ExtArgs>>): Prisma__ProductPoolClient<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductPool.
     * @param {ProductPoolUpdateArgs} args - Arguments to update one ProductPool.
     * @example
     * // Update one ProductPool
     * const productPool = await prisma.productPool.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductPoolUpdateArgs>(args: SelectSubset<T, ProductPoolUpdateArgs<ExtArgs>>): Prisma__ProductPoolClient<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductPools.
     * @param {ProductPoolDeleteManyArgs} args - Arguments to filter ProductPools to delete.
     * @example
     * // Delete a few ProductPools
     * const { count } = await prisma.productPool.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductPoolDeleteManyArgs>(args?: SelectSubset<T, ProductPoolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductPools.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPoolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductPools
     * const productPool = await prisma.productPool.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductPoolUpdateManyArgs>(args: SelectSubset<T, ProductPoolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductPools and returns the data updated in the database.
     * @param {ProductPoolUpdateManyAndReturnArgs} args - Arguments to update many ProductPools.
     * @example
     * // Update many ProductPools
     * const productPool = await prisma.productPool.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductPools and only return the `id`
     * const productPoolWithIdOnly = await prisma.productPool.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductPoolUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductPoolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductPool.
     * @param {ProductPoolUpsertArgs} args - Arguments to update or create a ProductPool.
     * @example
     * // Update or create a ProductPool
     * const productPool = await prisma.productPool.upsert({
     *   create: {
     *     // ... data to create a ProductPool
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductPool we want to update
     *   }
     * })
     */
    upsert<T extends ProductPoolUpsertArgs>(args: SelectSubset<T, ProductPoolUpsertArgs<ExtArgs>>): Prisma__ProductPoolClient<$Result.GetResult<Prisma.$ProductPoolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductPools.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPoolCountArgs} args - Arguments to filter ProductPools to count.
     * @example
     * // Count the number of ProductPools
     * const count = await prisma.productPool.count({
     *   where: {
     *     // ... the filter for the ProductPools we want to count
     *   }
     * })
    **/
    count<T extends ProductPoolCountArgs>(
      args?: Subset<T, ProductPoolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductPoolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductPool.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPoolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductPoolAggregateArgs>(args: Subset<T, ProductPoolAggregateArgs>): Prisma.PrismaPromise<GetProductPoolAggregateType<T>>

    /**
     * Group by ProductPool.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPoolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductPoolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductPoolGroupByArgs['orderBy'] }
        : { orderBy?: ProductPoolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductPoolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductPoolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductPool model
   */
  readonly fields: ProductPoolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductPool.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductPoolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductPool model
   */
  interface ProductPoolFieldRefs {
    readonly id: FieldRef<"ProductPool", 'Int'>
    readonly supplierId: FieldRef<"ProductPool", 'Int'>
    readonly productRunningId: FieldRef<"ProductPool", 'Int'>
    readonly productId: FieldRef<"ProductPool", 'Int'>
    readonly periodId: FieldRef<"ProductPool", 'Int'>
    readonly productSubCategoryId: FieldRef<"ProductPool", 'Int'>
    readonly productTourCode: FieldRef<"ProductPool", 'String'>
    readonly productTourwowCode: FieldRef<"ProductPool", 'String'>
    readonly productTwUrlPath: FieldRef<"ProductPool", 'String'>
    readonly productName: FieldRef<"ProductPool", 'String'>
    readonly productStartAt: FieldRef<"ProductPool", 'DateTime'>
    readonly productPrice: FieldRef<"ProductPool", 'Decimal'>
    readonly productPriceCompare: FieldRef<"ProductPool", 'Decimal'>
    readonly productHasOneCountry: FieldRef<"ProductPool", 'Int'>
    readonly productMainCountryId: FieldRef<"ProductPool", 'Int'>
    readonly productMainCountryNameTh: FieldRef<"ProductPool", 'String'>
    readonly productMainCountryNameEn: FieldRef<"ProductPool", 'String'>
    readonly productCountries: FieldRef<"ProductPool", 'String'>
    readonly productCountrySubUnits: FieldRef<"ProductPool", 'String'>
    readonly productTags: FieldRef<"ProductPool", 'String'>
    readonly productTagsJson: FieldRef<"ProductPool", 'String'>
    readonly productDurationDay: FieldRef<"ProductPool", 'Int'>
    readonly productDurationNight: FieldRef<"ProductPool", 'Int'>
    readonly productDurationDayAndNight: FieldRef<"ProductPool", 'String'>
    readonly productFreeDay: FieldRef<"ProductPool", 'Int'>
    readonly productMealAmount: FieldRef<"ProductPool", 'Int'>
    readonly productHotelStar: FieldRef<"ProductPool", 'Int'>
    readonly productHasVisa: FieldRef<"ProductPool", 'Int'>
    readonly productVisaPrice: FieldRef<"ProductPool", 'Decimal'>
    readonly productHilightDescription: FieldRef<"ProductPool", 'String'>
    readonly productSubCategoryLabel: FieldRef<"ProductPool", 'String'>
    readonly productBannerUrl: FieldRef<"ProductPool", 'String'>
    readonly productHasActivePeriods: FieldRef<"ProductPool", 'Int'>
    readonly productIsRecommended: FieldRef<"ProductPool", 'Int'>
    readonly periodGroupCode: FieldRef<"ProductPool", 'String'>
    readonly periodStartAt: FieldRef<"ProductPool", 'DateTime'>
    readonly periodEndAt: FieldRef<"ProductPool", 'DateTime'>
    readonly periodIsChannelTwpOnlineBooking: FieldRef<"ProductPool", 'Int'>
    readonly periodPriceAdultDouble: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceAdultSingle: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceAdultTripple: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceChildNoBed: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceChildBed: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceInfant: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceJoinLand: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceAdultDoubleCompare: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceAdultSingleCompare: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceAdultTrippleCompare: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceChildNoBedCompare: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceChildBedCompare: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceInfantCompare: FieldRef<"ProductPool", 'Decimal'>
    readonly periodPriceJoinLandCompare: FieldRef<"ProductPool", 'Decimal'>
    readonly periodDeposit: FieldRef<"ProductPool", 'Decimal'>
    readonly periodCommission: FieldRef<"ProductPool", 'Decimal'>
    readonly periodCommissionCompany: FieldRef<"ProductPool", 'Decimal'>
    readonly periodCommissionSeller: FieldRef<"ProductPool", 'Decimal'>
    readonly periodQuantity: FieldRef<"ProductPool", 'Int'>
    readonly periodQuantityRemaining: FieldRef<"ProductPool", 'Int'>
    readonly periodSellStatusCode: FieldRef<"ProductPool", 'Int'>
    readonly periodIsActive: FieldRef<"ProductPool", 'Int'>
    readonly periodDeal: FieldRef<"ProductPool", 'Int'>
    readonly periodConfig: FieldRef<"ProductPool", 'Int'>
    readonly periodInstallmentCount: FieldRef<"ProductPool", 'Int'>
    readonly periodTransportationCategoryId: FieldRef<"ProductPool", 'Int'>
    readonly periodTransportationCategoryName: FieldRef<"ProductPool", 'String'>
    readonly periodGoTransportationId: FieldRef<"ProductPool", 'Int'>
    readonly periodGoTransportationNameEn: FieldRef<"ProductPool", 'String'>
    readonly periodGoTransportationCode: FieldRef<"ProductPool", 'String'>
    readonly periodGoAirportArrival: FieldRef<"ProductPool", 'String'>
    readonly periodGoAirportDeparture: FieldRef<"ProductPool", 'String'>
    readonly periodGoFlightNumberArrival: FieldRef<"ProductPool", 'String'>
    readonly periodGoFlightNumberDeparture: FieldRef<"ProductPool", 'String'>
    readonly periodGoFlightTimeArrival: FieldRef<"ProductPool", 'String'>
    readonly periodGoFlightTimeDeparture: FieldRef<"ProductPool", 'String'>
    readonly periodBackTransportationId: FieldRef<"ProductPool", 'Int'>
    readonly periodBackTransportationNameEn: FieldRef<"ProductPool", 'String'>
    readonly periodBackTransportationCode: FieldRef<"ProductPool", 'String'>
    readonly periodBackAirportArrival: FieldRef<"ProductPool", 'String'>
    readonly periodBackAirportDeparture: FieldRef<"ProductPool", 'String'>
    readonly periodBackFlightNumberArrival: FieldRef<"ProductPool", 'String'>
    readonly periodBackFlightNumberDeparture: FieldRef<"ProductPool", 'String'>
    readonly periodBackFlightTimeArrival: FieldRef<"ProductPool", 'String'>
    readonly periodBackFlightTimeDeparture: FieldRef<"ProductPool", 'String'>
    readonly createdAt: FieldRef<"ProductPool", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductPool findUnique
   */
  export type ProductPoolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * Filter, which ProductPool to fetch.
     */
    where: ProductPoolWhereUniqueInput
  }

  /**
   * ProductPool findUniqueOrThrow
   */
  export type ProductPoolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * Filter, which ProductPool to fetch.
     */
    where: ProductPoolWhereUniqueInput
  }

  /**
   * ProductPool findFirst
   */
  export type ProductPoolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * Filter, which ProductPool to fetch.
     */
    where?: ProductPoolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductPools to fetch.
     */
    orderBy?: ProductPoolOrderByWithRelationInput | ProductPoolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductPools.
     */
    cursor?: ProductPoolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductPools from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductPools.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductPools.
     */
    distinct?: ProductPoolScalarFieldEnum | ProductPoolScalarFieldEnum[]
  }

  /**
   * ProductPool findFirstOrThrow
   */
  export type ProductPoolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * Filter, which ProductPool to fetch.
     */
    where?: ProductPoolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductPools to fetch.
     */
    orderBy?: ProductPoolOrderByWithRelationInput | ProductPoolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductPools.
     */
    cursor?: ProductPoolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductPools from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductPools.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductPools.
     */
    distinct?: ProductPoolScalarFieldEnum | ProductPoolScalarFieldEnum[]
  }

  /**
   * ProductPool findMany
   */
  export type ProductPoolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * Filter, which ProductPools to fetch.
     */
    where?: ProductPoolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductPools to fetch.
     */
    orderBy?: ProductPoolOrderByWithRelationInput | ProductPoolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductPools.
     */
    cursor?: ProductPoolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductPools from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductPools.
     */
    skip?: number
    distinct?: ProductPoolScalarFieldEnum | ProductPoolScalarFieldEnum[]
  }

  /**
   * ProductPool create
   */
  export type ProductPoolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * The data needed to create a ProductPool.
     */
    data: XOR<ProductPoolCreateInput, ProductPoolUncheckedCreateInput>
  }

  /**
   * ProductPool createMany
   */
  export type ProductPoolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductPools.
     */
    data: ProductPoolCreateManyInput | ProductPoolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductPool createManyAndReturn
   */
  export type ProductPoolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * The data used to create many ProductPools.
     */
    data: ProductPoolCreateManyInput | ProductPoolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductPool update
   */
  export type ProductPoolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * The data needed to update a ProductPool.
     */
    data: XOR<ProductPoolUpdateInput, ProductPoolUncheckedUpdateInput>
    /**
     * Choose, which ProductPool to update.
     */
    where: ProductPoolWhereUniqueInput
  }

  /**
   * ProductPool updateMany
   */
  export type ProductPoolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductPools.
     */
    data: XOR<ProductPoolUpdateManyMutationInput, ProductPoolUncheckedUpdateManyInput>
    /**
     * Filter which ProductPools to update
     */
    where?: ProductPoolWhereInput
    /**
     * Limit how many ProductPools to update.
     */
    limit?: number
  }

  /**
   * ProductPool updateManyAndReturn
   */
  export type ProductPoolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * The data used to update ProductPools.
     */
    data: XOR<ProductPoolUpdateManyMutationInput, ProductPoolUncheckedUpdateManyInput>
    /**
     * Filter which ProductPools to update
     */
    where?: ProductPoolWhereInput
    /**
     * Limit how many ProductPools to update.
     */
    limit?: number
  }

  /**
   * ProductPool upsert
   */
  export type ProductPoolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * The filter to search for the ProductPool to update in case it exists.
     */
    where: ProductPoolWhereUniqueInput
    /**
     * In case the ProductPool found by the `where` argument doesn't exist, create a new ProductPool with this data.
     */
    create: XOR<ProductPoolCreateInput, ProductPoolUncheckedCreateInput>
    /**
     * In case the ProductPool was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductPoolUpdateInput, ProductPoolUncheckedUpdateInput>
  }

  /**
   * ProductPool delete
   */
  export type ProductPoolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
    /**
     * Filter which ProductPool to delete.
     */
    where: ProductPoolWhereUniqueInput
  }

  /**
   * ProductPool deleteMany
   */
  export type ProductPoolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductPools to delete
     */
    where?: ProductPoolWhereInput
    /**
     * Limit how many ProductPools to delete.
     */
    limit?: number
  }

  /**
   * ProductPool without action
   */
  export type ProductPoolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPool
     */
    select?: ProductPoolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductPool
     */
    omit?: ProductPoolOmit<ExtArgs> | null
  }


  /**
   * Model AgencyBlog
   */

  export type AggregateAgencyBlog = {
    _count: AgencyBlogCountAggregateOutputType | null
    _avg: AgencyBlogAvgAggregateOutputType | null
    _sum: AgencyBlogSumAggregateOutputType | null
    _min: AgencyBlogMinAggregateOutputType | null
    _max: AgencyBlogMaxAggregateOutputType | null
  }

  export type AgencyBlogAvgAggregateOutputType = {
    id: number | null
    agencyId: number | null
    createdByAgencyMemberId: number | null
    updatedByAgencyMemberId: number | null
    deletedByAgencyMemberId: number | null
  }

  export type AgencyBlogSumAggregateOutputType = {
    id: number | null
    agencyId: number | null
    createdByAgencyMemberId: number | null
    updatedByAgencyMemberId: number | null
    deletedByAgencyMemberId: number | null
  }

  export type AgencyBlogMinAggregateOutputType = {
    id: number | null
    agencyId: number | null
    title: string | null
    tags: string | null
    createdAt: Date | null
    createdByAgencyMemberId: number | null
    updatedAt: Date | null
    updatedByAgencyMemberId: number | null
    deletedAt: Date | null
    deletedByAgencyMemberId: number | null
  }

  export type AgencyBlogMaxAggregateOutputType = {
    id: number | null
    agencyId: number | null
    title: string | null
    tags: string | null
    createdAt: Date | null
    createdByAgencyMemberId: number | null
    updatedAt: Date | null
    updatedByAgencyMemberId: number | null
    deletedAt: Date | null
    deletedByAgencyMemberId: number | null
  }

  export type AgencyBlogCountAggregateOutputType = {
    id: number
    agencyId: number
    title: number
    tags: number
    createdAt: number
    createdByAgencyMemberId: number
    updatedAt: number
    updatedByAgencyMemberId: number
    deletedAt: number
    deletedByAgencyMemberId: number
    _all: number
  }


  export type AgencyBlogAvgAggregateInputType = {
    id?: true
    agencyId?: true
    createdByAgencyMemberId?: true
    updatedByAgencyMemberId?: true
    deletedByAgencyMemberId?: true
  }

  export type AgencyBlogSumAggregateInputType = {
    id?: true
    agencyId?: true
    createdByAgencyMemberId?: true
    updatedByAgencyMemberId?: true
    deletedByAgencyMemberId?: true
  }

  export type AgencyBlogMinAggregateInputType = {
    id?: true
    agencyId?: true
    title?: true
    tags?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
    deletedAt?: true
    deletedByAgencyMemberId?: true
  }

  export type AgencyBlogMaxAggregateInputType = {
    id?: true
    agencyId?: true
    title?: true
    tags?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
    deletedAt?: true
    deletedByAgencyMemberId?: true
  }

  export type AgencyBlogCountAggregateInputType = {
    id?: true
    agencyId?: true
    title?: true
    tags?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
    deletedAt?: true
    deletedByAgencyMemberId?: true
    _all?: true
  }

  export type AgencyBlogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyBlog to aggregate.
     */
    where?: AgencyBlogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyBlogs to fetch.
     */
    orderBy?: AgencyBlogOrderByWithRelationInput | AgencyBlogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyBlogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyBlogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyBlogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyBlogs
    **/
    _count?: true | AgencyBlogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgencyBlogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgencyBlogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyBlogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyBlogMaxAggregateInputType
  }

  export type GetAgencyBlogAggregateType<T extends AgencyBlogAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyBlog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyBlog[P]>
      : GetScalarType<T[P], AggregateAgencyBlog[P]>
  }




  export type AgencyBlogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyBlogWhereInput
    orderBy?: AgencyBlogOrderByWithAggregationInput | AgencyBlogOrderByWithAggregationInput[]
    by: AgencyBlogScalarFieldEnum[] | AgencyBlogScalarFieldEnum
    having?: AgencyBlogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyBlogCountAggregateInputType | true
    _avg?: AgencyBlogAvgAggregateInputType
    _sum?: AgencyBlogSumAggregateInputType
    _min?: AgencyBlogMinAggregateInputType
    _max?: AgencyBlogMaxAggregateInputType
  }

  export type AgencyBlogGroupByOutputType = {
    id: number
    agencyId: number
    title: string
    tags: string
    createdAt: Date
    createdByAgencyMemberId: number
    updatedAt: Date
    updatedByAgencyMemberId: number
    deletedAt: Date | null
    deletedByAgencyMemberId: number | null
    _count: AgencyBlogCountAggregateOutputType | null
    _avg: AgencyBlogAvgAggregateOutputType | null
    _sum: AgencyBlogSumAggregateOutputType | null
    _min: AgencyBlogMinAggregateOutputType | null
    _max: AgencyBlogMaxAggregateOutputType | null
  }

  type GetAgencyBlogGroupByPayload<T extends AgencyBlogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyBlogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyBlogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyBlogGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyBlogGroupByOutputType[P]>
        }
      >
    >


  export type AgencyBlogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    title?: boolean
    tags?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
    deletedAt?: boolean
    deletedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["agencyBlog"]>

  export type AgencyBlogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    title?: boolean
    tags?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
    deletedAt?: boolean
    deletedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["agencyBlog"]>

  export type AgencyBlogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    title?: boolean
    tags?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
    deletedAt?: boolean
    deletedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["agencyBlog"]>

  export type AgencyBlogSelectScalar = {
    id?: boolean
    agencyId?: boolean
    title?: boolean
    tags?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
    deletedAt?: boolean
    deletedByAgencyMemberId?: boolean
  }

  export type AgencyBlogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agencyId" | "title" | "tags" | "createdAt" | "createdByAgencyMemberId" | "updatedAt" | "updatedByAgencyMemberId" | "deletedAt" | "deletedByAgencyMemberId", ExtArgs["result"]["agencyBlog"]>

  export type $AgencyBlogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyBlog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      agencyId: number
      title: string
      tags: string
      createdAt: Date
      createdByAgencyMemberId: number
      updatedAt: Date
      updatedByAgencyMemberId: number
      deletedAt: Date | null
      deletedByAgencyMemberId: number | null
    }, ExtArgs["result"]["agencyBlog"]>
    composites: {}
  }

  type AgencyBlogGetPayload<S extends boolean | null | undefined | AgencyBlogDefaultArgs> = $Result.GetResult<Prisma.$AgencyBlogPayload, S>

  type AgencyBlogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgencyBlogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgencyBlogCountAggregateInputType | true
    }

  export interface AgencyBlogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyBlog'], meta: { name: 'AgencyBlog' } }
    /**
     * Find zero or one AgencyBlog that matches the filter.
     * @param {AgencyBlogFindUniqueArgs} args - Arguments to find a AgencyBlog
     * @example
     * // Get one AgencyBlog
     * const agencyBlog = await prisma.agencyBlog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyBlogFindUniqueArgs>(args: SelectSubset<T, AgencyBlogFindUniqueArgs<ExtArgs>>): Prisma__AgencyBlogClient<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AgencyBlog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgencyBlogFindUniqueOrThrowArgs} args - Arguments to find a AgencyBlog
     * @example
     * // Get one AgencyBlog
     * const agencyBlog = await prisma.agencyBlog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyBlogFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyBlogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyBlogClient<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyBlog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyBlogFindFirstArgs} args - Arguments to find a AgencyBlog
     * @example
     * // Get one AgencyBlog
     * const agencyBlog = await prisma.agencyBlog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyBlogFindFirstArgs>(args?: SelectSubset<T, AgencyBlogFindFirstArgs<ExtArgs>>): Prisma__AgencyBlogClient<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyBlog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyBlogFindFirstOrThrowArgs} args - Arguments to find a AgencyBlog
     * @example
     * // Get one AgencyBlog
     * const agencyBlog = await prisma.agencyBlog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyBlogFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyBlogFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyBlogClient<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AgencyBlogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyBlogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyBlogs
     * const agencyBlogs = await prisma.agencyBlog.findMany()
     * 
     * // Get first 10 AgencyBlogs
     * const agencyBlogs = await prisma.agencyBlog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyBlogWithIdOnly = await prisma.agencyBlog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyBlogFindManyArgs>(args?: SelectSubset<T, AgencyBlogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AgencyBlog.
     * @param {AgencyBlogCreateArgs} args - Arguments to create a AgencyBlog.
     * @example
     * // Create one AgencyBlog
     * const AgencyBlog = await prisma.agencyBlog.create({
     *   data: {
     *     // ... data to create a AgencyBlog
     *   }
     * })
     * 
     */
    create<T extends AgencyBlogCreateArgs>(args: SelectSubset<T, AgencyBlogCreateArgs<ExtArgs>>): Prisma__AgencyBlogClient<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AgencyBlogs.
     * @param {AgencyBlogCreateManyArgs} args - Arguments to create many AgencyBlogs.
     * @example
     * // Create many AgencyBlogs
     * const agencyBlog = await prisma.agencyBlog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyBlogCreateManyArgs>(args?: SelectSubset<T, AgencyBlogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyBlogs and returns the data saved in the database.
     * @param {AgencyBlogCreateManyAndReturnArgs} args - Arguments to create many AgencyBlogs.
     * @example
     * // Create many AgencyBlogs
     * const agencyBlog = await prisma.agencyBlog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyBlogs and only return the `id`
     * const agencyBlogWithIdOnly = await prisma.agencyBlog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyBlogCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyBlogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AgencyBlog.
     * @param {AgencyBlogDeleteArgs} args - Arguments to delete one AgencyBlog.
     * @example
     * // Delete one AgencyBlog
     * const AgencyBlog = await prisma.agencyBlog.delete({
     *   where: {
     *     // ... filter to delete one AgencyBlog
     *   }
     * })
     * 
     */
    delete<T extends AgencyBlogDeleteArgs>(args: SelectSubset<T, AgencyBlogDeleteArgs<ExtArgs>>): Prisma__AgencyBlogClient<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AgencyBlog.
     * @param {AgencyBlogUpdateArgs} args - Arguments to update one AgencyBlog.
     * @example
     * // Update one AgencyBlog
     * const agencyBlog = await prisma.agencyBlog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyBlogUpdateArgs>(args: SelectSubset<T, AgencyBlogUpdateArgs<ExtArgs>>): Prisma__AgencyBlogClient<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AgencyBlogs.
     * @param {AgencyBlogDeleteManyArgs} args - Arguments to filter AgencyBlogs to delete.
     * @example
     * // Delete a few AgencyBlogs
     * const { count } = await prisma.agencyBlog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyBlogDeleteManyArgs>(args?: SelectSubset<T, AgencyBlogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyBlogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyBlogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyBlogs
     * const agencyBlog = await prisma.agencyBlog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyBlogUpdateManyArgs>(args: SelectSubset<T, AgencyBlogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyBlogs and returns the data updated in the database.
     * @param {AgencyBlogUpdateManyAndReturnArgs} args - Arguments to update many AgencyBlogs.
     * @example
     * // Update many AgencyBlogs
     * const agencyBlog = await prisma.agencyBlog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AgencyBlogs and only return the `id`
     * const agencyBlogWithIdOnly = await prisma.agencyBlog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgencyBlogUpdateManyAndReturnArgs>(args: SelectSubset<T, AgencyBlogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AgencyBlog.
     * @param {AgencyBlogUpsertArgs} args - Arguments to update or create a AgencyBlog.
     * @example
     * // Update or create a AgencyBlog
     * const agencyBlog = await prisma.agencyBlog.upsert({
     *   create: {
     *     // ... data to create a AgencyBlog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyBlog we want to update
     *   }
     * })
     */
    upsert<T extends AgencyBlogUpsertArgs>(args: SelectSubset<T, AgencyBlogUpsertArgs<ExtArgs>>): Prisma__AgencyBlogClient<$Result.GetResult<Prisma.$AgencyBlogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AgencyBlogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyBlogCountArgs} args - Arguments to filter AgencyBlogs to count.
     * @example
     * // Count the number of AgencyBlogs
     * const count = await prisma.agencyBlog.count({
     *   where: {
     *     // ... the filter for the AgencyBlogs we want to count
     *   }
     * })
    **/
    count<T extends AgencyBlogCountArgs>(
      args?: Subset<T, AgencyBlogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyBlogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyBlog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyBlogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyBlogAggregateArgs>(args: Subset<T, AgencyBlogAggregateArgs>): Prisma.PrismaPromise<GetAgencyBlogAggregateType<T>>

    /**
     * Group by AgencyBlog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyBlogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyBlogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyBlogGroupByArgs['orderBy'] }
        : { orderBy?: AgencyBlogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyBlogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyBlogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyBlog model
   */
  readonly fields: AgencyBlogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyBlog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyBlogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyBlog model
   */
  interface AgencyBlogFieldRefs {
    readonly id: FieldRef<"AgencyBlog", 'Int'>
    readonly agencyId: FieldRef<"AgencyBlog", 'Int'>
    readonly title: FieldRef<"AgencyBlog", 'String'>
    readonly tags: FieldRef<"AgencyBlog", 'String'>
    readonly createdAt: FieldRef<"AgencyBlog", 'DateTime'>
    readonly createdByAgencyMemberId: FieldRef<"AgencyBlog", 'Int'>
    readonly updatedAt: FieldRef<"AgencyBlog", 'DateTime'>
    readonly updatedByAgencyMemberId: FieldRef<"AgencyBlog", 'Int'>
    readonly deletedAt: FieldRef<"AgencyBlog", 'DateTime'>
    readonly deletedByAgencyMemberId: FieldRef<"AgencyBlog", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * AgencyBlog findUnique
   */
  export type AgencyBlogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * Filter, which AgencyBlog to fetch.
     */
    where: AgencyBlogWhereUniqueInput
  }

  /**
   * AgencyBlog findUniqueOrThrow
   */
  export type AgencyBlogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * Filter, which AgencyBlog to fetch.
     */
    where: AgencyBlogWhereUniqueInput
  }

  /**
   * AgencyBlog findFirst
   */
  export type AgencyBlogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * Filter, which AgencyBlog to fetch.
     */
    where?: AgencyBlogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyBlogs to fetch.
     */
    orderBy?: AgencyBlogOrderByWithRelationInput | AgencyBlogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyBlogs.
     */
    cursor?: AgencyBlogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyBlogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyBlogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyBlogs.
     */
    distinct?: AgencyBlogScalarFieldEnum | AgencyBlogScalarFieldEnum[]
  }

  /**
   * AgencyBlog findFirstOrThrow
   */
  export type AgencyBlogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * Filter, which AgencyBlog to fetch.
     */
    where?: AgencyBlogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyBlogs to fetch.
     */
    orderBy?: AgencyBlogOrderByWithRelationInput | AgencyBlogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyBlogs.
     */
    cursor?: AgencyBlogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyBlogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyBlogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyBlogs.
     */
    distinct?: AgencyBlogScalarFieldEnum | AgencyBlogScalarFieldEnum[]
  }

  /**
   * AgencyBlog findMany
   */
  export type AgencyBlogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * Filter, which AgencyBlogs to fetch.
     */
    where?: AgencyBlogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyBlogs to fetch.
     */
    orderBy?: AgencyBlogOrderByWithRelationInput | AgencyBlogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyBlogs.
     */
    cursor?: AgencyBlogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyBlogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyBlogs.
     */
    skip?: number
    distinct?: AgencyBlogScalarFieldEnum | AgencyBlogScalarFieldEnum[]
  }

  /**
   * AgencyBlog create
   */
  export type AgencyBlogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * The data needed to create a AgencyBlog.
     */
    data: XOR<AgencyBlogCreateInput, AgencyBlogUncheckedCreateInput>
  }

  /**
   * AgencyBlog createMany
   */
  export type AgencyBlogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyBlogs.
     */
    data: AgencyBlogCreateManyInput | AgencyBlogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyBlog createManyAndReturn
   */
  export type AgencyBlogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * The data used to create many AgencyBlogs.
     */
    data: AgencyBlogCreateManyInput | AgencyBlogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyBlog update
   */
  export type AgencyBlogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * The data needed to update a AgencyBlog.
     */
    data: XOR<AgencyBlogUpdateInput, AgencyBlogUncheckedUpdateInput>
    /**
     * Choose, which AgencyBlog to update.
     */
    where: AgencyBlogWhereUniqueInput
  }

  /**
   * AgencyBlog updateMany
   */
  export type AgencyBlogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyBlogs.
     */
    data: XOR<AgencyBlogUpdateManyMutationInput, AgencyBlogUncheckedUpdateManyInput>
    /**
     * Filter which AgencyBlogs to update
     */
    where?: AgencyBlogWhereInput
    /**
     * Limit how many AgencyBlogs to update.
     */
    limit?: number
  }

  /**
   * AgencyBlog updateManyAndReturn
   */
  export type AgencyBlogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * The data used to update AgencyBlogs.
     */
    data: XOR<AgencyBlogUpdateManyMutationInput, AgencyBlogUncheckedUpdateManyInput>
    /**
     * Filter which AgencyBlogs to update
     */
    where?: AgencyBlogWhereInput
    /**
     * Limit how many AgencyBlogs to update.
     */
    limit?: number
  }

  /**
   * AgencyBlog upsert
   */
  export type AgencyBlogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * The filter to search for the AgencyBlog to update in case it exists.
     */
    where: AgencyBlogWhereUniqueInput
    /**
     * In case the AgencyBlog found by the `where` argument doesn't exist, create a new AgencyBlog with this data.
     */
    create: XOR<AgencyBlogCreateInput, AgencyBlogUncheckedCreateInput>
    /**
     * In case the AgencyBlog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyBlogUpdateInput, AgencyBlogUncheckedUpdateInput>
  }

  /**
   * AgencyBlog delete
   */
  export type AgencyBlogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
    /**
     * Filter which AgencyBlog to delete.
     */
    where: AgencyBlogWhereUniqueInput
  }

  /**
   * AgencyBlog deleteMany
   */
  export type AgencyBlogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyBlogs to delete
     */
    where?: AgencyBlogWhereInput
    /**
     * Limit how many AgencyBlogs to delete.
     */
    limit?: number
  }

  /**
   * AgencyBlog without action
   */
  export type AgencyBlogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyBlog
     */
    select?: AgencyBlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyBlog
     */
    omit?: AgencyBlogOmit<ExtArgs> | null
  }


  /**
   * Model SeoArticle
   */

  export type AggregateSeoArticle = {
    _count: SeoArticleCountAggregateOutputType | null
    _avg: SeoArticleAvgAggregateOutputType | null
    _sum: SeoArticleSumAggregateOutputType | null
    _min: SeoArticleMinAggregateOutputType | null
    _max: SeoArticleMaxAggregateOutputType | null
  }

  export type SeoArticleAvgAggregateOutputType = {
    id: number | null
    agencyId: number | null
    parentArticleId: number | null
    isChildOfHomePage: number | null
    isActive: number | null
    seoArticleTypeId: number | null
    seoTargetPageTypeId: number | null
    seoSpecialPageId: number | null
    countryId: number | null
    provinceId: number | null
    countrySubUnitId: number | null
    proCategorySubProductId: number | null
    desktopCoverImageFileSize: number | null
    mobileCoverImageFileSize: number | null
    hasContent: number | null
    createdByAgencyMemberId: number | null
    updatedByAgencyMemberId: number | null
  }

  export type SeoArticleSumAggregateOutputType = {
    id: number | null
    agencyId: number | null
    parentArticleId: number | null
    isChildOfHomePage: number | null
    isActive: number | null
    seoArticleTypeId: number | null
    seoTargetPageTypeId: number | null
    seoSpecialPageId: number | null
    countryId: number | null
    provinceId: number | null
    countrySubUnitId: number | null
    proCategorySubProductId: number | null
    desktopCoverImageFileSize: number | null
    mobileCoverImageFileSize: number | null
    hasContent: number | null
    createdByAgencyMemberId: number | null
    updatedByAgencyMemberId: number | null
  }

  export type SeoArticleMinAggregateOutputType = {
    id: number | null
    agencyId: number | null
    parentArticleId: number | null
    isChildOfHomePage: number | null
    isActive: number | null
    seoArticleTypeId: number | null
    seoTargetPageTypeId: number | null
    seoSpecialPageId: number | null
    countryId: number | null
    provinceId: number | null
    countrySubUnitId: number | null
    proCategorySubProductId: number | null
    code: string | null
    name: string | null
    urlPath: string | null
    trimmedUrlPath: string | null
    realUrlPath: string | null
    metaTitle: string | null
    metaDescription: string | null
    primaryKeyword: string | null
    secondaryKeyword: string | null
    relatedKeyword: string | null
    note: string | null
    desktopCoverImageFileName: string | null
    desktopCoverImageFileSize: number | null
    desktopCoverImageContentType: string | null
    desktopCoverImageUpdatedAt: Date | null
    mobileCoverImageFileName: string | null
    mobileCoverImageFileSize: number | null
    mobileCoverImageContentType: string | null
    mobileCoverImageUpdatedAt: Date | null
    coverImageAltText: string | null
    content: string | null
    hasContent: number | null
    tags: string | null
    createdAt: Date | null
    createdByAgencyMemberId: number | null
    updatedAt: Date | null
    updatedByAgencyMemberId: number | null
  }

  export type SeoArticleMaxAggregateOutputType = {
    id: number | null
    agencyId: number | null
    parentArticleId: number | null
    isChildOfHomePage: number | null
    isActive: number | null
    seoArticleTypeId: number | null
    seoTargetPageTypeId: number | null
    seoSpecialPageId: number | null
    countryId: number | null
    provinceId: number | null
    countrySubUnitId: number | null
    proCategorySubProductId: number | null
    code: string | null
    name: string | null
    urlPath: string | null
    trimmedUrlPath: string | null
    realUrlPath: string | null
    metaTitle: string | null
    metaDescription: string | null
    primaryKeyword: string | null
    secondaryKeyword: string | null
    relatedKeyword: string | null
    note: string | null
    desktopCoverImageFileName: string | null
    desktopCoverImageFileSize: number | null
    desktopCoverImageContentType: string | null
    desktopCoverImageUpdatedAt: Date | null
    mobileCoverImageFileName: string | null
    mobileCoverImageFileSize: number | null
    mobileCoverImageContentType: string | null
    mobileCoverImageUpdatedAt: Date | null
    coverImageAltText: string | null
    content: string | null
    hasContent: number | null
    tags: string | null
    createdAt: Date | null
    createdByAgencyMemberId: number | null
    updatedAt: Date | null
    updatedByAgencyMemberId: number | null
  }

  export type SeoArticleCountAggregateOutputType = {
    id: number
    agencyId: number
    parentArticleId: number
    isChildOfHomePage: number
    isActive: number
    seoArticleTypeId: number
    seoTargetPageTypeId: number
    seoSpecialPageId: number
    countryId: number
    provinceId: number
    countrySubUnitId: number
    proCategorySubProductId: number
    code: number
    name: number
    urlPath: number
    trimmedUrlPath: number
    realUrlPath: number
    metaTitle: number
    metaDescription: number
    primaryKeyword: number
    secondaryKeyword: number
    relatedKeyword: number
    note: number
    desktopCoverImageFileName: number
    desktopCoverImageFileSize: number
    desktopCoverImageContentType: number
    desktopCoverImageUpdatedAt: number
    mobileCoverImageFileName: number
    mobileCoverImageFileSize: number
    mobileCoverImageContentType: number
    mobileCoverImageUpdatedAt: number
    coverImageAltText: number
    content: number
    hasContent: number
    tags: number
    createdAt: number
    createdByAgencyMemberId: number
    updatedAt: number
    updatedByAgencyMemberId: number
    _all: number
  }


  export type SeoArticleAvgAggregateInputType = {
    id?: true
    agencyId?: true
    parentArticleId?: true
    isChildOfHomePage?: true
    isActive?: true
    seoArticleTypeId?: true
    seoTargetPageTypeId?: true
    seoSpecialPageId?: true
    countryId?: true
    provinceId?: true
    countrySubUnitId?: true
    proCategorySubProductId?: true
    desktopCoverImageFileSize?: true
    mobileCoverImageFileSize?: true
    hasContent?: true
    createdByAgencyMemberId?: true
    updatedByAgencyMemberId?: true
  }

  export type SeoArticleSumAggregateInputType = {
    id?: true
    agencyId?: true
    parentArticleId?: true
    isChildOfHomePage?: true
    isActive?: true
    seoArticleTypeId?: true
    seoTargetPageTypeId?: true
    seoSpecialPageId?: true
    countryId?: true
    provinceId?: true
    countrySubUnitId?: true
    proCategorySubProductId?: true
    desktopCoverImageFileSize?: true
    mobileCoverImageFileSize?: true
    hasContent?: true
    createdByAgencyMemberId?: true
    updatedByAgencyMemberId?: true
  }

  export type SeoArticleMinAggregateInputType = {
    id?: true
    agencyId?: true
    parentArticleId?: true
    isChildOfHomePage?: true
    isActive?: true
    seoArticleTypeId?: true
    seoTargetPageTypeId?: true
    seoSpecialPageId?: true
    countryId?: true
    provinceId?: true
    countrySubUnitId?: true
    proCategorySubProductId?: true
    code?: true
    name?: true
    urlPath?: true
    trimmedUrlPath?: true
    realUrlPath?: true
    metaTitle?: true
    metaDescription?: true
    primaryKeyword?: true
    secondaryKeyword?: true
    relatedKeyword?: true
    note?: true
    desktopCoverImageFileName?: true
    desktopCoverImageFileSize?: true
    desktopCoverImageContentType?: true
    desktopCoverImageUpdatedAt?: true
    mobileCoverImageFileName?: true
    mobileCoverImageFileSize?: true
    mobileCoverImageContentType?: true
    mobileCoverImageUpdatedAt?: true
    coverImageAltText?: true
    content?: true
    hasContent?: true
    tags?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
  }

  export type SeoArticleMaxAggregateInputType = {
    id?: true
    agencyId?: true
    parentArticleId?: true
    isChildOfHomePage?: true
    isActive?: true
    seoArticleTypeId?: true
    seoTargetPageTypeId?: true
    seoSpecialPageId?: true
    countryId?: true
    provinceId?: true
    countrySubUnitId?: true
    proCategorySubProductId?: true
    code?: true
    name?: true
    urlPath?: true
    trimmedUrlPath?: true
    realUrlPath?: true
    metaTitle?: true
    metaDescription?: true
    primaryKeyword?: true
    secondaryKeyword?: true
    relatedKeyword?: true
    note?: true
    desktopCoverImageFileName?: true
    desktopCoverImageFileSize?: true
    desktopCoverImageContentType?: true
    desktopCoverImageUpdatedAt?: true
    mobileCoverImageFileName?: true
    mobileCoverImageFileSize?: true
    mobileCoverImageContentType?: true
    mobileCoverImageUpdatedAt?: true
    coverImageAltText?: true
    content?: true
    hasContent?: true
    tags?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
  }

  export type SeoArticleCountAggregateInputType = {
    id?: true
    agencyId?: true
    parentArticleId?: true
    isChildOfHomePage?: true
    isActive?: true
    seoArticleTypeId?: true
    seoTargetPageTypeId?: true
    seoSpecialPageId?: true
    countryId?: true
    provinceId?: true
    countrySubUnitId?: true
    proCategorySubProductId?: true
    code?: true
    name?: true
    urlPath?: true
    trimmedUrlPath?: true
    realUrlPath?: true
    metaTitle?: true
    metaDescription?: true
    primaryKeyword?: true
    secondaryKeyword?: true
    relatedKeyword?: true
    note?: true
    desktopCoverImageFileName?: true
    desktopCoverImageFileSize?: true
    desktopCoverImageContentType?: true
    desktopCoverImageUpdatedAt?: true
    mobileCoverImageFileName?: true
    mobileCoverImageFileSize?: true
    mobileCoverImageContentType?: true
    mobileCoverImageUpdatedAt?: true
    coverImageAltText?: true
    content?: true
    hasContent?: true
    tags?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
    _all?: true
  }

  export type SeoArticleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeoArticle to aggregate.
     */
    where?: SeoArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeoArticles to fetch.
     */
    orderBy?: SeoArticleOrderByWithRelationInput | SeoArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SeoArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeoArticles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeoArticles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SeoArticles
    **/
    _count?: true | SeoArticleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SeoArticleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SeoArticleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SeoArticleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SeoArticleMaxAggregateInputType
  }

  export type GetSeoArticleAggregateType<T extends SeoArticleAggregateArgs> = {
        [P in keyof T & keyof AggregateSeoArticle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeoArticle[P]>
      : GetScalarType<T[P], AggregateSeoArticle[P]>
  }




  export type SeoArticleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeoArticleWhereInput
    orderBy?: SeoArticleOrderByWithAggregationInput | SeoArticleOrderByWithAggregationInput[]
    by: SeoArticleScalarFieldEnum[] | SeoArticleScalarFieldEnum
    having?: SeoArticleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SeoArticleCountAggregateInputType | true
    _avg?: SeoArticleAvgAggregateInputType
    _sum?: SeoArticleSumAggregateInputType
    _min?: SeoArticleMinAggregateInputType
    _max?: SeoArticleMaxAggregateInputType
  }

  export type SeoArticleGroupByOutputType = {
    id: number
    agencyId: number
    parentArticleId: number | null
    isChildOfHomePage: number
    isActive: number
    seoArticleTypeId: number
    seoTargetPageTypeId: number | null
    seoSpecialPageId: number | null
    countryId: number | null
    provinceId: number | null
    countrySubUnitId: number | null
    proCategorySubProductId: number | null
    code: string
    name: string
    urlPath: string
    trimmedUrlPath: string
    realUrlPath: string
    metaTitle: string | null
    metaDescription: string | null
    primaryKeyword: string | null
    secondaryKeyword: string | null
    relatedKeyword: string | null
    note: string | null
    desktopCoverImageFileName: string | null
    desktopCoverImageFileSize: number | null
    desktopCoverImageContentType: string | null
    desktopCoverImageUpdatedAt: Date | null
    mobileCoverImageFileName: string | null
    mobileCoverImageFileSize: number | null
    mobileCoverImageContentType: string | null
    mobileCoverImageUpdatedAt: Date | null
    coverImageAltText: string | null
    content: string | null
    hasContent: number
    tags: string | null
    createdAt: Date
    createdByAgencyMemberId: number
    updatedAt: Date
    updatedByAgencyMemberId: number
    _count: SeoArticleCountAggregateOutputType | null
    _avg: SeoArticleAvgAggregateOutputType | null
    _sum: SeoArticleSumAggregateOutputType | null
    _min: SeoArticleMinAggregateOutputType | null
    _max: SeoArticleMaxAggregateOutputType | null
  }

  type GetSeoArticleGroupByPayload<T extends SeoArticleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SeoArticleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SeoArticleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SeoArticleGroupByOutputType[P]>
            : GetScalarType<T[P], SeoArticleGroupByOutputType[P]>
        }
      >
    >


  export type SeoArticleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    parentArticleId?: boolean
    isChildOfHomePage?: boolean
    isActive?: boolean
    seoArticleTypeId?: boolean
    seoTargetPageTypeId?: boolean
    seoSpecialPageId?: boolean
    countryId?: boolean
    provinceId?: boolean
    countrySubUnitId?: boolean
    proCategorySubProductId?: boolean
    code?: boolean
    name?: boolean
    urlPath?: boolean
    trimmedUrlPath?: boolean
    realUrlPath?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    primaryKeyword?: boolean
    secondaryKeyword?: boolean
    relatedKeyword?: boolean
    note?: boolean
    desktopCoverImageFileName?: boolean
    desktopCoverImageFileSize?: boolean
    desktopCoverImageContentType?: boolean
    desktopCoverImageUpdatedAt?: boolean
    mobileCoverImageFileName?: boolean
    mobileCoverImageFileSize?: boolean
    mobileCoverImageContentType?: boolean
    mobileCoverImageUpdatedAt?: boolean
    coverImageAltText?: boolean
    content?: boolean
    hasContent?: boolean
    tags?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["seoArticle"]>

  export type SeoArticleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    parentArticleId?: boolean
    isChildOfHomePage?: boolean
    isActive?: boolean
    seoArticleTypeId?: boolean
    seoTargetPageTypeId?: boolean
    seoSpecialPageId?: boolean
    countryId?: boolean
    provinceId?: boolean
    countrySubUnitId?: boolean
    proCategorySubProductId?: boolean
    code?: boolean
    name?: boolean
    urlPath?: boolean
    trimmedUrlPath?: boolean
    realUrlPath?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    primaryKeyword?: boolean
    secondaryKeyword?: boolean
    relatedKeyword?: boolean
    note?: boolean
    desktopCoverImageFileName?: boolean
    desktopCoverImageFileSize?: boolean
    desktopCoverImageContentType?: boolean
    desktopCoverImageUpdatedAt?: boolean
    mobileCoverImageFileName?: boolean
    mobileCoverImageFileSize?: boolean
    mobileCoverImageContentType?: boolean
    mobileCoverImageUpdatedAt?: boolean
    coverImageAltText?: boolean
    content?: boolean
    hasContent?: boolean
    tags?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["seoArticle"]>

  export type SeoArticleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    parentArticleId?: boolean
    isChildOfHomePage?: boolean
    isActive?: boolean
    seoArticleTypeId?: boolean
    seoTargetPageTypeId?: boolean
    seoSpecialPageId?: boolean
    countryId?: boolean
    provinceId?: boolean
    countrySubUnitId?: boolean
    proCategorySubProductId?: boolean
    code?: boolean
    name?: boolean
    urlPath?: boolean
    trimmedUrlPath?: boolean
    realUrlPath?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    primaryKeyword?: boolean
    secondaryKeyword?: boolean
    relatedKeyword?: boolean
    note?: boolean
    desktopCoverImageFileName?: boolean
    desktopCoverImageFileSize?: boolean
    desktopCoverImageContentType?: boolean
    desktopCoverImageUpdatedAt?: boolean
    mobileCoverImageFileName?: boolean
    mobileCoverImageFileSize?: boolean
    mobileCoverImageContentType?: boolean
    mobileCoverImageUpdatedAt?: boolean
    coverImageAltText?: boolean
    content?: boolean
    hasContent?: boolean
    tags?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["seoArticle"]>

  export type SeoArticleSelectScalar = {
    id?: boolean
    agencyId?: boolean
    parentArticleId?: boolean
    isChildOfHomePage?: boolean
    isActive?: boolean
    seoArticleTypeId?: boolean
    seoTargetPageTypeId?: boolean
    seoSpecialPageId?: boolean
    countryId?: boolean
    provinceId?: boolean
    countrySubUnitId?: boolean
    proCategorySubProductId?: boolean
    code?: boolean
    name?: boolean
    urlPath?: boolean
    trimmedUrlPath?: boolean
    realUrlPath?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    primaryKeyword?: boolean
    secondaryKeyword?: boolean
    relatedKeyword?: boolean
    note?: boolean
    desktopCoverImageFileName?: boolean
    desktopCoverImageFileSize?: boolean
    desktopCoverImageContentType?: boolean
    desktopCoverImageUpdatedAt?: boolean
    mobileCoverImageFileName?: boolean
    mobileCoverImageFileSize?: boolean
    mobileCoverImageContentType?: boolean
    mobileCoverImageUpdatedAt?: boolean
    coverImageAltText?: boolean
    content?: boolean
    hasContent?: boolean
    tags?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
  }

  export type SeoArticleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agencyId" | "parentArticleId" | "isChildOfHomePage" | "isActive" | "seoArticleTypeId" | "seoTargetPageTypeId" | "seoSpecialPageId" | "countryId" | "provinceId" | "countrySubUnitId" | "proCategorySubProductId" | "code" | "name" | "urlPath" | "trimmedUrlPath" | "realUrlPath" | "metaTitle" | "metaDescription" | "primaryKeyword" | "secondaryKeyword" | "relatedKeyword" | "note" | "desktopCoverImageFileName" | "desktopCoverImageFileSize" | "desktopCoverImageContentType" | "desktopCoverImageUpdatedAt" | "mobileCoverImageFileName" | "mobileCoverImageFileSize" | "mobileCoverImageContentType" | "mobileCoverImageUpdatedAt" | "coverImageAltText" | "content" | "hasContent" | "tags" | "createdAt" | "createdByAgencyMemberId" | "updatedAt" | "updatedByAgencyMemberId", ExtArgs["result"]["seoArticle"]>

  export type $SeoArticlePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SeoArticle"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      agencyId: number
      parentArticleId: number | null
      isChildOfHomePage: number
      isActive: number
      seoArticleTypeId: number
      seoTargetPageTypeId: number | null
      seoSpecialPageId: number | null
      countryId: number | null
      provinceId: number | null
      countrySubUnitId: number | null
      proCategorySubProductId: number | null
      code: string
      name: string
      urlPath: string
      trimmedUrlPath: string
      realUrlPath: string
      metaTitle: string | null
      metaDescription: string | null
      primaryKeyword: string | null
      secondaryKeyword: string | null
      relatedKeyword: string | null
      note: string | null
      desktopCoverImageFileName: string | null
      desktopCoverImageFileSize: number | null
      desktopCoverImageContentType: string | null
      desktopCoverImageUpdatedAt: Date | null
      mobileCoverImageFileName: string | null
      mobileCoverImageFileSize: number | null
      mobileCoverImageContentType: string | null
      mobileCoverImageUpdatedAt: Date | null
      coverImageAltText: string | null
      content: string | null
      hasContent: number
      tags: string | null
      createdAt: Date
      createdByAgencyMemberId: number
      updatedAt: Date
      updatedByAgencyMemberId: number
    }, ExtArgs["result"]["seoArticle"]>
    composites: {}
  }

  type SeoArticleGetPayload<S extends boolean | null | undefined | SeoArticleDefaultArgs> = $Result.GetResult<Prisma.$SeoArticlePayload, S>

  type SeoArticleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SeoArticleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SeoArticleCountAggregateInputType | true
    }

  export interface SeoArticleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SeoArticle'], meta: { name: 'SeoArticle' } }
    /**
     * Find zero or one SeoArticle that matches the filter.
     * @param {SeoArticleFindUniqueArgs} args - Arguments to find a SeoArticle
     * @example
     * // Get one SeoArticle
     * const seoArticle = await prisma.seoArticle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SeoArticleFindUniqueArgs>(args: SelectSubset<T, SeoArticleFindUniqueArgs<ExtArgs>>): Prisma__SeoArticleClient<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SeoArticle that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SeoArticleFindUniqueOrThrowArgs} args - Arguments to find a SeoArticle
     * @example
     * // Get one SeoArticle
     * const seoArticle = await prisma.seoArticle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SeoArticleFindUniqueOrThrowArgs>(args: SelectSubset<T, SeoArticleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SeoArticleClient<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeoArticle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleFindFirstArgs} args - Arguments to find a SeoArticle
     * @example
     * // Get one SeoArticle
     * const seoArticle = await prisma.seoArticle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SeoArticleFindFirstArgs>(args?: SelectSubset<T, SeoArticleFindFirstArgs<ExtArgs>>): Prisma__SeoArticleClient<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeoArticle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleFindFirstOrThrowArgs} args - Arguments to find a SeoArticle
     * @example
     * // Get one SeoArticle
     * const seoArticle = await prisma.seoArticle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SeoArticleFindFirstOrThrowArgs>(args?: SelectSubset<T, SeoArticleFindFirstOrThrowArgs<ExtArgs>>): Prisma__SeoArticleClient<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SeoArticles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SeoArticles
     * const seoArticles = await prisma.seoArticle.findMany()
     * 
     * // Get first 10 SeoArticles
     * const seoArticles = await prisma.seoArticle.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const seoArticleWithIdOnly = await prisma.seoArticle.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SeoArticleFindManyArgs>(args?: SelectSubset<T, SeoArticleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SeoArticle.
     * @param {SeoArticleCreateArgs} args - Arguments to create a SeoArticle.
     * @example
     * // Create one SeoArticle
     * const SeoArticle = await prisma.seoArticle.create({
     *   data: {
     *     // ... data to create a SeoArticle
     *   }
     * })
     * 
     */
    create<T extends SeoArticleCreateArgs>(args: SelectSubset<T, SeoArticleCreateArgs<ExtArgs>>): Prisma__SeoArticleClient<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SeoArticles.
     * @param {SeoArticleCreateManyArgs} args - Arguments to create many SeoArticles.
     * @example
     * // Create many SeoArticles
     * const seoArticle = await prisma.seoArticle.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SeoArticleCreateManyArgs>(args?: SelectSubset<T, SeoArticleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SeoArticles and returns the data saved in the database.
     * @param {SeoArticleCreateManyAndReturnArgs} args - Arguments to create many SeoArticles.
     * @example
     * // Create many SeoArticles
     * const seoArticle = await prisma.seoArticle.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SeoArticles and only return the `id`
     * const seoArticleWithIdOnly = await prisma.seoArticle.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SeoArticleCreateManyAndReturnArgs>(args?: SelectSubset<T, SeoArticleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SeoArticle.
     * @param {SeoArticleDeleteArgs} args - Arguments to delete one SeoArticle.
     * @example
     * // Delete one SeoArticle
     * const SeoArticle = await prisma.seoArticle.delete({
     *   where: {
     *     // ... filter to delete one SeoArticle
     *   }
     * })
     * 
     */
    delete<T extends SeoArticleDeleteArgs>(args: SelectSubset<T, SeoArticleDeleteArgs<ExtArgs>>): Prisma__SeoArticleClient<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SeoArticle.
     * @param {SeoArticleUpdateArgs} args - Arguments to update one SeoArticle.
     * @example
     * // Update one SeoArticle
     * const seoArticle = await prisma.seoArticle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SeoArticleUpdateArgs>(args: SelectSubset<T, SeoArticleUpdateArgs<ExtArgs>>): Prisma__SeoArticleClient<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SeoArticles.
     * @param {SeoArticleDeleteManyArgs} args - Arguments to filter SeoArticles to delete.
     * @example
     * // Delete a few SeoArticles
     * const { count } = await prisma.seoArticle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SeoArticleDeleteManyArgs>(args?: SelectSubset<T, SeoArticleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeoArticles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SeoArticles
     * const seoArticle = await prisma.seoArticle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SeoArticleUpdateManyArgs>(args: SelectSubset<T, SeoArticleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeoArticles and returns the data updated in the database.
     * @param {SeoArticleUpdateManyAndReturnArgs} args - Arguments to update many SeoArticles.
     * @example
     * // Update many SeoArticles
     * const seoArticle = await prisma.seoArticle.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SeoArticles and only return the `id`
     * const seoArticleWithIdOnly = await prisma.seoArticle.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SeoArticleUpdateManyAndReturnArgs>(args: SelectSubset<T, SeoArticleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SeoArticle.
     * @param {SeoArticleUpsertArgs} args - Arguments to update or create a SeoArticle.
     * @example
     * // Update or create a SeoArticle
     * const seoArticle = await prisma.seoArticle.upsert({
     *   create: {
     *     // ... data to create a SeoArticle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SeoArticle we want to update
     *   }
     * })
     */
    upsert<T extends SeoArticleUpsertArgs>(args: SelectSubset<T, SeoArticleUpsertArgs<ExtArgs>>): Prisma__SeoArticleClient<$Result.GetResult<Prisma.$SeoArticlePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SeoArticles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleCountArgs} args - Arguments to filter SeoArticles to count.
     * @example
     * // Count the number of SeoArticles
     * const count = await prisma.seoArticle.count({
     *   where: {
     *     // ... the filter for the SeoArticles we want to count
     *   }
     * })
    **/
    count<T extends SeoArticleCountArgs>(
      args?: Subset<T, SeoArticleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SeoArticleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SeoArticle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SeoArticleAggregateArgs>(args: Subset<T, SeoArticleAggregateArgs>): Prisma.PrismaPromise<GetSeoArticleAggregateType<T>>

    /**
     * Group by SeoArticle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SeoArticleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SeoArticleGroupByArgs['orderBy'] }
        : { orderBy?: SeoArticleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SeoArticleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeoArticleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SeoArticle model
   */
  readonly fields: SeoArticleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SeoArticle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SeoArticleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SeoArticle model
   */
  interface SeoArticleFieldRefs {
    readonly id: FieldRef<"SeoArticle", 'Int'>
    readonly agencyId: FieldRef<"SeoArticle", 'Int'>
    readonly parentArticleId: FieldRef<"SeoArticle", 'Int'>
    readonly isChildOfHomePage: FieldRef<"SeoArticle", 'Int'>
    readonly isActive: FieldRef<"SeoArticle", 'Int'>
    readonly seoArticleTypeId: FieldRef<"SeoArticle", 'Int'>
    readonly seoTargetPageTypeId: FieldRef<"SeoArticle", 'Int'>
    readonly seoSpecialPageId: FieldRef<"SeoArticle", 'Int'>
    readonly countryId: FieldRef<"SeoArticle", 'Int'>
    readonly provinceId: FieldRef<"SeoArticle", 'Int'>
    readonly countrySubUnitId: FieldRef<"SeoArticle", 'Int'>
    readonly proCategorySubProductId: FieldRef<"SeoArticle", 'Int'>
    readonly code: FieldRef<"SeoArticle", 'String'>
    readonly name: FieldRef<"SeoArticle", 'String'>
    readonly urlPath: FieldRef<"SeoArticle", 'String'>
    readonly trimmedUrlPath: FieldRef<"SeoArticle", 'String'>
    readonly realUrlPath: FieldRef<"SeoArticle", 'String'>
    readonly metaTitle: FieldRef<"SeoArticle", 'String'>
    readonly metaDescription: FieldRef<"SeoArticle", 'String'>
    readonly primaryKeyword: FieldRef<"SeoArticle", 'String'>
    readonly secondaryKeyword: FieldRef<"SeoArticle", 'String'>
    readonly relatedKeyword: FieldRef<"SeoArticle", 'String'>
    readonly note: FieldRef<"SeoArticle", 'String'>
    readonly desktopCoverImageFileName: FieldRef<"SeoArticle", 'String'>
    readonly desktopCoverImageFileSize: FieldRef<"SeoArticle", 'Int'>
    readonly desktopCoverImageContentType: FieldRef<"SeoArticle", 'String'>
    readonly desktopCoverImageUpdatedAt: FieldRef<"SeoArticle", 'DateTime'>
    readonly mobileCoverImageFileName: FieldRef<"SeoArticle", 'String'>
    readonly mobileCoverImageFileSize: FieldRef<"SeoArticle", 'Int'>
    readonly mobileCoverImageContentType: FieldRef<"SeoArticle", 'String'>
    readonly mobileCoverImageUpdatedAt: FieldRef<"SeoArticle", 'DateTime'>
    readonly coverImageAltText: FieldRef<"SeoArticle", 'String'>
    readonly content: FieldRef<"SeoArticle", 'String'>
    readonly hasContent: FieldRef<"SeoArticle", 'Int'>
    readonly tags: FieldRef<"SeoArticle", 'String'>
    readonly createdAt: FieldRef<"SeoArticle", 'DateTime'>
    readonly createdByAgencyMemberId: FieldRef<"SeoArticle", 'Int'>
    readonly updatedAt: FieldRef<"SeoArticle", 'DateTime'>
    readonly updatedByAgencyMemberId: FieldRef<"SeoArticle", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SeoArticle findUnique
   */
  export type SeoArticleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticle to fetch.
     */
    where: SeoArticleWhereUniqueInput
  }

  /**
   * SeoArticle findUniqueOrThrow
   */
  export type SeoArticleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticle to fetch.
     */
    where: SeoArticleWhereUniqueInput
  }

  /**
   * SeoArticle findFirst
   */
  export type SeoArticleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticle to fetch.
     */
    where?: SeoArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeoArticles to fetch.
     */
    orderBy?: SeoArticleOrderByWithRelationInput | SeoArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeoArticles.
     */
    cursor?: SeoArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeoArticles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeoArticles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeoArticles.
     */
    distinct?: SeoArticleScalarFieldEnum | SeoArticleScalarFieldEnum[]
  }

  /**
   * SeoArticle findFirstOrThrow
   */
  export type SeoArticleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticle to fetch.
     */
    where?: SeoArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeoArticles to fetch.
     */
    orderBy?: SeoArticleOrderByWithRelationInput | SeoArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeoArticles.
     */
    cursor?: SeoArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeoArticles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeoArticles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeoArticles.
     */
    distinct?: SeoArticleScalarFieldEnum | SeoArticleScalarFieldEnum[]
  }

  /**
   * SeoArticle findMany
   */
  export type SeoArticleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticles to fetch.
     */
    where?: SeoArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeoArticles to fetch.
     */
    orderBy?: SeoArticleOrderByWithRelationInput | SeoArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SeoArticles.
     */
    cursor?: SeoArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeoArticles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeoArticles.
     */
    skip?: number
    distinct?: SeoArticleScalarFieldEnum | SeoArticleScalarFieldEnum[]
  }

  /**
   * SeoArticle create
   */
  export type SeoArticleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * The data needed to create a SeoArticle.
     */
    data: XOR<SeoArticleCreateInput, SeoArticleUncheckedCreateInput>
  }

  /**
   * SeoArticle createMany
   */
  export type SeoArticleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SeoArticles.
     */
    data: SeoArticleCreateManyInput | SeoArticleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SeoArticle createManyAndReturn
   */
  export type SeoArticleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * The data used to create many SeoArticles.
     */
    data: SeoArticleCreateManyInput | SeoArticleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SeoArticle update
   */
  export type SeoArticleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * The data needed to update a SeoArticle.
     */
    data: XOR<SeoArticleUpdateInput, SeoArticleUncheckedUpdateInput>
    /**
     * Choose, which SeoArticle to update.
     */
    where: SeoArticleWhereUniqueInput
  }

  /**
   * SeoArticle updateMany
   */
  export type SeoArticleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SeoArticles.
     */
    data: XOR<SeoArticleUpdateManyMutationInput, SeoArticleUncheckedUpdateManyInput>
    /**
     * Filter which SeoArticles to update
     */
    where?: SeoArticleWhereInput
    /**
     * Limit how many SeoArticles to update.
     */
    limit?: number
  }

  /**
   * SeoArticle updateManyAndReturn
   */
  export type SeoArticleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * The data used to update SeoArticles.
     */
    data: XOR<SeoArticleUpdateManyMutationInput, SeoArticleUncheckedUpdateManyInput>
    /**
     * Filter which SeoArticles to update
     */
    where?: SeoArticleWhereInput
    /**
     * Limit how many SeoArticles to update.
     */
    limit?: number
  }

  /**
   * SeoArticle upsert
   */
  export type SeoArticleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * The filter to search for the SeoArticle to update in case it exists.
     */
    where: SeoArticleWhereUniqueInput
    /**
     * In case the SeoArticle found by the `where` argument doesn't exist, create a new SeoArticle with this data.
     */
    create: XOR<SeoArticleCreateInput, SeoArticleUncheckedCreateInput>
    /**
     * In case the SeoArticle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SeoArticleUpdateInput, SeoArticleUncheckedUpdateInput>
  }

  /**
   * SeoArticle delete
   */
  export type SeoArticleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
    /**
     * Filter which SeoArticle to delete.
     */
    where: SeoArticleWhereUniqueInput
  }

  /**
   * SeoArticle deleteMany
   */
  export type SeoArticleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeoArticles to delete
     */
    where?: SeoArticleWhereInput
    /**
     * Limit how many SeoArticles to delete.
     */
    limit?: number
  }

  /**
   * SeoArticle without action
   */
  export type SeoArticleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticle
     */
    select?: SeoArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticle
     */
    omit?: SeoArticleOmit<ExtArgs> | null
  }


  /**
   * Model TwPage
   */

  export type AggregateTwPage = {
    _count: TwPageCountAggregateOutputType | null
    _avg: TwPageAvgAggregateOutputType | null
    _sum: TwPageSumAggregateOutputType | null
    _min: TwPageMinAggregateOutputType | null
    _max: TwPageMaxAggregateOutputType | null
  }

  export type TwPageAvgAggregateOutputType = {
    id: number | null
    agencyId: number | null
    twPageTypeId: number | null
    priority: number | null
    visitedCount: number | null
    isActive: number | null
  }

  export type TwPageSumAggregateOutputType = {
    id: number | null
    agencyId: number | null
    twPageTypeId: number | null
    priority: number | null
    visitedCount: number | null
    isActive: number | null
  }

  export type TwPageMinAggregateOutputType = {
    id: number | null
    agencyId: number | null
    urlPath: string | null
    redirectToUrlPath: string | null
    twPageTypeId: number | null
    twPageArgument: string | null
    lastmod: string | null
    priority: number | null
    visitedCount: number | null
    isActive: number | null
    createdAt: Date | null
    updatedAt: Date | null
    visitedAt: Date | null
  }

  export type TwPageMaxAggregateOutputType = {
    id: number | null
    agencyId: number | null
    urlPath: string | null
    redirectToUrlPath: string | null
    twPageTypeId: number | null
    twPageArgument: string | null
    lastmod: string | null
    priority: number | null
    visitedCount: number | null
    isActive: number | null
    createdAt: Date | null
    updatedAt: Date | null
    visitedAt: Date | null
  }

  export type TwPageCountAggregateOutputType = {
    id: number
    agencyId: number
    urlPath: number
    redirectToUrlPath: number
    twPageTypeId: number
    twPageArgument: number
    lastmod: number
    priority: number
    visitedCount: number
    isActive: number
    createdAt: number
    updatedAt: number
    visitedAt: number
    _all: number
  }


  export type TwPageAvgAggregateInputType = {
    id?: true
    agencyId?: true
    twPageTypeId?: true
    priority?: true
    visitedCount?: true
    isActive?: true
  }

  export type TwPageSumAggregateInputType = {
    id?: true
    agencyId?: true
    twPageTypeId?: true
    priority?: true
    visitedCount?: true
    isActive?: true
  }

  export type TwPageMinAggregateInputType = {
    id?: true
    agencyId?: true
    urlPath?: true
    redirectToUrlPath?: true
    twPageTypeId?: true
    twPageArgument?: true
    lastmod?: true
    priority?: true
    visitedCount?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    visitedAt?: true
  }

  export type TwPageMaxAggregateInputType = {
    id?: true
    agencyId?: true
    urlPath?: true
    redirectToUrlPath?: true
    twPageTypeId?: true
    twPageArgument?: true
    lastmod?: true
    priority?: true
    visitedCount?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    visitedAt?: true
  }

  export type TwPageCountAggregateInputType = {
    id?: true
    agencyId?: true
    urlPath?: true
    redirectToUrlPath?: true
    twPageTypeId?: true
    twPageArgument?: true
    lastmod?: true
    priority?: true
    visitedCount?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    visitedAt?: true
    _all?: true
  }

  export type TwPageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TwPage to aggregate.
     */
    where?: TwPageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwPages to fetch.
     */
    orderBy?: TwPageOrderByWithRelationInput | TwPageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TwPageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwPages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwPages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TwPages
    **/
    _count?: true | TwPageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TwPageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TwPageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TwPageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TwPageMaxAggregateInputType
  }

  export type GetTwPageAggregateType<T extends TwPageAggregateArgs> = {
        [P in keyof T & keyof AggregateTwPage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTwPage[P]>
      : GetScalarType<T[P], AggregateTwPage[P]>
  }




  export type TwPageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TwPageWhereInput
    orderBy?: TwPageOrderByWithAggregationInput | TwPageOrderByWithAggregationInput[]
    by: TwPageScalarFieldEnum[] | TwPageScalarFieldEnum
    having?: TwPageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TwPageCountAggregateInputType | true
    _avg?: TwPageAvgAggregateInputType
    _sum?: TwPageSumAggregateInputType
    _min?: TwPageMinAggregateInputType
    _max?: TwPageMaxAggregateInputType
  }

  export type TwPageGroupByOutputType = {
    id: number
    agencyId: number | null
    urlPath: string
    redirectToUrlPath: string | null
    twPageTypeId: number
    twPageArgument: string
    lastmod: string
    priority: number
    visitedCount: number
    isActive: number
    createdAt: Date
    updatedAt: Date
    visitedAt: Date | null
    _count: TwPageCountAggregateOutputType | null
    _avg: TwPageAvgAggregateOutputType | null
    _sum: TwPageSumAggregateOutputType | null
    _min: TwPageMinAggregateOutputType | null
    _max: TwPageMaxAggregateOutputType | null
  }

  type GetTwPageGroupByPayload<T extends TwPageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TwPageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TwPageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TwPageGroupByOutputType[P]>
            : GetScalarType<T[P], TwPageGroupByOutputType[P]>
        }
      >
    >


  export type TwPageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    urlPath?: boolean
    redirectToUrlPath?: boolean
    twPageTypeId?: boolean
    twPageArgument?: boolean
    lastmod?: boolean
    priority?: boolean
    visitedCount?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visitedAt?: boolean
  }, ExtArgs["result"]["twPage"]>

  export type TwPageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    urlPath?: boolean
    redirectToUrlPath?: boolean
    twPageTypeId?: boolean
    twPageArgument?: boolean
    lastmod?: boolean
    priority?: boolean
    visitedCount?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visitedAt?: boolean
  }, ExtArgs["result"]["twPage"]>

  export type TwPageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    urlPath?: boolean
    redirectToUrlPath?: boolean
    twPageTypeId?: boolean
    twPageArgument?: boolean
    lastmod?: boolean
    priority?: boolean
    visitedCount?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visitedAt?: boolean
  }, ExtArgs["result"]["twPage"]>

  export type TwPageSelectScalar = {
    id?: boolean
    agencyId?: boolean
    urlPath?: boolean
    redirectToUrlPath?: boolean
    twPageTypeId?: boolean
    twPageArgument?: boolean
    lastmod?: boolean
    priority?: boolean
    visitedCount?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visitedAt?: boolean
  }

  export type TwPageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agencyId" | "urlPath" | "redirectToUrlPath" | "twPageTypeId" | "twPageArgument" | "lastmod" | "priority" | "visitedCount" | "isActive" | "createdAt" | "updatedAt" | "visitedAt", ExtArgs["result"]["twPage"]>

  export type $TwPagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TwPage"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      agencyId: number | null
      urlPath: string
      redirectToUrlPath: string | null
      twPageTypeId: number
      twPageArgument: string
      lastmod: string
      priority: number
      visitedCount: number
      isActive: number
      createdAt: Date
      updatedAt: Date
      visitedAt: Date | null
    }, ExtArgs["result"]["twPage"]>
    composites: {}
  }

  type TwPageGetPayload<S extends boolean | null | undefined | TwPageDefaultArgs> = $Result.GetResult<Prisma.$TwPagePayload, S>

  type TwPageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TwPageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TwPageCountAggregateInputType | true
    }

  export interface TwPageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TwPage'], meta: { name: 'TwPage' } }
    /**
     * Find zero or one TwPage that matches the filter.
     * @param {TwPageFindUniqueArgs} args - Arguments to find a TwPage
     * @example
     * // Get one TwPage
     * const twPage = await prisma.twPage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TwPageFindUniqueArgs>(args: SelectSubset<T, TwPageFindUniqueArgs<ExtArgs>>): Prisma__TwPageClient<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TwPage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TwPageFindUniqueOrThrowArgs} args - Arguments to find a TwPage
     * @example
     * // Get one TwPage
     * const twPage = await prisma.twPage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TwPageFindUniqueOrThrowArgs>(args: SelectSubset<T, TwPageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TwPageClient<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TwPage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageFindFirstArgs} args - Arguments to find a TwPage
     * @example
     * // Get one TwPage
     * const twPage = await prisma.twPage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TwPageFindFirstArgs>(args?: SelectSubset<T, TwPageFindFirstArgs<ExtArgs>>): Prisma__TwPageClient<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TwPage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageFindFirstOrThrowArgs} args - Arguments to find a TwPage
     * @example
     * // Get one TwPage
     * const twPage = await prisma.twPage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TwPageFindFirstOrThrowArgs>(args?: SelectSubset<T, TwPageFindFirstOrThrowArgs<ExtArgs>>): Prisma__TwPageClient<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TwPages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TwPages
     * const twPages = await prisma.twPage.findMany()
     * 
     * // Get first 10 TwPages
     * const twPages = await prisma.twPage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const twPageWithIdOnly = await prisma.twPage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TwPageFindManyArgs>(args?: SelectSubset<T, TwPageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TwPage.
     * @param {TwPageCreateArgs} args - Arguments to create a TwPage.
     * @example
     * // Create one TwPage
     * const TwPage = await prisma.twPage.create({
     *   data: {
     *     // ... data to create a TwPage
     *   }
     * })
     * 
     */
    create<T extends TwPageCreateArgs>(args: SelectSubset<T, TwPageCreateArgs<ExtArgs>>): Prisma__TwPageClient<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TwPages.
     * @param {TwPageCreateManyArgs} args - Arguments to create many TwPages.
     * @example
     * // Create many TwPages
     * const twPage = await prisma.twPage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TwPageCreateManyArgs>(args?: SelectSubset<T, TwPageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TwPages and returns the data saved in the database.
     * @param {TwPageCreateManyAndReturnArgs} args - Arguments to create many TwPages.
     * @example
     * // Create many TwPages
     * const twPage = await prisma.twPage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TwPages and only return the `id`
     * const twPageWithIdOnly = await prisma.twPage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TwPageCreateManyAndReturnArgs>(args?: SelectSubset<T, TwPageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TwPage.
     * @param {TwPageDeleteArgs} args - Arguments to delete one TwPage.
     * @example
     * // Delete one TwPage
     * const TwPage = await prisma.twPage.delete({
     *   where: {
     *     // ... filter to delete one TwPage
     *   }
     * })
     * 
     */
    delete<T extends TwPageDeleteArgs>(args: SelectSubset<T, TwPageDeleteArgs<ExtArgs>>): Prisma__TwPageClient<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TwPage.
     * @param {TwPageUpdateArgs} args - Arguments to update one TwPage.
     * @example
     * // Update one TwPage
     * const twPage = await prisma.twPage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TwPageUpdateArgs>(args: SelectSubset<T, TwPageUpdateArgs<ExtArgs>>): Prisma__TwPageClient<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TwPages.
     * @param {TwPageDeleteManyArgs} args - Arguments to filter TwPages to delete.
     * @example
     * // Delete a few TwPages
     * const { count } = await prisma.twPage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TwPageDeleteManyArgs>(args?: SelectSubset<T, TwPageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TwPages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TwPages
     * const twPage = await prisma.twPage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TwPageUpdateManyArgs>(args: SelectSubset<T, TwPageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TwPages and returns the data updated in the database.
     * @param {TwPageUpdateManyAndReturnArgs} args - Arguments to update many TwPages.
     * @example
     * // Update many TwPages
     * const twPage = await prisma.twPage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TwPages and only return the `id`
     * const twPageWithIdOnly = await prisma.twPage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TwPageUpdateManyAndReturnArgs>(args: SelectSubset<T, TwPageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TwPage.
     * @param {TwPageUpsertArgs} args - Arguments to update or create a TwPage.
     * @example
     * // Update or create a TwPage
     * const twPage = await prisma.twPage.upsert({
     *   create: {
     *     // ... data to create a TwPage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TwPage we want to update
     *   }
     * })
     */
    upsert<T extends TwPageUpsertArgs>(args: SelectSubset<T, TwPageUpsertArgs<ExtArgs>>): Prisma__TwPageClient<$Result.GetResult<Prisma.$TwPagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TwPages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageCountArgs} args - Arguments to filter TwPages to count.
     * @example
     * // Count the number of TwPages
     * const count = await prisma.twPage.count({
     *   where: {
     *     // ... the filter for the TwPages we want to count
     *   }
     * })
    **/
    count<T extends TwPageCountArgs>(
      args?: Subset<T, TwPageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TwPageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TwPage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TwPageAggregateArgs>(args: Subset<T, TwPageAggregateArgs>): Prisma.PrismaPromise<GetTwPageAggregateType<T>>

    /**
     * Group by TwPage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TwPageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TwPageGroupByArgs['orderBy'] }
        : { orderBy?: TwPageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TwPageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTwPageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TwPage model
   */
  readonly fields: TwPageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TwPage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TwPageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TwPage model
   */
  interface TwPageFieldRefs {
    readonly id: FieldRef<"TwPage", 'Int'>
    readonly agencyId: FieldRef<"TwPage", 'Int'>
    readonly urlPath: FieldRef<"TwPage", 'String'>
    readonly redirectToUrlPath: FieldRef<"TwPage", 'String'>
    readonly twPageTypeId: FieldRef<"TwPage", 'Int'>
    readonly twPageArgument: FieldRef<"TwPage", 'String'>
    readonly lastmod: FieldRef<"TwPage", 'String'>
    readonly priority: FieldRef<"TwPage", 'Float'>
    readonly visitedCount: FieldRef<"TwPage", 'Int'>
    readonly isActive: FieldRef<"TwPage", 'Int'>
    readonly createdAt: FieldRef<"TwPage", 'DateTime'>
    readonly updatedAt: FieldRef<"TwPage", 'DateTime'>
    readonly visitedAt: FieldRef<"TwPage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TwPage findUnique
   */
  export type TwPageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * Filter, which TwPage to fetch.
     */
    where: TwPageWhereUniqueInput
  }

  /**
   * TwPage findUniqueOrThrow
   */
  export type TwPageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * Filter, which TwPage to fetch.
     */
    where: TwPageWhereUniqueInput
  }

  /**
   * TwPage findFirst
   */
  export type TwPageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * Filter, which TwPage to fetch.
     */
    where?: TwPageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwPages to fetch.
     */
    orderBy?: TwPageOrderByWithRelationInput | TwPageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TwPages.
     */
    cursor?: TwPageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwPages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwPages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TwPages.
     */
    distinct?: TwPageScalarFieldEnum | TwPageScalarFieldEnum[]
  }

  /**
   * TwPage findFirstOrThrow
   */
  export type TwPageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * Filter, which TwPage to fetch.
     */
    where?: TwPageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwPages to fetch.
     */
    orderBy?: TwPageOrderByWithRelationInput | TwPageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TwPages.
     */
    cursor?: TwPageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwPages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwPages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TwPages.
     */
    distinct?: TwPageScalarFieldEnum | TwPageScalarFieldEnum[]
  }

  /**
   * TwPage findMany
   */
  export type TwPageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * Filter, which TwPages to fetch.
     */
    where?: TwPageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwPages to fetch.
     */
    orderBy?: TwPageOrderByWithRelationInput | TwPageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TwPages.
     */
    cursor?: TwPageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwPages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwPages.
     */
    skip?: number
    distinct?: TwPageScalarFieldEnum | TwPageScalarFieldEnum[]
  }

  /**
   * TwPage create
   */
  export type TwPageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * The data needed to create a TwPage.
     */
    data: XOR<TwPageCreateInput, TwPageUncheckedCreateInput>
  }

  /**
   * TwPage createMany
   */
  export type TwPageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TwPages.
     */
    data: TwPageCreateManyInput | TwPageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TwPage createManyAndReturn
   */
  export type TwPageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * The data used to create many TwPages.
     */
    data: TwPageCreateManyInput | TwPageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TwPage update
   */
  export type TwPageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * The data needed to update a TwPage.
     */
    data: XOR<TwPageUpdateInput, TwPageUncheckedUpdateInput>
    /**
     * Choose, which TwPage to update.
     */
    where: TwPageWhereUniqueInput
  }

  /**
   * TwPage updateMany
   */
  export type TwPageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TwPages.
     */
    data: XOR<TwPageUpdateManyMutationInput, TwPageUncheckedUpdateManyInput>
    /**
     * Filter which TwPages to update
     */
    where?: TwPageWhereInput
    /**
     * Limit how many TwPages to update.
     */
    limit?: number
  }

  /**
   * TwPage updateManyAndReturn
   */
  export type TwPageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * The data used to update TwPages.
     */
    data: XOR<TwPageUpdateManyMutationInput, TwPageUncheckedUpdateManyInput>
    /**
     * Filter which TwPages to update
     */
    where?: TwPageWhereInput
    /**
     * Limit how many TwPages to update.
     */
    limit?: number
  }

  /**
   * TwPage upsert
   */
  export type TwPageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * The filter to search for the TwPage to update in case it exists.
     */
    where: TwPageWhereUniqueInput
    /**
     * In case the TwPage found by the `where` argument doesn't exist, create a new TwPage with this data.
     */
    create: XOR<TwPageCreateInput, TwPageUncheckedCreateInput>
    /**
     * In case the TwPage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TwPageUpdateInput, TwPageUncheckedUpdateInput>
  }

  /**
   * TwPage delete
   */
  export type TwPageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
    /**
     * Filter which TwPage to delete.
     */
    where: TwPageWhereUniqueInput
  }

  /**
   * TwPage deleteMany
   */
  export type TwPageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TwPages to delete
     */
    where?: TwPageWhereInput
    /**
     * Limit how many TwPages to delete.
     */
    limit?: number
  }

  /**
   * TwPage without action
   */
  export type TwPageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPage
     */
    select?: TwPageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPage
     */
    omit?: TwPageOmit<ExtArgs> | null
  }


  /**
   * Model TwPageType
   */

  export type AggregateTwPageType = {
    _count: TwPageTypeCountAggregateOutputType | null
    _avg: TwPageTypeAvgAggregateOutputType | null
    _sum: TwPageTypeSumAggregateOutputType | null
    _min: TwPageTypeMinAggregateOutputType | null
    _max: TwPageTypeMaxAggregateOutputType | null
  }

  export type TwPageTypeAvgAggregateOutputType = {
    id: number | null
    priority: number | null
  }

  export type TwPageTypeSumAggregateOutputType = {
    id: number | null
    priority: number | null
  }

  export type TwPageTypeMinAggregateOutputType = {
    id: number | null
    slug: string | null
    priority: number | null
  }

  export type TwPageTypeMaxAggregateOutputType = {
    id: number | null
    slug: string | null
    priority: number | null
  }

  export type TwPageTypeCountAggregateOutputType = {
    id: number
    slug: number
    priority: number
    _all: number
  }


  export type TwPageTypeAvgAggregateInputType = {
    id?: true
    priority?: true
  }

  export type TwPageTypeSumAggregateInputType = {
    id?: true
    priority?: true
  }

  export type TwPageTypeMinAggregateInputType = {
    id?: true
    slug?: true
    priority?: true
  }

  export type TwPageTypeMaxAggregateInputType = {
    id?: true
    slug?: true
    priority?: true
  }

  export type TwPageTypeCountAggregateInputType = {
    id?: true
    slug?: true
    priority?: true
    _all?: true
  }

  export type TwPageTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TwPageType to aggregate.
     */
    where?: TwPageTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwPageTypes to fetch.
     */
    orderBy?: TwPageTypeOrderByWithRelationInput | TwPageTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TwPageTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwPageTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwPageTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TwPageTypes
    **/
    _count?: true | TwPageTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TwPageTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TwPageTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TwPageTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TwPageTypeMaxAggregateInputType
  }

  export type GetTwPageTypeAggregateType<T extends TwPageTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateTwPageType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTwPageType[P]>
      : GetScalarType<T[P], AggregateTwPageType[P]>
  }




  export type TwPageTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TwPageTypeWhereInput
    orderBy?: TwPageTypeOrderByWithAggregationInput | TwPageTypeOrderByWithAggregationInput[]
    by: TwPageTypeScalarFieldEnum[] | TwPageTypeScalarFieldEnum
    having?: TwPageTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TwPageTypeCountAggregateInputType | true
    _avg?: TwPageTypeAvgAggregateInputType
    _sum?: TwPageTypeSumAggregateInputType
    _min?: TwPageTypeMinAggregateInputType
    _max?: TwPageTypeMaxAggregateInputType
  }

  export type TwPageTypeGroupByOutputType = {
    id: number
    slug: string
    priority: number
    _count: TwPageTypeCountAggregateOutputType | null
    _avg: TwPageTypeAvgAggregateOutputType | null
    _sum: TwPageTypeSumAggregateOutputType | null
    _min: TwPageTypeMinAggregateOutputType | null
    _max: TwPageTypeMaxAggregateOutputType | null
  }

  type GetTwPageTypeGroupByPayload<T extends TwPageTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TwPageTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TwPageTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TwPageTypeGroupByOutputType[P]>
            : GetScalarType<T[P], TwPageTypeGroupByOutputType[P]>
        }
      >
    >


  export type TwPageTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    priority?: boolean
  }, ExtArgs["result"]["twPageType"]>

  export type TwPageTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    priority?: boolean
  }, ExtArgs["result"]["twPageType"]>

  export type TwPageTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    priority?: boolean
  }, ExtArgs["result"]["twPageType"]>

  export type TwPageTypeSelectScalar = {
    id?: boolean
    slug?: boolean
    priority?: boolean
  }

  export type TwPageTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "slug" | "priority", ExtArgs["result"]["twPageType"]>

  export type $TwPageTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TwPageType"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      slug: string
      priority: number
    }, ExtArgs["result"]["twPageType"]>
    composites: {}
  }

  type TwPageTypeGetPayload<S extends boolean | null | undefined | TwPageTypeDefaultArgs> = $Result.GetResult<Prisma.$TwPageTypePayload, S>

  type TwPageTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TwPageTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TwPageTypeCountAggregateInputType | true
    }

  export interface TwPageTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TwPageType'], meta: { name: 'TwPageType' } }
    /**
     * Find zero or one TwPageType that matches the filter.
     * @param {TwPageTypeFindUniqueArgs} args - Arguments to find a TwPageType
     * @example
     * // Get one TwPageType
     * const twPageType = await prisma.twPageType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TwPageTypeFindUniqueArgs>(args: SelectSubset<T, TwPageTypeFindUniqueArgs<ExtArgs>>): Prisma__TwPageTypeClient<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TwPageType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TwPageTypeFindUniqueOrThrowArgs} args - Arguments to find a TwPageType
     * @example
     * // Get one TwPageType
     * const twPageType = await prisma.twPageType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TwPageTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, TwPageTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TwPageTypeClient<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TwPageType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageTypeFindFirstArgs} args - Arguments to find a TwPageType
     * @example
     * // Get one TwPageType
     * const twPageType = await prisma.twPageType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TwPageTypeFindFirstArgs>(args?: SelectSubset<T, TwPageTypeFindFirstArgs<ExtArgs>>): Prisma__TwPageTypeClient<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TwPageType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageTypeFindFirstOrThrowArgs} args - Arguments to find a TwPageType
     * @example
     * // Get one TwPageType
     * const twPageType = await prisma.twPageType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TwPageTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, TwPageTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__TwPageTypeClient<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TwPageTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TwPageTypes
     * const twPageTypes = await prisma.twPageType.findMany()
     * 
     * // Get first 10 TwPageTypes
     * const twPageTypes = await prisma.twPageType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const twPageTypeWithIdOnly = await prisma.twPageType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TwPageTypeFindManyArgs>(args?: SelectSubset<T, TwPageTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TwPageType.
     * @param {TwPageTypeCreateArgs} args - Arguments to create a TwPageType.
     * @example
     * // Create one TwPageType
     * const TwPageType = await prisma.twPageType.create({
     *   data: {
     *     // ... data to create a TwPageType
     *   }
     * })
     * 
     */
    create<T extends TwPageTypeCreateArgs>(args: SelectSubset<T, TwPageTypeCreateArgs<ExtArgs>>): Prisma__TwPageTypeClient<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TwPageTypes.
     * @param {TwPageTypeCreateManyArgs} args - Arguments to create many TwPageTypes.
     * @example
     * // Create many TwPageTypes
     * const twPageType = await prisma.twPageType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TwPageTypeCreateManyArgs>(args?: SelectSubset<T, TwPageTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TwPageTypes and returns the data saved in the database.
     * @param {TwPageTypeCreateManyAndReturnArgs} args - Arguments to create many TwPageTypes.
     * @example
     * // Create many TwPageTypes
     * const twPageType = await prisma.twPageType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TwPageTypes and only return the `id`
     * const twPageTypeWithIdOnly = await prisma.twPageType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TwPageTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, TwPageTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TwPageType.
     * @param {TwPageTypeDeleteArgs} args - Arguments to delete one TwPageType.
     * @example
     * // Delete one TwPageType
     * const TwPageType = await prisma.twPageType.delete({
     *   where: {
     *     // ... filter to delete one TwPageType
     *   }
     * })
     * 
     */
    delete<T extends TwPageTypeDeleteArgs>(args: SelectSubset<T, TwPageTypeDeleteArgs<ExtArgs>>): Prisma__TwPageTypeClient<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TwPageType.
     * @param {TwPageTypeUpdateArgs} args - Arguments to update one TwPageType.
     * @example
     * // Update one TwPageType
     * const twPageType = await prisma.twPageType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TwPageTypeUpdateArgs>(args: SelectSubset<T, TwPageTypeUpdateArgs<ExtArgs>>): Prisma__TwPageTypeClient<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TwPageTypes.
     * @param {TwPageTypeDeleteManyArgs} args - Arguments to filter TwPageTypes to delete.
     * @example
     * // Delete a few TwPageTypes
     * const { count } = await prisma.twPageType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TwPageTypeDeleteManyArgs>(args?: SelectSubset<T, TwPageTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TwPageTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TwPageTypes
     * const twPageType = await prisma.twPageType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TwPageTypeUpdateManyArgs>(args: SelectSubset<T, TwPageTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TwPageTypes and returns the data updated in the database.
     * @param {TwPageTypeUpdateManyAndReturnArgs} args - Arguments to update many TwPageTypes.
     * @example
     * // Update many TwPageTypes
     * const twPageType = await prisma.twPageType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TwPageTypes and only return the `id`
     * const twPageTypeWithIdOnly = await prisma.twPageType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TwPageTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, TwPageTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TwPageType.
     * @param {TwPageTypeUpsertArgs} args - Arguments to update or create a TwPageType.
     * @example
     * // Update or create a TwPageType
     * const twPageType = await prisma.twPageType.upsert({
     *   create: {
     *     // ... data to create a TwPageType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TwPageType we want to update
     *   }
     * })
     */
    upsert<T extends TwPageTypeUpsertArgs>(args: SelectSubset<T, TwPageTypeUpsertArgs<ExtArgs>>): Prisma__TwPageTypeClient<$Result.GetResult<Prisma.$TwPageTypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TwPageTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageTypeCountArgs} args - Arguments to filter TwPageTypes to count.
     * @example
     * // Count the number of TwPageTypes
     * const count = await prisma.twPageType.count({
     *   where: {
     *     // ... the filter for the TwPageTypes we want to count
     *   }
     * })
    **/
    count<T extends TwPageTypeCountArgs>(
      args?: Subset<T, TwPageTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TwPageTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TwPageType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TwPageTypeAggregateArgs>(args: Subset<T, TwPageTypeAggregateArgs>): Prisma.PrismaPromise<GetTwPageTypeAggregateType<T>>

    /**
     * Group by TwPageType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwPageTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TwPageTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TwPageTypeGroupByArgs['orderBy'] }
        : { orderBy?: TwPageTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TwPageTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTwPageTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TwPageType model
   */
  readonly fields: TwPageTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TwPageType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TwPageTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TwPageType model
   */
  interface TwPageTypeFieldRefs {
    readonly id: FieldRef<"TwPageType", 'Int'>
    readonly slug: FieldRef<"TwPageType", 'String'>
    readonly priority: FieldRef<"TwPageType", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * TwPageType findUnique
   */
  export type TwPageTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * Filter, which TwPageType to fetch.
     */
    where: TwPageTypeWhereUniqueInput
  }

  /**
   * TwPageType findUniqueOrThrow
   */
  export type TwPageTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * Filter, which TwPageType to fetch.
     */
    where: TwPageTypeWhereUniqueInput
  }

  /**
   * TwPageType findFirst
   */
  export type TwPageTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * Filter, which TwPageType to fetch.
     */
    where?: TwPageTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwPageTypes to fetch.
     */
    orderBy?: TwPageTypeOrderByWithRelationInput | TwPageTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TwPageTypes.
     */
    cursor?: TwPageTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwPageTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwPageTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TwPageTypes.
     */
    distinct?: TwPageTypeScalarFieldEnum | TwPageTypeScalarFieldEnum[]
  }

  /**
   * TwPageType findFirstOrThrow
   */
  export type TwPageTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * Filter, which TwPageType to fetch.
     */
    where?: TwPageTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwPageTypes to fetch.
     */
    orderBy?: TwPageTypeOrderByWithRelationInput | TwPageTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TwPageTypes.
     */
    cursor?: TwPageTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwPageTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwPageTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TwPageTypes.
     */
    distinct?: TwPageTypeScalarFieldEnum | TwPageTypeScalarFieldEnum[]
  }

  /**
   * TwPageType findMany
   */
  export type TwPageTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * Filter, which TwPageTypes to fetch.
     */
    where?: TwPageTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwPageTypes to fetch.
     */
    orderBy?: TwPageTypeOrderByWithRelationInput | TwPageTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TwPageTypes.
     */
    cursor?: TwPageTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwPageTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwPageTypes.
     */
    skip?: number
    distinct?: TwPageTypeScalarFieldEnum | TwPageTypeScalarFieldEnum[]
  }

  /**
   * TwPageType create
   */
  export type TwPageTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * The data needed to create a TwPageType.
     */
    data: XOR<TwPageTypeCreateInput, TwPageTypeUncheckedCreateInput>
  }

  /**
   * TwPageType createMany
   */
  export type TwPageTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TwPageTypes.
     */
    data: TwPageTypeCreateManyInput | TwPageTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TwPageType createManyAndReturn
   */
  export type TwPageTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * The data used to create many TwPageTypes.
     */
    data: TwPageTypeCreateManyInput | TwPageTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TwPageType update
   */
  export type TwPageTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * The data needed to update a TwPageType.
     */
    data: XOR<TwPageTypeUpdateInput, TwPageTypeUncheckedUpdateInput>
    /**
     * Choose, which TwPageType to update.
     */
    where: TwPageTypeWhereUniqueInput
  }

  /**
   * TwPageType updateMany
   */
  export type TwPageTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TwPageTypes.
     */
    data: XOR<TwPageTypeUpdateManyMutationInput, TwPageTypeUncheckedUpdateManyInput>
    /**
     * Filter which TwPageTypes to update
     */
    where?: TwPageTypeWhereInput
    /**
     * Limit how many TwPageTypes to update.
     */
    limit?: number
  }

  /**
   * TwPageType updateManyAndReturn
   */
  export type TwPageTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * The data used to update TwPageTypes.
     */
    data: XOR<TwPageTypeUpdateManyMutationInput, TwPageTypeUncheckedUpdateManyInput>
    /**
     * Filter which TwPageTypes to update
     */
    where?: TwPageTypeWhereInput
    /**
     * Limit how many TwPageTypes to update.
     */
    limit?: number
  }

  /**
   * TwPageType upsert
   */
  export type TwPageTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * The filter to search for the TwPageType to update in case it exists.
     */
    where: TwPageTypeWhereUniqueInput
    /**
     * In case the TwPageType found by the `where` argument doesn't exist, create a new TwPageType with this data.
     */
    create: XOR<TwPageTypeCreateInput, TwPageTypeUncheckedCreateInput>
    /**
     * In case the TwPageType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TwPageTypeUpdateInput, TwPageTypeUncheckedUpdateInput>
  }

  /**
   * TwPageType delete
   */
  export type TwPageTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
    /**
     * Filter which TwPageType to delete.
     */
    where: TwPageTypeWhereUniqueInput
  }

  /**
   * TwPageType deleteMany
   */
  export type TwPageTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TwPageTypes to delete
     */
    where?: TwPageTypeWhereInput
    /**
     * Limit how many TwPageTypes to delete.
     */
    limit?: number
  }

  /**
   * TwPageType without action
   */
  export type TwPageTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwPageType
     */
    select?: TwPageTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwPageType
     */
    omit?: TwPageTypeOmit<ExtArgs> | null
  }


  /**
   * Model SeoArticleType
   */

  export type AggregateSeoArticleType = {
    _count: SeoArticleTypeCountAggregateOutputType | null
    _avg: SeoArticleTypeAvgAggregateOutputType | null
    _sum: SeoArticleTypeSumAggregateOutputType | null
    _min: SeoArticleTypeMinAggregateOutputType | null
    _max: SeoArticleTypeMaxAggregateOutputType | null
  }

  export type SeoArticleTypeAvgAggregateOutputType = {
    id: number | null
  }

  export type SeoArticleTypeSumAggregateOutputType = {
    id: number | null
  }

  export type SeoArticleTypeMinAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
  }

  export type SeoArticleTypeMaxAggregateOutputType = {
    id: number | null
    name: string | null
    slug: string | null
  }

  export type SeoArticleTypeCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    _all: number
  }


  export type SeoArticleTypeAvgAggregateInputType = {
    id?: true
  }

  export type SeoArticleTypeSumAggregateInputType = {
    id?: true
  }

  export type SeoArticleTypeMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
  }

  export type SeoArticleTypeMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
  }

  export type SeoArticleTypeCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    _all?: true
  }

  export type SeoArticleTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeoArticleType to aggregate.
     */
    where?: SeoArticleTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeoArticleTypes to fetch.
     */
    orderBy?: SeoArticleTypeOrderByWithRelationInput | SeoArticleTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SeoArticleTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeoArticleTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeoArticleTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SeoArticleTypes
    **/
    _count?: true | SeoArticleTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SeoArticleTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SeoArticleTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SeoArticleTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SeoArticleTypeMaxAggregateInputType
  }

  export type GetSeoArticleTypeAggregateType<T extends SeoArticleTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateSeoArticleType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeoArticleType[P]>
      : GetScalarType<T[P], AggregateSeoArticleType[P]>
  }




  export type SeoArticleTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeoArticleTypeWhereInput
    orderBy?: SeoArticleTypeOrderByWithAggregationInput | SeoArticleTypeOrderByWithAggregationInput[]
    by: SeoArticleTypeScalarFieldEnum[] | SeoArticleTypeScalarFieldEnum
    having?: SeoArticleTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SeoArticleTypeCountAggregateInputType | true
    _avg?: SeoArticleTypeAvgAggregateInputType
    _sum?: SeoArticleTypeSumAggregateInputType
    _min?: SeoArticleTypeMinAggregateInputType
    _max?: SeoArticleTypeMaxAggregateInputType
  }

  export type SeoArticleTypeGroupByOutputType = {
    id: number
    name: string
    slug: string
    _count: SeoArticleTypeCountAggregateOutputType | null
    _avg: SeoArticleTypeAvgAggregateOutputType | null
    _sum: SeoArticleTypeSumAggregateOutputType | null
    _min: SeoArticleTypeMinAggregateOutputType | null
    _max: SeoArticleTypeMaxAggregateOutputType | null
  }

  type GetSeoArticleTypeGroupByPayload<T extends SeoArticleTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SeoArticleTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SeoArticleTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SeoArticleTypeGroupByOutputType[P]>
            : GetScalarType<T[P], SeoArticleTypeGroupByOutputType[P]>
        }
      >
    >


  export type SeoArticleTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
  }, ExtArgs["result"]["seoArticleType"]>

  export type SeoArticleTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
  }, ExtArgs["result"]["seoArticleType"]>

  export type SeoArticleTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
  }, ExtArgs["result"]["seoArticleType"]>

  export type SeoArticleTypeSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
  }

  export type SeoArticleTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug", ExtArgs["result"]["seoArticleType"]>

  export type $SeoArticleTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SeoArticleType"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      slug: string
    }, ExtArgs["result"]["seoArticleType"]>
    composites: {}
  }

  type SeoArticleTypeGetPayload<S extends boolean | null | undefined | SeoArticleTypeDefaultArgs> = $Result.GetResult<Prisma.$SeoArticleTypePayload, S>

  type SeoArticleTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SeoArticleTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SeoArticleTypeCountAggregateInputType | true
    }

  export interface SeoArticleTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SeoArticleType'], meta: { name: 'SeoArticleType' } }
    /**
     * Find zero or one SeoArticleType that matches the filter.
     * @param {SeoArticleTypeFindUniqueArgs} args - Arguments to find a SeoArticleType
     * @example
     * // Get one SeoArticleType
     * const seoArticleType = await prisma.seoArticleType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SeoArticleTypeFindUniqueArgs>(args: SelectSubset<T, SeoArticleTypeFindUniqueArgs<ExtArgs>>): Prisma__SeoArticleTypeClient<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SeoArticleType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SeoArticleTypeFindUniqueOrThrowArgs} args - Arguments to find a SeoArticleType
     * @example
     * // Get one SeoArticleType
     * const seoArticleType = await prisma.seoArticleType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SeoArticleTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, SeoArticleTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SeoArticleTypeClient<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeoArticleType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleTypeFindFirstArgs} args - Arguments to find a SeoArticleType
     * @example
     * // Get one SeoArticleType
     * const seoArticleType = await prisma.seoArticleType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SeoArticleTypeFindFirstArgs>(args?: SelectSubset<T, SeoArticleTypeFindFirstArgs<ExtArgs>>): Prisma__SeoArticleTypeClient<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeoArticleType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleTypeFindFirstOrThrowArgs} args - Arguments to find a SeoArticleType
     * @example
     * // Get one SeoArticleType
     * const seoArticleType = await prisma.seoArticleType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SeoArticleTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, SeoArticleTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__SeoArticleTypeClient<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SeoArticleTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SeoArticleTypes
     * const seoArticleTypes = await prisma.seoArticleType.findMany()
     * 
     * // Get first 10 SeoArticleTypes
     * const seoArticleTypes = await prisma.seoArticleType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const seoArticleTypeWithIdOnly = await prisma.seoArticleType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SeoArticleTypeFindManyArgs>(args?: SelectSubset<T, SeoArticleTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SeoArticleType.
     * @param {SeoArticleTypeCreateArgs} args - Arguments to create a SeoArticleType.
     * @example
     * // Create one SeoArticleType
     * const SeoArticleType = await prisma.seoArticleType.create({
     *   data: {
     *     // ... data to create a SeoArticleType
     *   }
     * })
     * 
     */
    create<T extends SeoArticleTypeCreateArgs>(args: SelectSubset<T, SeoArticleTypeCreateArgs<ExtArgs>>): Prisma__SeoArticleTypeClient<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SeoArticleTypes.
     * @param {SeoArticleTypeCreateManyArgs} args - Arguments to create many SeoArticleTypes.
     * @example
     * // Create many SeoArticleTypes
     * const seoArticleType = await prisma.seoArticleType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SeoArticleTypeCreateManyArgs>(args?: SelectSubset<T, SeoArticleTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SeoArticleTypes and returns the data saved in the database.
     * @param {SeoArticleTypeCreateManyAndReturnArgs} args - Arguments to create many SeoArticleTypes.
     * @example
     * // Create many SeoArticleTypes
     * const seoArticleType = await prisma.seoArticleType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SeoArticleTypes and only return the `id`
     * const seoArticleTypeWithIdOnly = await prisma.seoArticleType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SeoArticleTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, SeoArticleTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SeoArticleType.
     * @param {SeoArticleTypeDeleteArgs} args - Arguments to delete one SeoArticleType.
     * @example
     * // Delete one SeoArticleType
     * const SeoArticleType = await prisma.seoArticleType.delete({
     *   where: {
     *     // ... filter to delete one SeoArticleType
     *   }
     * })
     * 
     */
    delete<T extends SeoArticleTypeDeleteArgs>(args: SelectSubset<T, SeoArticleTypeDeleteArgs<ExtArgs>>): Prisma__SeoArticleTypeClient<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SeoArticleType.
     * @param {SeoArticleTypeUpdateArgs} args - Arguments to update one SeoArticleType.
     * @example
     * // Update one SeoArticleType
     * const seoArticleType = await prisma.seoArticleType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SeoArticleTypeUpdateArgs>(args: SelectSubset<T, SeoArticleTypeUpdateArgs<ExtArgs>>): Prisma__SeoArticleTypeClient<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SeoArticleTypes.
     * @param {SeoArticleTypeDeleteManyArgs} args - Arguments to filter SeoArticleTypes to delete.
     * @example
     * // Delete a few SeoArticleTypes
     * const { count } = await prisma.seoArticleType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SeoArticleTypeDeleteManyArgs>(args?: SelectSubset<T, SeoArticleTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeoArticleTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SeoArticleTypes
     * const seoArticleType = await prisma.seoArticleType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SeoArticleTypeUpdateManyArgs>(args: SelectSubset<T, SeoArticleTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeoArticleTypes and returns the data updated in the database.
     * @param {SeoArticleTypeUpdateManyAndReturnArgs} args - Arguments to update many SeoArticleTypes.
     * @example
     * // Update many SeoArticleTypes
     * const seoArticleType = await prisma.seoArticleType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SeoArticleTypes and only return the `id`
     * const seoArticleTypeWithIdOnly = await prisma.seoArticleType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SeoArticleTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, SeoArticleTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SeoArticleType.
     * @param {SeoArticleTypeUpsertArgs} args - Arguments to update or create a SeoArticleType.
     * @example
     * // Update or create a SeoArticleType
     * const seoArticleType = await prisma.seoArticleType.upsert({
     *   create: {
     *     // ... data to create a SeoArticleType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SeoArticleType we want to update
     *   }
     * })
     */
    upsert<T extends SeoArticleTypeUpsertArgs>(args: SelectSubset<T, SeoArticleTypeUpsertArgs<ExtArgs>>): Prisma__SeoArticleTypeClient<$Result.GetResult<Prisma.$SeoArticleTypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SeoArticleTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleTypeCountArgs} args - Arguments to filter SeoArticleTypes to count.
     * @example
     * // Count the number of SeoArticleTypes
     * const count = await prisma.seoArticleType.count({
     *   where: {
     *     // ... the filter for the SeoArticleTypes we want to count
     *   }
     * })
    **/
    count<T extends SeoArticleTypeCountArgs>(
      args?: Subset<T, SeoArticleTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SeoArticleTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SeoArticleType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SeoArticleTypeAggregateArgs>(args: Subset<T, SeoArticleTypeAggregateArgs>): Prisma.PrismaPromise<GetSeoArticleTypeAggregateType<T>>

    /**
     * Group by SeoArticleType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeoArticleTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SeoArticleTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SeoArticleTypeGroupByArgs['orderBy'] }
        : { orderBy?: SeoArticleTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SeoArticleTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeoArticleTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SeoArticleType model
   */
  readonly fields: SeoArticleTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SeoArticleType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SeoArticleTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SeoArticleType model
   */
  interface SeoArticleTypeFieldRefs {
    readonly id: FieldRef<"SeoArticleType", 'Int'>
    readonly name: FieldRef<"SeoArticleType", 'String'>
    readonly slug: FieldRef<"SeoArticleType", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SeoArticleType findUnique
   */
  export type SeoArticleTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticleType to fetch.
     */
    where: SeoArticleTypeWhereUniqueInput
  }

  /**
   * SeoArticleType findUniqueOrThrow
   */
  export type SeoArticleTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticleType to fetch.
     */
    where: SeoArticleTypeWhereUniqueInput
  }

  /**
   * SeoArticleType findFirst
   */
  export type SeoArticleTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticleType to fetch.
     */
    where?: SeoArticleTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeoArticleTypes to fetch.
     */
    orderBy?: SeoArticleTypeOrderByWithRelationInput | SeoArticleTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeoArticleTypes.
     */
    cursor?: SeoArticleTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeoArticleTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeoArticleTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeoArticleTypes.
     */
    distinct?: SeoArticleTypeScalarFieldEnum | SeoArticleTypeScalarFieldEnum[]
  }

  /**
   * SeoArticleType findFirstOrThrow
   */
  export type SeoArticleTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticleType to fetch.
     */
    where?: SeoArticleTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeoArticleTypes to fetch.
     */
    orderBy?: SeoArticleTypeOrderByWithRelationInput | SeoArticleTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeoArticleTypes.
     */
    cursor?: SeoArticleTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeoArticleTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeoArticleTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeoArticleTypes.
     */
    distinct?: SeoArticleTypeScalarFieldEnum | SeoArticleTypeScalarFieldEnum[]
  }

  /**
   * SeoArticleType findMany
   */
  export type SeoArticleTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * Filter, which SeoArticleTypes to fetch.
     */
    where?: SeoArticleTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeoArticleTypes to fetch.
     */
    orderBy?: SeoArticleTypeOrderByWithRelationInput | SeoArticleTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SeoArticleTypes.
     */
    cursor?: SeoArticleTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeoArticleTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeoArticleTypes.
     */
    skip?: number
    distinct?: SeoArticleTypeScalarFieldEnum | SeoArticleTypeScalarFieldEnum[]
  }

  /**
   * SeoArticleType create
   */
  export type SeoArticleTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * The data needed to create a SeoArticleType.
     */
    data: XOR<SeoArticleTypeCreateInput, SeoArticleTypeUncheckedCreateInput>
  }

  /**
   * SeoArticleType createMany
   */
  export type SeoArticleTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SeoArticleTypes.
     */
    data: SeoArticleTypeCreateManyInput | SeoArticleTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SeoArticleType createManyAndReturn
   */
  export type SeoArticleTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * The data used to create many SeoArticleTypes.
     */
    data: SeoArticleTypeCreateManyInput | SeoArticleTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SeoArticleType update
   */
  export type SeoArticleTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * The data needed to update a SeoArticleType.
     */
    data: XOR<SeoArticleTypeUpdateInput, SeoArticleTypeUncheckedUpdateInput>
    /**
     * Choose, which SeoArticleType to update.
     */
    where: SeoArticleTypeWhereUniqueInput
  }

  /**
   * SeoArticleType updateMany
   */
  export type SeoArticleTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SeoArticleTypes.
     */
    data: XOR<SeoArticleTypeUpdateManyMutationInput, SeoArticleTypeUncheckedUpdateManyInput>
    /**
     * Filter which SeoArticleTypes to update
     */
    where?: SeoArticleTypeWhereInput
    /**
     * Limit how many SeoArticleTypes to update.
     */
    limit?: number
  }

  /**
   * SeoArticleType updateManyAndReturn
   */
  export type SeoArticleTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * The data used to update SeoArticleTypes.
     */
    data: XOR<SeoArticleTypeUpdateManyMutationInput, SeoArticleTypeUncheckedUpdateManyInput>
    /**
     * Filter which SeoArticleTypes to update
     */
    where?: SeoArticleTypeWhereInput
    /**
     * Limit how many SeoArticleTypes to update.
     */
    limit?: number
  }

  /**
   * SeoArticleType upsert
   */
  export type SeoArticleTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * The filter to search for the SeoArticleType to update in case it exists.
     */
    where: SeoArticleTypeWhereUniqueInput
    /**
     * In case the SeoArticleType found by the `where` argument doesn't exist, create a new SeoArticleType with this data.
     */
    create: XOR<SeoArticleTypeCreateInput, SeoArticleTypeUncheckedCreateInput>
    /**
     * In case the SeoArticleType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SeoArticleTypeUpdateInput, SeoArticleTypeUncheckedUpdateInput>
  }

  /**
   * SeoArticleType delete
   */
  export type SeoArticleTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
    /**
     * Filter which SeoArticleType to delete.
     */
    where: SeoArticleTypeWhereUniqueInput
  }

  /**
   * SeoArticleType deleteMany
   */
  export type SeoArticleTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeoArticleTypes to delete
     */
    where?: SeoArticleTypeWhereInput
    /**
     * Limit how many SeoArticleTypes to delete.
     */
    limit?: number
  }

  /**
   * SeoArticleType without action
   */
  export type SeoArticleTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeoArticleType
     */
    select?: SeoArticleTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeoArticleType
     */
    omit?: SeoArticleTypeOmit<ExtArgs> | null
  }


  /**
   * Model BlogDescription
   */

  export type AggregateBlogDescription = {
    _count: BlogDescriptionCountAggregateOutputType | null
    _avg: BlogDescriptionAvgAggregateOutputType | null
    _sum: BlogDescriptionSumAggregateOutputType | null
    _min: BlogDescriptionMinAggregateOutputType | null
    _max: BlogDescriptionMaxAggregateOutputType | null
  }

  export type BlogDescriptionAvgAggregateOutputType = {
    id: number | null
    agcyBlogsId: number | null
    agcyGalleriesId: number | null
    ordinal: number | null
    createdByAgencyMemberId: number | null
    updatedByAgencyMemberId: number | null
    deletedByAgencyMemberId: number | null
  }

  export type BlogDescriptionSumAggregateOutputType = {
    id: number | null
    agcyBlogsId: number | null
    agcyGalleriesId: number | null
    ordinal: number | null
    createdByAgencyMemberId: number | null
    updatedByAgencyMemberId: number | null
    deletedByAgencyMemberId: number | null
  }

  export type BlogDescriptionMinAggregateOutputType = {
    id: number | null
    agcyBlogsId: number | null
    agcyGalleriesId: number | null
    typeSlug: string | null
    ordinal: number | null
    description: string | null
    imageDescription: string | null
    createdAt: Date | null
    createdByAgencyMemberId: number | null
    updatedAt: Date | null
    updatedByAgencyMemberId: number | null
    deletedAt: Date | null
    deletedByAgencyMemberId: number | null
  }

  export type BlogDescriptionMaxAggregateOutputType = {
    id: number | null
    agcyBlogsId: number | null
    agcyGalleriesId: number | null
    typeSlug: string | null
    ordinal: number | null
    description: string | null
    imageDescription: string | null
    createdAt: Date | null
    createdByAgencyMemberId: number | null
    updatedAt: Date | null
    updatedByAgencyMemberId: number | null
    deletedAt: Date | null
    deletedByAgencyMemberId: number | null
  }

  export type BlogDescriptionCountAggregateOutputType = {
    id: number
    agcyBlogsId: number
    agcyGalleriesId: number
    typeSlug: number
    ordinal: number
    description: number
    imageDescription: number
    createdAt: number
    createdByAgencyMemberId: number
    updatedAt: number
    updatedByAgencyMemberId: number
    deletedAt: number
    deletedByAgencyMemberId: number
    _all: number
  }


  export type BlogDescriptionAvgAggregateInputType = {
    id?: true
    agcyBlogsId?: true
    agcyGalleriesId?: true
    ordinal?: true
    createdByAgencyMemberId?: true
    updatedByAgencyMemberId?: true
    deletedByAgencyMemberId?: true
  }

  export type BlogDescriptionSumAggregateInputType = {
    id?: true
    agcyBlogsId?: true
    agcyGalleriesId?: true
    ordinal?: true
    createdByAgencyMemberId?: true
    updatedByAgencyMemberId?: true
    deletedByAgencyMemberId?: true
  }

  export type BlogDescriptionMinAggregateInputType = {
    id?: true
    agcyBlogsId?: true
    agcyGalleriesId?: true
    typeSlug?: true
    ordinal?: true
    description?: true
    imageDescription?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
    deletedAt?: true
    deletedByAgencyMemberId?: true
  }

  export type BlogDescriptionMaxAggregateInputType = {
    id?: true
    agcyBlogsId?: true
    agcyGalleriesId?: true
    typeSlug?: true
    ordinal?: true
    description?: true
    imageDescription?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
    deletedAt?: true
    deletedByAgencyMemberId?: true
  }

  export type BlogDescriptionCountAggregateInputType = {
    id?: true
    agcyBlogsId?: true
    agcyGalleriesId?: true
    typeSlug?: true
    ordinal?: true
    description?: true
    imageDescription?: true
    createdAt?: true
    createdByAgencyMemberId?: true
    updatedAt?: true
    updatedByAgencyMemberId?: true
    deletedAt?: true
    deletedByAgencyMemberId?: true
    _all?: true
  }

  export type BlogDescriptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlogDescription to aggregate.
     */
    where?: BlogDescriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogDescriptions to fetch.
     */
    orderBy?: BlogDescriptionOrderByWithRelationInput | BlogDescriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BlogDescriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogDescriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogDescriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BlogDescriptions
    **/
    _count?: true | BlogDescriptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BlogDescriptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BlogDescriptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlogDescriptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlogDescriptionMaxAggregateInputType
  }

  export type GetBlogDescriptionAggregateType<T extends BlogDescriptionAggregateArgs> = {
        [P in keyof T & keyof AggregateBlogDescription]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlogDescription[P]>
      : GetScalarType<T[P], AggregateBlogDescription[P]>
  }




  export type BlogDescriptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogDescriptionWhereInput
    orderBy?: BlogDescriptionOrderByWithAggregationInput | BlogDescriptionOrderByWithAggregationInput[]
    by: BlogDescriptionScalarFieldEnum[] | BlogDescriptionScalarFieldEnum
    having?: BlogDescriptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlogDescriptionCountAggregateInputType | true
    _avg?: BlogDescriptionAvgAggregateInputType
    _sum?: BlogDescriptionSumAggregateInputType
    _min?: BlogDescriptionMinAggregateInputType
    _max?: BlogDescriptionMaxAggregateInputType
  }

  export type BlogDescriptionGroupByOutputType = {
    id: number
    agcyBlogsId: number
    agcyGalleriesId: number | null
    typeSlug: string
    ordinal: number
    description: string | null
    imageDescription: string | null
    createdAt: Date
    createdByAgencyMemberId: number
    updatedAt: Date
    updatedByAgencyMemberId: number
    deletedAt: Date | null
    deletedByAgencyMemberId: number | null
    _count: BlogDescriptionCountAggregateOutputType | null
    _avg: BlogDescriptionAvgAggregateOutputType | null
    _sum: BlogDescriptionSumAggregateOutputType | null
    _min: BlogDescriptionMinAggregateOutputType | null
    _max: BlogDescriptionMaxAggregateOutputType | null
  }

  type GetBlogDescriptionGroupByPayload<T extends BlogDescriptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlogDescriptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlogDescriptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlogDescriptionGroupByOutputType[P]>
            : GetScalarType<T[P], BlogDescriptionGroupByOutputType[P]>
        }
      >
    >


  export type BlogDescriptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agcyBlogsId?: boolean
    agcyGalleriesId?: boolean
    typeSlug?: boolean
    ordinal?: boolean
    description?: boolean
    imageDescription?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
    deletedAt?: boolean
    deletedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["blogDescription"]>

  export type BlogDescriptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agcyBlogsId?: boolean
    agcyGalleriesId?: boolean
    typeSlug?: boolean
    ordinal?: boolean
    description?: boolean
    imageDescription?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
    deletedAt?: boolean
    deletedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["blogDescription"]>

  export type BlogDescriptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agcyBlogsId?: boolean
    agcyGalleriesId?: boolean
    typeSlug?: boolean
    ordinal?: boolean
    description?: boolean
    imageDescription?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
    deletedAt?: boolean
    deletedByAgencyMemberId?: boolean
  }, ExtArgs["result"]["blogDescription"]>

  export type BlogDescriptionSelectScalar = {
    id?: boolean
    agcyBlogsId?: boolean
    agcyGalleriesId?: boolean
    typeSlug?: boolean
    ordinal?: boolean
    description?: boolean
    imageDescription?: boolean
    createdAt?: boolean
    createdByAgencyMemberId?: boolean
    updatedAt?: boolean
    updatedByAgencyMemberId?: boolean
    deletedAt?: boolean
    deletedByAgencyMemberId?: boolean
  }

  export type BlogDescriptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agcyBlogsId" | "agcyGalleriesId" | "typeSlug" | "ordinal" | "description" | "imageDescription" | "createdAt" | "createdByAgencyMemberId" | "updatedAt" | "updatedByAgencyMemberId" | "deletedAt" | "deletedByAgencyMemberId", ExtArgs["result"]["blogDescription"]>

  export type $BlogDescriptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BlogDescription"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      agcyBlogsId: number
      agcyGalleriesId: number | null
      typeSlug: string
      ordinal: number
      description: string | null
      imageDescription: string | null
      createdAt: Date
      createdByAgencyMemberId: number
      updatedAt: Date
      updatedByAgencyMemberId: number
      deletedAt: Date | null
      deletedByAgencyMemberId: number | null
    }, ExtArgs["result"]["blogDescription"]>
    composites: {}
  }

  type BlogDescriptionGetPayload<S extends boolean | null | undefined | BlogDescriptionDefaultArgs> = $Result.GetResult<Prisma.$BlogDescriptionPayload, S>

  type BlogDescriptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BlogDescriptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BlogDescriptionCountAggregateInputType | true
    }

  export interface BlogDescriptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BlogDescription'], meta: { name: 'BlogDescription' } }
    /**
     * Find zero or one BlogDescription that matches the filter.
     * @param {BlogDescriptionFindUniqueArgs} args - Arguments to find a BlogDescription
     * @example
     * // Get one BlogDescription
     * const blogDescription = await prisma.blogDescription.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BlogDescriptionFindUniqueArgs>(args: SelectSubset<T, BlogDescriptionFindUniqueArgs<ExtArgs>>): Prisma__BlogDescriptionClient<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BlogDescription that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BlogDescriptionFindUniqueOrThrowArgs} args - Arguments to find a BlogDescription
     * @example
     * // Get one BlogDescription
     * const blogDescription = await prisma.blogDescription.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BlogDescriptionFindUniqueOrThrowArgs>(args: SelectSubset<T, BlogDescriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BlogDescriptionClient<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BlogDescription that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogDescriptionFindFirstArgs} args - Arguments to find a BlogDescription
     * @example
     * // Get one BlogDescription
     * const blogDescription = await prisma.blogDescription.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BlogDescriptionFindFirstArgs>(args?: SelectSubset<T, BlogDescriptionFindFirstArgs<ExtArgs>>): Prisma__BlogDescriptionClient<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BlogDescription that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogDescriptionFindFirstOrThrowArgs} args - Arguments to find a BlogDescription
     * @example
     * // Get one BlogDescription
     * const blogDescription = await prisma.blogDescription.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BlogDescriptionFindFirstOrThrowArgs>(args?: SelectSubset<T, BlogDescriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__BlogDescriptionClient<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BlogDescriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogDescriptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BlogDescriptions
     * const blogDescriptions = await prisma.blogDescription.findMany()
     * 
     * // Get first 10 BlogDescriptions
     * const blogDescriptions = await prisma.blogDescription.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blogDescriptionWithIdOnly = await prisma.blogDescription.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BlogDescriptionFindManyArgs>(args?: SelectSubset<T, BlogDescriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BlogDescription.
     * @param {BlogDescriptionCreateArgs} args - Arguments to create a BlogDescription.
     * @example
     * // Create one BlogDescription
     * const BlogDescription = await prisma.blogDescription.create({
     *   data: {
     *     // ... data to create a BlogDescription
     *   }
     * })
     * 
     */
    create<T extends BlogDescriptionCreateArgs>(args: SelectSubset<T, BlogDescriptionCreateArgs<ExtArgs>>): Prisma__BlogDescriptionClient<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BlogDescriptions.
     * @param {BlogDescriptionCreateManyArgs} args - Arguments to create many BlogDescriptions.
     * @example
     * // Create many BlogDescriptions
     * const blogDescription = await prisma.blogDescription.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BlogDescriptionCreateManyArgs>(args?: SelectSubset<T, BlogDescriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BlogDescriptions and returns the data saved in the database.
     * @param {BlogDescriptionCreateManyAndReturnArgs} args - Arguments to create many BlogDescriptions.
     * @example
     * // Create many BlogDescriptions
     * const blogDescription = await prisma.blogDescription.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BlogDescriptions and only return the `id`
     * const blogDescriptionWithIdOnly = await prisma.blogDescription.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BlogDescriptionCreateManyAndReturnArgs>(args?: SelectSubset<T, BlogDescriptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BlogDescription.
     * @param {BlogDescriptionDeleteArgs} args - Arguments to delete one BlogDescription.
     * @example
     * // Delete one BlogDescription
     * const BlogDescription = await prisma.blogDescription.delete({
     *   where: {
     *     // ... filter to delete one BlogDescription
     *   }
     * })
     * 
     */
    delete<T extends BlogDescriptionDeleteArgs>(args: SelectSubset<T, BlogDescriptionDeleteArgs<ExtArgs>>): Prisma__BlogDescriptionClient<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BlogDescription.
     * @param {BlogDescriptionUpdateArgs} args - Arguments to update one BlogDescription.
     * @example
     * // Update one BlogDescription
     * const blogDescription = await prisma.blogDescription.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BlogDescriptionUpdateArgs>(args: SelectSubset<T, BlogDescriptionUpdateArgs<ExtArgs>>): Prisma__BlogDescriptionClient<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BlogDescriptions.
     * @param {BlogDescriptionDeleteManyArgs} args - Arguments to filter BlogDescriptions to delete.
     * @example
     * // Delete a few BlogDescriptions
     * const { count } = await prisma.blogDescription.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BlogDescriptionDeleteManyArgs>(args?: SelectSubset<T, BlogDescriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BlogDescriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogDescriptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BlogDescriptions
     * const blogDescription = await prisma.blogDescription.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BlogDescriptionUpdateManyArgs>(args: SelectSubset<T, BlogDescriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BlogDescriptions and returns the data updated in the database.
     * @param {BlogDescriptionUpdateManyAndReturnArgs} args - Arguments to update many BlogDescriptions.
     * @example
     * // Update many BlogDescriptions
     * const blogDescription = await prisma.blogDescription.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BlogDescriptions and only return the `id`
     * const blogDescriptionWithIdOnly = await prisma.blogDescription.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BlogDescriptionUpdateManyAndReturnArgs>(args: SelectSubset<T, BlogDescriptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BlogDescription.
     * @param {BlogDescriptionUpsertArgs} args - Arguments to update or create a BlogDescription.
     * @example
     * // Update or create a BlogDescription
     * const blogDescription = await prisma.blogDescription.upsert({
     *   create: {
     *     // ... data to create a BlogDescription
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BlogDescription we want to update
     *   }
     * })
     */
    upsert<T extends BlogDescriptionUpsertArgs>(args: SelectSubset<T, BlogDescriptionUpsertArgs<ExtArgs>>): Prisma__BlogDescriptionClient<$Result.GetResult<Prisma.$BlogDescriptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BlogDescriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogDescriptionCountArgs} args - Arguments to filter BlogDescriptions to count.
     * @example
     * // Count the number of BlogDescriptions
     * const count = await prisma.blogDescription.count({
     *   where: {
     *     // ... the filter for the BlogDescriptions we want to count
     *   }
     * })
    **/
    count<T extends BlogDescriptionCountArgs>(
      args?: Subset<T, BlogDescriptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlogDescriptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BlogDescription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogDescriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlogDescriptionAggregateArgs>(args: Subset<T, BlogDescriptionAggregateArgs>): Prisma.PrismaPromise<GetBlogDescriptionAggregateType<T>>

    /**
     * Group by BlogDescription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogDescriptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BlogDescriptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BlogDescriptionGroupByArgs['orderBy'] }
        : { orderBy?: BlogDescriptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BlogDescriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlogDescriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BlogDescription model
   */
  readonly fields: BlogDescriptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BlogDescription.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BlogDescriptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BlogDescription model
   */
  interface BlogDescriptionFieldRefs {
    readonly id: FieldRef<"BlogDescription", 'Int'>
    readonly agcyBlogsId: FieldRef<"BlogDescription", 'Int'>
    readonly agcyGalleriesId: FieldRef<"BlogDescription", 'Int'>
    readonly typeSlug: FieldRef<"BlogDescription", 'String'>
    readonly ordinal: FieldRef<"BlogDescription", 'Int'>
    readonly description: FieldRef<"BlogDescription", 'String'>
    readonly imageDescription: FieldRef<"BlogDescription", 'String'>
    readonly createdAt: FieldRef<"BlogDescription", 'DateTime'>
    readonly createdByAgencyMemberId: FieldRef<"BlogDescription", 'Int'>
    readonly updatedAt: FieldRef<"BlogDescription", 'DateTime'>
    readonly updatedByAgencyMemberId: FieldRef<"BlogDescription", 'Int'>
    readonly deletedAt: FieldRef<"BlogDescription", 'DateTime'>
    readonly deletedByAgencyMemberId: FieldRef<"BlogDescription", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * BlogDescription findUnique
   */
  export type BlogDescriptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * Filter, which BlogDescription to fetch.
     */
    where: BlogDescriptionWhereUniqueInput
  }

  /**
   * BlogDescription findUniqueOrThrow
   */
  export type BlogDescriptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * Filter, which BlogDescription to fetch.
     */
    where: BlogDescriptionWhereUniqueInput
  }

  /**
   * BlogDescription findFirst
   */
  export type BlogDescriptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * Filter, which BlogDescription to fetch.
     */
    where?: BlogDescriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogDescriptions to fetch.
     */
    orderBy?: BlogDescriptionOrderByWithRelationInput | BlogDescriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlogDescriptions.
     */
    cursor?: BlogDescriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogDescriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogDescriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlogDescriptions.
     */
    distinct?: BlogDescriptionScalarFieldEnum | BlogDescriptionScalarFieldEnum[]
  }

  /**
   * BlogDescription findFirstOrThrow
   */
  export type BlogDescriptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * Filter, which BlogDescription to fetch.
     */
    where?: BlogDescriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogDescriptions to fetch.
     */
    orderBy?: BlogDescriptionOrderByWithRelationInput | BlogDescriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlogDescriptions.
     */
    cursor?: BlogDescriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogDescriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogDescriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlogDescriptions.
     */
    distinct?: BlogDescriptionScalarFieldEnum | BlogDescriptionScalarFieldEnum[]
  }

  /**
   * BlogDescription findMany
   */
  export type BlogDescriptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * Filter, which BlogDescriptions to fetch.
     */
    where?: BlogDescriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogDescriptions to fetch.
     */
    orderBy?: BlogDescriptionOrderByWithRelationInput | BlogDescriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BlogDescriptions.
     */
    cursor?: BlogDescriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogDescriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogDescriptions.
     */
    skip?: number
    distinct?: BlogDescriptionScalarFieldEnum | BlogDescriptionScalarFieldEnum[]
  }

  /**
   * BlogDescription create
   */
  export type BlogDescriptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * The data needed to create a BlogDescription.
     */
    data: XOR<BlogDescriptionCreateInput, BlogDescriptionUncheckedCreateInput>
  }

  /**
   * BlogDescription createMany
   */
  export type BlogDescriptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BlogDescriptions.
     */
    data: BlogDescriptionCreateManyInput | BlogDescriptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BlogDescription createManyAndReturn
   */
  export type BlogDescriptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * The data used to create many BlogDescriptions.
     */
    data: BlogDescriptionCreateManyInput | BlogDescriptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BlogDescription update
   */
  export type BlogDescriptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * The data needed to update a BlogDescription.
     */
    data: XOR<BlogDescriptionUpdateInput, BlogDescriptionUncheckedUpdateInput>
    /**
     * Choose, which BlogDescription to update.
     */
    where: BlogDescriptionWhereUniqueInput
  }

  /**
   * BlogDescription updateMany
   */
  export type BlogDescriptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BlogDescriptions.
     */
    data: XOR<BlogDescriptionUpdateManyMutationInput, BlogDescriptionUncheckedUpdateManyInput>
    /**
     * Filter which BlogDescriptions to update
     */
    where?: BlogDescriptionWhereInput
    /**
     * Limit how many BlogDescriptions to update.
     */
    limit?: number
  }

  /**
   * BlogDescription updateManyAndReturn
   */
  export type BlogDescriptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * The data used to update BlogDescriptions.
     */
    data: XOR<BlogDescriptionUpdateManyMutationInput, BlogDescriptionUncheckedUpdateManyInput>
    /**
     * Filter which BlogDescriptions to update
     */
    where?: BlogDescriptionWhereInput
    /**
     * Limit how many BlogDescriptions to update.
     */
    limit?: number
  }

  /**
   * BlogDescription upsert
   */
  export type BlogDescriptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * The filter to search for the BlogDescription to update in case it exists.
     */
    where: BlogDescriptionWhereUniqueInput
    /**
     * In case the BlogDescription found by the `where` argument doesn't exist, create a new BlogDescription with this data.
     */
    create: XOR<BlogDescriptionCreateInput, BlogDescriptionUncheckedCreateInput>
    /**
     * In case the BlogDescription was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BlogDescriptionUpdateInput, BlogDescriptionUncheckedUpdateInput>
  }

  /**
   * BlogDescription delete
   */
  export type BlogDescriptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
    /**
     * Filter which BlogDescription to delete.
     */
    where: BlogDescriptionWhereUniqueInput
  }

  /**
   * BlogDescription deleteMany
   */
  export type BlogDescriptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlogDescriptions to delete
     */
    where?: BlogDescriptionWhereInput
    /**
     * Limit how many BlogDescriptions to delete.
     */
    limit?: number
  }

  /**
   * BlogDescription without action
   */
  export type BlogDescriptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogDescription
     */
    select?: BlogDescriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogDescription
     */
    omit?: BlogDescriptionOmit<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    phone: string | null
    passwordHash: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    phone: string | null
    passwordHash: string | null
    role: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    phone: number
    passwordHash: number
    role: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    passwordHash?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    passwordHash?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    passwordHash?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    name: string
    email: string
    phone: string | null
    passwordHash: string
    role: string
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    passwordHash?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    orders?: boolean | User$ordersArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    passwordHash?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    passwordHash?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    passwordHash?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "phone" | "passwordHash" | "role" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | User$ordersArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      orders: Prisma.$TourOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      phone: string | null
      passwordHash: string
      role: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends User$ordersArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.orders
   */
  export type User$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    where?: TourOrderWhereInput
    orderBy?: TourOrderOrderByWithRelationInput | TourOrderOrderByWithRelationInput[]
    cursor?: TourOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TourOrderScalarFieldEnum | TourOrderScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model TourOrder
   */

  export type AggregateTourOrder = {
    _count: TourOrderCountAggregateOutputType | null
    _avg: TourOrderAvgAggregateOutputType | null
    _sum: TourOrderSumAggregateOutputType | null
    _min: TourOrderMinAggregateOutputType | null
    _max: TourOrderMaxAggregateOutputType | null
  }

  export type TourOrderAvgAggregateOutputType = {
    id: number | null
    productId: number | null
    periodId: number | null
    supplierId: number | null
    tourDurationDays: number | null
    tourDurationNights: number | null
    basePrice: Decimal | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    remainingAmount: Decimal | null
    adultCount: number | null
    childWithBedCount: number | null
    childNoBedCount: number | null
    infantCount: number | null
    singleRoomCount: number | null
    extraRoomCount: number | null
    userId: number | null
  }

  export type TourOrderSumAggregateOutputType = {
    id: number | null
    productId: number | null
    periodId: number | null
    supplierId: number | null
    tourDurationDays: number | null
    tourDurationNights: number | null
    basePrice: Decimal | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    remainingAmount: Decimal | null
    adultCount: number | null
    childWithBedCount: number | null
    childNoBedCount: number | null
    infantCount: number | null
    singleRoomCount: number | null
    extraRoomCount: number | null
    userId: number | null
  }

  export type TourOrderMinAggregateOutputType = {
    id: number | null
    orderReference: string | null
    productTourwowCode: string | null
    productTourCode: string | null
    periodStartAt: Date | null
    periodEndAt: Date | null
    productId: number | null
    periodId: number | null
    supplierId: number | null
    tourName: string | null
    tourCountry: string | null
    tourDurationDays: number | null
    tourDurationNights: number | null
    basePrice: Decimal | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    remainingAmount: Decimal | null
    currency: string | null
    adultCount: number | null
    childWithBedCount: number | null
    childNoBedCount: number | null
    infantCount: number | null
    singleRoomCount: number | null
    extraRoomCount: number | null
    bookerTitle: string | null
    bookerFirstNameTh: string | null
    bookerLastNameTh: string | null
    bookerFirstNameEn: string | null
    bookerLastNameEn: string | null
    bookerPhone: string | null
    bookerEmail: string | null
    bookerDateOfBirth: Date | null
    bookerAddress: string | null
    bookerProvince: string | null
    bookerPostalCode: string | null
    specialRequests: string | null
    dietaryRequirements: string | null
    medicalConditions: string | null
    orderStatus: string | null
    paymentStatus: string | null
    paymentDeadline: Date | null
    documentDeadline: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    confirmedAt: Date | null
    cancelledAt: Date | null
    completedAt: Date | null
    userId: number | null
  }

  export type TourOrderMaxAggregateOutputType = {
    id: number | null
    orderReference: string | null
    productTourwowCode: string | null
    productTourCode: string | null
    periodStartAt: Date | null
    periodEndAt: Date | null
    productId: number | null
    periodId: number | null
    supplierId: number | null
    tourName: string | null
    tourCountry: string | null
    tourDurationDays: number | null
    tourDurationNights: number | null
    basePrice: Decimal | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    remainingAmount: Decimal | null
    currency: string | null
    adultCount: number | null
    childWithBedCount: number | null
    childNoBedCount: number | null
    infantCount: number | null
    singleRoomCount: number | null
    extraRoomCount: number | null
    bookerTitle: string | null
    bookerFirstNameTh: string | null
    bookerLastNameTh: string | null
    bookerFirstNameEn: string | null
    bookerLastNameEn: string | null
    bookerPhone: string | null
    bookerEmail: string | null
    bookerDateOfBirth: Date | null
    bookerAddress: string | null
    bookerProvince: string | null
    bookerPostalCode: string | null
    specialRequests: string | null
    dietaryRequirements: string | null
    medicalConditions: string | null
    orderStatus: string | null
    paymentStatus: string | null
    paymentDeadline: Date | null
    documentDeadline: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    confirmedAt: Date | null
    cancelledAt: Date | null
    completedAt: Date | null
    userId: number | null
  }

  export type TourOrderCountAggregateOutputType = {
    id: number
    orderReference: number
    productTourwowCode: number
    productTourCode: number
    periodStartAt: number
    periodEndAt: number
    productId: number
    periodId: number
    supplierId: number
    tourName: number
    tourCountry: number
    tourDurationDays: number
    tourDurationNights: number
    basePrice: number
    totalAmount: number
    depositAmount: number
    remainingAmount: number
    currency: number
    adultCount: number
    childWithBedCount: number
    childNoBedCount: number
    infantCount: number
    singleRoomCount: number
    extraRoomCount: number
    bookerTitle: number
    bookerFirstNameTh: number
    bookerLastNameTh: number
    bookerFirstNameEn: number
    bookerLastNameEn: number
    bookerPhone: number
    bookerEmail: number
    bookerDateOfBirth: number
    bookerAddress: number
    bookerProvince: number
    bookerPostalCode: number
    specialRequests: number
    dietaryRequirements: number
    medicalConditions: number
    orderStatus: number
    paymentStatus: number
    paymentDeadline: number
    documentDeadline: number
    createdAt: number
    updatedAt: number
    confirmedAt: number
    cancelledAt: number
    completedAt: number
    userId: number
    _all: number
  }


  export type TourOrderAvgAggregateInputType = {
    id?: true
    productId?: true
    periodId?: true
    supplierId?: true
    tourDurationDays?: true
    tourDurationNights?: true
    basePrice?: true
    totalAmount?: true
    depositAmount?: true
    remainingAmount?: true
    adultCount?: true
    childWithBedCount?: true
    childNoBedCount?: true
    infantCount?: true
    singleRoomCount?: true
    extraRoomCount?: true
    userId?: true
  }

  export type TourOrderSumAggregateInputType = {
    id?: true
    productId?: true
    periodId?: true
    supplierId?: true
    tourDurationDays?: true
    tourDurationNights?: true
    basePrice?: true
    totalAmount?: true
    depositAmount?: true
    remainingAmount?: true
    adultCount?: true
    childWithBedCount?: true
    childNoBedCount?: true
    infantCount?: true
    singleRoomCount?: true
    extraRoomCount?: true
    userId?: true
  }

  export type TourOrderMinAggregateInputType = {
    id?: true
    orderReference?: true
    productTourwowCode?: true
    productTourCode?: true
    periodStartAt?: true
    periodEndAt?: true
    productId?: true
    periodId?: true
    supplierId?: true
    tourName?: true
    tourCountry?: true
    tourDurationDays?: true
    tourDurationNights?: true
    basePrice?: true
    totalAmount?: true
    depositAmount?: true
    remainingAmount?: true
    currency?: true
    adultCount?: true
    childWithBedCount?: true
    childNoBedCount?: true
    infantCount?: true
    singleRoomCount?: true
    extraRoomCount?: true
    bookerTitle?: true
    bookerFirstNameTh?: true
    bookerLastNameTh?: true
    bookerFirstNameEn?: true
    bookerLastNameEn?: true
    bookerPhone?: true
    bookerEmail?: true
    bookerDateOfBirth?: true
    bookerAddress?: true
    bookerProvince?: true
    bookerPostalCode?: true
    specialRequests?: true
    dietaryRequirements?: true
    medicalConditions?: true
    orderStatus?: true
    paymentStatus?: true
    paymentDeadline?: true
    documentDeadline?: true
    createdAt?: true
    updatedAt?: true
    confirmedAt?: true
    cancelledAt?: true
    completedAt?: true
    userId?: true
  }

  export type TourOrderMaxAggregateInputType = {
    id?: true
    orderReference?: true
    productTourwowCode?: true
    productTourCode?: true
    periodStartAt?: true
    periodEndAt?: true
    productId?: true
    periodId?: true
    supplierId?: true
    tourName?: true
    tourCountry?: true
    tourDurationDays?: true
    tourDurationNights?: true
    basePrice?: true
    totalAmount?: true
    depositAmount?: true
    remainingAmount?: true
    currency?: true
    adultCount?: true
    childWithBedCount?: true
    childNoBedCount?: true
    infantCount?: true
    singleRoomCount?: true
    extraRoomCount?: true
    bookerTitle?: true
    bookerFirstNameTh?: true
    bookerLastNameTh?: true
    bookerFirstNameEn?: true
    bookerLastNameEn?: true
    bookerPhone?: true
    bookerEmail?: true
    bookerDateOfBirth?: true
    bookerAddress?: true
    bookerProvince?: true
    bookerPostalCode?: true
    specialRequests?: true
    dietaryRequirements?: true
    medicalConditions?: true
    orderStatus?: true
    paymentStatus?: true
    paymentDeadline?: true
    documentDeadline?: true
    createdAt?: true
    updatedAt?: true
    confirmedAt?: true
    cancelledAt?: true
    completedAt?: true
    userId?: true
  }

  export type TourOrderCountAggregateInputType = {
    id?: true
    orderReference?: true
    productTourwowCode?: true
    productTourCode?: true
    periodStartAt?: true
    periodEndAt?: true
    productId?: true
    periodId?: true
    supplierId?: true
    tourName?: true
    tourCountry?: true
    tourDurationDays?: true
    tourDurationNights?: true
    basePrice?: true
    totalAmount?: true
    depositAmount?: true
    remainingAmount?: true
    currency?: true
    adultCount?: true
    childWithBedCount?: true
    childNoBedCount?: true
    infantCount?: true
    singleRoomCount?: true
    extraRoomCount?: true
    bookerTitle?: true
    bookerFirstNameTh?: true
    bookerLastNameTh?: true
    bookerFirstNameEn?: true
    bookerLastNameEn?: true
    bookerPhone?: true
    bookerEmail?: true
    bookerDateOfBirth?: true
    bookerAddress?: true
    bookerProvince?: true
    bookerPostalCode?: true
    specialRequests?: true
    dietaryRequirements?: true
    medicalConditions?: true
    orderStatus?: true
    paymentStatus?: true
    paymentDeadline?: true
    documentDeadline?: true
    createdAt?: true
    updatedAt?: true
    confirmedAt?: true
    cancelledAt?: true
    completedAt?: true
    userId?: true
    _all?: true
  }

  export type TourOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TourOrder to aggregate.
     */
    where?: TourOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TourOrders to fetch.
     */
    orderBy?: TourOrderOrderByWithRelationInput | TourOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TourOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TourOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TourOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TourOrders
    **/
    _count?: true | TourOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TourOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TourOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TourOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TourOrderMaxAggregateInputType
  }

  export type GetTourOrderAggregateType<T extends TourOrderAggregateArgs> = {
        [P in keyof T & keyof AggregateTourOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTourOrder[P]>
      : GetScalarType<T[P], AggregateTourOrder[P]>
  }




  export type TourOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TourOrderWhereInput
    orderBy?: TourOrderOrderByWithAggregationInput | TourOrderOrderByWithAggregationInput[]
    by: TourOrderScalarFieldEnum[] | TourOrderScalarFieldEnum
    having?: TourOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TourOrderCountAggregateInputType | true
    _avg?: TourOrderAvgAggregateInputType
    _sum?: TourOrderSumAggregateInputType
    _min?: TourOrderMinAggregateInputType
    _max?: TourOrderMaxAggregateInputType
  }

  export type TourOrderGroupByOutputType = {
    id: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date
    periodEndAt: Date
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal
    totalAmount: Decimal
    depositAmount: Decimal | null
    remainingAmount: Decimal | null
    currency: string
    adultCount: number
    childWithBedCount: number
    childNoBedCount: number
    infantCount: number
    singleRoomCount: number
    extraRoomCount: number
    bookerTitle: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth: Date | null
    bookerAddress: string | null
    bookerProvince: string | null
    bookerPostalCode: string | null
    specialRequests: string | null
    dietaryRequirements: string | null
    medicalConditions: string | null
    orderStatus: string
    paymentStatus: string
    paymentDeadline: Date | null
    documentDeadline: Date | null
    createdAt: Date
    updatedAt: Date
    confirmedAt: Date | null
    cancelledAt: Date | null
    completedAt: Date | null
    userId: number | null
    _count: TourOrderCountAggregateOutputType | null
    _avg: TourOrderAvgAggregateOutputType | null
    _sum: TourOrderSumAggregateOutputType | null
    _min: TourOrderMinAggregateOutputType | null
    _max: TourOrderMaxAggregateOutputType | null
  }

  type GetTourOrderGroupByPayload<T extends TourOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TourOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TourOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TourOrderGroupByOutputType[P]>
            : GetScalarType<T[P], TourOrderGroupByOutputType[P]>
        }
      >
    >


  export type TourOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderReference?: boolean
    productTourwowCode?: boolean
    productTourCode?: boolean
    periodStartAt?: boolean
    periodEndAt?: boolean
    productId?: boolean
    periodId?: boolean
    supplierId?: boolean
    tourName?: boolean
    tourCountry?: boolean
    tourDurationDays?: boolean
    tourDurationNights?: boolean
    basePrice?: boolean
    totalAmount?: boolean
    depositAmount?: boolean
    remainingAmount?: boolean
    currency?: boolean
    adultCount?: boolean
    childWithBedCount?: boolean
    childNoBedCount?: boolean
    infantCount?: boolean
    singleRoomCount?: boolean
    extraRoomCount?: boolean
    bookerTitle?: boolean
    bookerFirstNameTh?: boolean
    bookerLastNameTh?: boolean
    bookerFirstNameEn?: boolean
    bookerLastNameEn?: boolean
    bookerPhone?: boolean
    bookerEmail?: boolean
    bookerDateOfBirth?: boolean
    bookerAddress?: boolean
    bookerProvince?: boolean
    bookerPostalCode?: boolean
    specialRequests?: boolean
    dietaryRequirements?: boolean
    medicalConditions?: boolean
    orderStatus?: boolean
    paymentStatus?: boolean
    paymentDeadline?: boolean
    documentDeadline?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    confirmedAt?: boolean
    cancelledAt?: boolean
    completedAt?: boolean
    userId?: boolean
    user?: boolean | TourOrder$userArgs<ExtArgs>
    travelers?: boolean | TourOrder$travelersArgs<ExtArgs>
    payments?: boolean | TourOrder$paymentsArgs<ExtArgs>
    documents?: boolean | TourOrder$documentsArgs<ExtArgs>
    notes?: boolean | TourOrder$notesArgs<ExtArgs>
    _count?: boolean | TourOrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tourOrder"]>

  export type TourOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderReference?: boolean
    productTourwowCode?: boolean
    productTourCode?: boolean
    periodStartAt?: boolean
    periodEndAt?: boolean
    productId?: boolean
    periodId?: boolean
    supplierId?: boolean
    tourName?: boolean
    tourCountry?: boolean
    tourDurationDays?: boolean
    tourDurationNights?: boolean
    basePrice?: boolean
    totalAmount?: boolean
    depositAmount?: boolean
    remainingAmount?: boolean
    currency?: boolean
    adultCount?: boolean
    childWithBedCount?: boolean
    childNoBedCount?: boolean
    infantCount?: boolean
    singleRoomCount?: boolean
    extraRoomCount?: boolean
    bookerTitle?: boolean
    bookerFirstNameTh?: boolean
    bookerLastNameTh?: boolean
    bookerFirstNameEn?: boolean
    bookerLastNameEn?: boolean
    bookerPhone?: boolean
    bookerEmail?: boolean
    bookerDateOfBirth?: boolean
    bookerAddress?: boolean
    bookerProvince?: boolean
    bookerPostalCode?: boolean
    specialRequests?: boolean
    dietaryRequirements?: boolean
    medicalConditions?: boolean
    orderStatus?: boolean
    paymentStatus?: boolean
    paymentDeadline?: boolean
    documentDeadline?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    confirmedAt?: boolean
    cancelledAt?: boolean
    completedAt?: boolean
    userId?: boolean
    user?: boolean | TourOrder$userArgs<ExtArgs>
  }, ExtArgs["result"]["tourOrder"]>

  export type TourOrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderReference?: boolean
    productTourwowCode?: boolean
    productTourCode?: boolean
    periodStartAt?: boolean
    periodEndAt?: boolean
    productId?: boolean
    periodId?: boolean
    supplierId?: boolean
    tourName?: boolean
    tourCountry?: boolean
    tourDurationDays?: boolean
    tourDurationNights?: boolean
    basePrice?: boolean
    totalAmount?: boolean
    depositAmount?: boolean
    remainingAmount?: boolean
    currency?: boolean
    adultCount?: boolean
    childWithBedCount?: boolean
    childNoBedCount?: boolean
    infantCount?: boolean
    singleRoomCount?: boolean
    extraRoomCount?: boolean
    bookerTitle?: boolean
    bookerFirstNameTh?: boolean
    bookerLastNameTh?: boolean
    bookerFirstNameEn?: boolean
    bookerLastNameEn?: boolean
    bookerPhone?: boolean
    bookerEmail?: boolean
    bookerDateOfBirth?: boolean
    bookerAddress?: boolean
    bookerProvince?: boolean
    bookerPostalCode?: boolean
    specialRequests?: boolean
    dietaryRequirements?: boolean
    medicalConditions?: boolean
    orderStatus?: boolean
    paymentStatus?: boolean
    paymentDeadline?: boolean
    documentDeadline?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    confirmedAt?: boolean
    cancelledAt?: boolean
    completedAt?: boolean
    userId?: boolean
    user?: boolean | TourOrder$userArgs<ExtArgs>
  }, ExtArgs["result"]["tourOrder"]>

  export type TourOrderSelectScalar = {
    id?: boolean
    orderReference?: boolean
    productTourwowCode?: boolean
    productTourCode?: boolean
    periodStartAt?: boolean
    periodEndAt?: boolean
    productId?: boolean
    periodId?: boolean
    supplierId?: boolean
    tourName?: boolean
    tourCountry?: boolean
    tourDurationDays?: boolean
    tourDurationNights?: boolean
    basePrice?: boolean
    totalAmount?: boolean
    depositAmount?: boolean
    remainingAmount?: boolean
    currency?: boolean
    adultCount?: boolean
    childWithBedCount?: boolean
    childNoBedCount?: boolean
    infantCount?: boolean
    singleRoomCount?: boolean
    extraRoomCount?: boolean
    bookerTitle?: boolean
    bookerFirstNameTh?: boolean
    bookerLastNameTh?: boolean
    bookerFirstNameEn?: boolean
    bookerLastNameEn?: boolean
    bookerPhone?: boolean
    bookerEmail?: boolean
    bookerDateOfBirth?: boolean
    bookerAddress?: boolean
    bookerProvince?: boolean
    bookerPostalCode?: boolean
    specialRequests?: boolean
    dietaryRequirements?: boolean
    medicalConditions?: boolean
    orderStatus?: boolean
    paymentStatus?: boolean
    paymentDeadline?: boolean
    documentDeadline?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    confirmedAt?: boolean
    cancelledAt?: boolean
    completedAt?: boolean
    userId?: boolean
  }

  export type TourOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderReference" | "productTourwowCode" | "productTourCode" | "periodStartAt" | "periodEndAt" | "productId" | "periodId" | "supplierId" | "tourName" | "tourCountry" | "tourDurationDays" | "tourDurationNights" | "basePrice" | "totalAmount" | "depositAmount" | "remainingAmount" | "currency" | "adultCount" | "childWithBedCount" | "childNoBedCount" | "infantCount" | "singleRoomCount" | "extraRoomCount" | "bookerTitle" | "bookerFirstNameTh" | "bookerLastNameTh" | "bookerFirstNameEn" | "bookerLastNameEn" | "bookerPhone" | "bookerEmail" | "bookerDateOfBirth" | "bookerAddress" | "bookerProvince" | "bookerPostalCode" | "specialRequests" | "dietaryRequirements" | "medicalConditions" | "orderStatus" | "paymentStatus" | "paymentDeadline" | "documentDeadline" | "createdAt" | "updatedAt" | "confirmedAt" | "cancelledAt" | "completedAt" | "userId", ExtArgs["result"]["tourOrder"]>
  export type TourOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | TourOrder$userArgs<ExtArgs>
    travelers?: boolean | TourOrder$travelersArgs<ExtArgs>
    payments?: boolean | TourOrder$paymentsArgs<ExtArgs>
    documents?: boolean | TourOrder$documentsArgs<ExtArgs>
    notes?: boolean | TourOrder$notesArgs<ExtArgs>
    _count?: boolean | TourOrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TourOrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | TourOrder$userArgs<ExtArgs>
  }
  export type TourOrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | TourOrder$userArgs<ExtArgs>
  }

  export type $TourOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TourOrder"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      travelers: Prisma.$OrderTravelerPayload<ExtArgs>[]
      payments: Prisma.$OrderPaymentPayload<ExtArgs>[]
      documents: Prisma.$OrderDocumentPayload<ExtArgs>[]
      notes: Prisma.$OrderNotePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderReference: string
      productTourwowCode: string
      productTourCode: string
      periodStartAt: Date
      periodEndAt: Date
      productId: number
      periodId: number
      supplierId: number
      tourName: string
      tourCountry: string
      tourDurationDays: number
      tourDurationNights: number
      basePrice: Prisma.Decimal
      totalAmount: Prisma.Decimal
      depositAmount: Prisma.Decimal | null
      remainingAmount: Prisma.Decimal | null
      currency: string
      adultCount: number
      childWithBedCount: number
      childNoBedCount: number
      infantCount: number
      singleRoomCount: number
      extraRoomCount: number
      bookerTitle: string | null
      bookerFirstNameTh: string
      bookerLastNameTh: string
      bookerFirstNameEn: string
      bookerLastNameEn: string
      bookerPhone: string
      bookerEmail: string
      bookerDateOfBirth: Date | null
      bookerAddress: string | null
      bookerProvince: string | null
      bookerPostalCode: string | null
      specialRequests: string | null
      dietaryRequirements: string | null
      medicalConditions: string | null
      orderStatus: string
      paymentStatus: string
      paymentDeadline: Date | null
      documentDeadline: Date | null
      createdAt: Date
      updatedAt: Date
      confirmedAt: Date | null
      cancelledAt: Date | null
      completedAt: Date | null
      userId: number | null
    }, ExtArgs["result"]["tourOrder"]>
    composites: {}
  }

  type TourOrderGetPayload<S extends boolean | null | undefined | TourOrderDefaultArgs> = $Result.GetResult<Prisma.$TourOrderPayload, S>

  type TourOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TourOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TourOrderCountAggregateInputType | true
    }

  export interface TourOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TourOrder'], meta: { name: 'TourOrder' } }
    /**
     * Find zero or one TourOrder that matches the filter.
     * @param {TourOrderFindUniqueArgs} args - Arguments to find a TourOrder
     * @example
     * // Get one TourOrder
     * const tourOrder = await prisma.tourOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TourOrderFindUniqueArgs>(args: SelectSubset<T, TourOrderFindUniqueArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TourOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TourOrderFindUniqueOrThrowArgs} args - Arguments to find a TourOrder
     * @example
     * // Get one TourOrder
     * const tourOrder = await prisma.tourOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TourOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, TourOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TourOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TourOrderFindFirstArgs} args - Arguments to find a TourOrder
     * @example
     * // Get one TourOrder
     * const tourOrder = await prisma.tourOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TourOrderFindFirstArgs>(args?: SelectSubset<T, TourOrderFindFirstArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TourOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TourOrderFindFirstOrThrowArgs} args - Arguments to find a TourOrder
     * @example
     * // Get one TourOrder
     * const tourOrder = await prisma.tourOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TourOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, TourOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TourOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TourOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TourOrders
     * const tourOrders = await prisma.tourOrder.findMany()
     * 
     * // Get first 10 TourOrders
     * const tourOrders = await prisma.tourOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tourOrderWithIdOnly = await prisma.tourOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TourOrderFindManyArgs>(args?: SelectSubset<T, TourOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TourOrder.
     * @param {TourOrderCreateArgs} args - Arguments to create a TourOrder.
     * @example
     * // Create one TourOrder
     * const TourOrder = await prisma.tourOrder.create({
     *   data: {
     *     // ... data to create a TourOrder
     *   }
     * })
     * 
     */
    create<T extends TourOrderCreateArgs>(args: SelectSubset<T, TourOrderCreateArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TourOrders.
     * @param {TourOrderCreateManyArgs} args - Arguments to create many TourOrders.
     * @example
     * // Create many TourOrders
     * const tourOrder = await prisma.tourOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TourOrderCreateManyArgs>(args?: SelectSubset<T, TourOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TourOrders and returns the data saved in the database.
     * @param {TourOrderCreateManyAndReturnArgs} args - Arguments to create many TourOrders.
     * @example
     * // Create many TourOrders
     * const tourOrder = await prisma.tourOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TourOrders and only return the `id`
     * const tourOrderWithIdOnly = await prisma.tourOrder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TourOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, TourOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TourOrder.
     * @param {TourOrderDeleteArgs} args - Arguments to delete one TourOrder.
     * @example
     * // Delete one TourOrder
     * const TourOrder = await prisma.tourOrder.delete({
     *   where: {
     *     // ... filter to delete one TourOrder
     *   }
     * })
     * 
     */
    delete<T extends TourOrderDeleteArgs>(args: SelectSubset<T, TourOrderDeleteArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TourOrder.
     * @param {TourOrderUpdateArgs} args - Arguments to update one TourOrder.
     * @example
     * // Update one TourOrder
     * const tourOrder = await prisma.tourOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TourOrderUpdateArgs>(args: SelectSubset<T, TourOrderUpdateArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TourOrders.
     * @param {TourOrderDeleteManyArgs} args - Arguments to filter TourOrders to delete.
     * @example
     * // Delete a few TourOrders
     * const { count } = await prisma.tourOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TourOrderDeleteManyArgs>(args?: SelectSubset<T, TourOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TourOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TourOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TourOrders
     * const tourOrder = await prisma.tourOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TourOrderUpdateManyArgs>(args: SelectSubset<T, TourOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TourOrders and returns the data updated in the database.
     * @param {TourOrderUpdateManyAndReturnArgs} args - Arguments to update many TourOrders.
     * @example
     * // Update many TourOrders
     * const tourOrder = await prisma.tourOrder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TourOrders and only return the `id`
     * const tourOrderWithIdOnly = await prisma.tourOrder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TourOrderUpdateManyAndReturnArgs>(args: SelectSubset<T, TourOrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TourOrder.
     * @param {TourOrderUpsertArgs} args - Arguments to update or create a TourOrder.
     * @example
     * // Update or create a TourOrder
     * const tourOrder = await prisma.tourOrder.upsert({
     *   create: {
     *     // ... data to create a TourOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TourOrder we want to update
     *   }
     * })
     */
    upsert<T extends TourOrderUpsertArgs>(args: SelectSubset<T, TourOrderUpsertArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TourOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TourOrderCountArgs} args - Arguments to filter TourOrders to count.
     * @example
     * // Count the number of TourOrders
     * const count = await prisma.tourOrder.count({
     *   where: {
     *     // ... the filter for the TourOrders we want to count
     *   }
     * })
    **/
    count<T extends TourOrderCountArgs>(
      args?: Subset<T, TourOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TourOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TourOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TourOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TourOrderAggregateArgs>(args: Subset<T, TourOrderAggregateArgs>): Prisma.PrismaPromise<GetTourOrderAggregateType<T>>

    /**
     * Group by TourOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TourOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TourOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TourOrderGroupByArgs['orderBy'] }
        : { orderBy?: TourOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TourOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTourOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TourOrder model
   */
  readonly fields: TourOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TourOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TourOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends TourOrder$userArgs<ExtArgs> = {}>(args?: Subset<T, TourOrder$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    travelers<T extends TourOrder$travelersArgs<ExtArgs> = {}>(args?: Subset<T, TourOrder$travelersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends TourOrder$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, TourOrder$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documents<T extends TourOrder$documentsArgs<ExtArgs> = {}>(args?: Subset<T, TourOrder$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends TourOrder$notesArgs<ExtArgs> = {}>(args?: Subset<T, TourOrder$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TourOrder model
   */
  interface TourOrderFieldRefs {
    readonly id: FieldRef<"TourOrder", 'Int'>
    readonly orderReference: FieldRef<"TourOrder", 'String'>
    readonly productTourwowCode: FieldRef<"TourOrder", 'String'>
    readonly productTourCode: FieldRef<"TourOrder", 'String'>
    readonly periodStartAt: FieldRef<"TourOrder", 'DateTime'>
    readonly periodEndAt: FieldRef<"TourOrder", 'DateTime'>
    readonly productId: FieldRef<"TourOrder", 'Int'>
    readonly periodId: FieldRef<"TourOrder", 'Int'>
    readonly supplierId: FieldRef<"TourOrder", 'Int'>
    readonly tourName: FieldRef<"TourOrder", 'String'>
    readonly tourCountry: FieldRef<"TourOrder", 'String'>
    readonly tourDurationDays: FieldRef<"TourOrder", 'Int'>
    readonly tourDurationNights: FieldRef<"TourOrder", 'Int'>
    readonly basePrice: FieldRef<"TourOrder", 'Decimal'>
    readonly totalAmount: FieldRef<"TourOrder", 'Decimal'>
    readonly depositAmount: FieldRef<"TourOrder", 'Decimal'>
    readonly remainingAmount: FieldRef<"TourOrder", 'Decimal'>
    readonly currency: FieldRef<"TourOrder", 'String'>
    readonly adultCount: FieldRef<"TourOrder", 'Int'>
    readonly childWithBedCount: FieldRef<"TourOrder", 'Int'>
    readonly childNoBedCount: FieldRef<"TourOrder", 'Int'>
    readonly infantCount: FieldRef<"TourOrder", 'Int'>
    readonly singleRoomCount: FieldRef<"TourOrder", 'Int'>
    readonly extraRoomCount: FieldRef<"TourOrder", 'Int'>
    readonly bookerTitle: FieldRef<"TourOrder", 'String'>
    readonly bookerFirstNameTh: FieldRef<"TourOrder", 'String'>
    readonly bookerLastNameTh: FieldRef<"TourOrder", 'String'>
    readonly bookerFirstNameEn: FieldRef<"TourOrder", 'String'>
    readonly bookerLastNameEn: FieldRef<"TourOrder", 'String'>
    readonly bookerPhone: FieldRef<"TourOrder", 'String'>
    readonly bookerEmail: FieldRef<"TourOrder", 'String'>
    readonly bookerDateOfBirth: FieldRef<"TourOrder", 'DateTime'>
    readonly bookerAddress: FieldRef<"TourOrder", 'String'>
    readonly bookerProvince: FieldRef<"TourOrder", 'String'>
    readonly bookerPostalCode: FieldRef<"TourOrder", 'String'>
    readonly specialRequests: FieldRef<"TourOrder", 'String'>
    readonly dietaryRequirements: FieldRef<"TourOrder", 'String'>
    readonly medicalConditions: FieldRef<"TourOrder", 'String'>
    readonly orderStatus: FieldRef<"TourOrder", 'String'>
    readonly paymentStatus: FieldRef<"TourOrder", 'String'>
    readonly paymentDeadline: FieldRef<"TourOrder", 'DateTime'>
    readonly documentDeadline: FieldRef<"TourOrder", 'DateTime'>
    readonly createdAt: FieldRef<"TourOrder", 'DateTime'>
    readonly updatedAt: FieldRef<"TourOrder", 'DateTime'>
    readonly confirmedAt: FieldRef<"TourOrder", 'DateTime'>
    readonly cancelledAt: FieldRef<"TourOrder", 'DateTime'>
    readonly completedAt: FieldRef<"TourOrder", 'DateTime'>
    readonly userId: FieldRef<"TourOrder", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TourOrder findUnique
   */
  export type TourOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * Filter, which TourOrder to fetch.
     */
    where: TourOrderWhereUniqueInput
  }

  /**
   * TourOrder findUniqueOrThrow
   */
  export type TourOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * Filter, which TourOrder to fetch.
     */
    where: TourOrderWhereUniqueInput
  }

  /**
   * TourOrder findFirst
   */
  export type TourOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * Filter, which TourOrder to fetch.
     */
    where?: TourOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TourOrders to fetch.
     */
    orderBy?: TourOrderOrderByWithRelationInput | TourOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TourOrders.
     */
    cursor?: TourOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TourOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TourOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TourOrders.
     */
    distinct?: TourOrderScalarFieldEnum | TourOrderScalarFieldEnum[]
  }

  /**
   * TourOrder findFirstOrThrow
   */
  export type TourOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * Filter, which TourOrder to fetch.
     */
    where?: TourOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TourOrders to fetch.
     */
    orderBy?: TourOrderOrderByWithRelationInput | TourOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TourOrders.
     */
    cursor?: TourOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TourOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TourOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TourOrders.
     */
    distinct?: TourOrderScalarFieldEnum | TourOrderScalarFieldEnum[]
  }

  /**
   * TourOrder findMany
   */
  export type TourOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * Filter, which TourOrders to fetch.
     */
    where?: TourOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TourOrders to fetch.
     */
    orderBy?: TourOrderOrderByWithRelationInput | TourOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TourOrders.
     */
    cursor?: TourOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TourOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TourOrders.
     */
    skip?: number
    distinct?: TourOrderScalarFieldEnum | TourOrderScalarFieldEnum[]
  }

  /**
   * TourOrder create
   */
  export type TourOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a TourOrder.
     */
    data: XOR<TourOrderCreateInput, TourOrderUncheckedCreateInput>
  }

  /**
   * TourOrder createMany
   */
  export type TourOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TourOrders.
     */
    data: TourOrderCreateManyInput | TourOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TourOrder createManyAndReturn
   */
  export type TourOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * The data used to create many TourOrders.
     */
    data: TourOrderCreateManyInput | TourOrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TourOrder update
   */
  export type TourOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a TourOrder.
     */
    data: XOR<TourOrderUpdateInput, TourOrderUncheckedUpdateInput>
    /**
     * Choose, which TourOrder to update.
     */
    where: TourOrderWhereUniqueInput
  }

  /**
   * TourOrder updateMany
   */
  export type TourOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TourOrders.
     */
    data: XOR<TourOrderUpdateManyMutationInput, TourOrderUncheckedUpdateManyInput>
    /**
     * Filter which TourOrders to update
     */
    where?: TourOrderWhereInput
    /**
     * Limit how many TourOrders to update.
     */
    limit?: number
  }

  /**
   * TourOrder updateManyAndReturn
   */
  export type TourOrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * The data used to update TourOrders.
     */
    data: XOR<TourOrderUpdateManyMutationInput, TourOrderUncheckedUpdateManyInput>
    /**
     * Filter which TourOrders to update
     */
    where?: TourOrderWhereInput
    /**
     * Limit how many TourOrders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TourOrder upsert
   */
  export type TourOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the TourOrder to update in case it exists.
     */
    where: TourOrderWhereUniqueInput
    /**
     * In case the TourOrder found by the `where` argument doesn't exist, create a new TourOrder with this data.
     */
    create: XOR<TourOrderCreateInput, TourOrderUncheckedCreateInput>
    /**
     * In case the TourOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TourOrderUpdateInput, TourOrderUncheckedUpdateInput>
  }

  /**
   * TourOrder delete
   */
  export type TourOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
    /**
     * Filter which TourOrder to delete.
     */
    where: TourOrderWhereUniqueInput
  }

  /**
   * TourOrder deleteMany
   */
  export type TourOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TourOrders to delete
     */
    where?: TourOrderWhereInput
    /**
     * Limit how many TourOrders to delete.
     */
    limit?: number
  }

  /**
   * TourOrder.user
   */
  export type TourOrder$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * TourOrder.travelers
   */
  export type TourOrder$travelersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    where?: OrderTravelerWhereInput
    orderBy?: OrderTravelerOrderByWithRelationInput | OrderTravelerOrderByWithRelationInput[]
    cursor?: OrderTravelerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderTravelerScalarFieldEnum | OrderTravelerScalarFieldEnum[]
  }

  /**
   * TourOrder.payments
   */
  export type TourOrder$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    where?: OrderPaymentWhereInput
    orderBy?: OrderPaymentOrderByWithRelationInput | OrderPaymentOrderByWithRelationInput[]
    cursor?: OrderPaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderPaymentScalarFieldEnum | OrderPaymentScalarFieldEnum[]
  }

  /**
   * TourOrder.documents
   */
  export type TourOrder$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    where?: OrderDocumentWhereInput
    orderBy?: OrderDocumentOrderByWithRelationInput | OrderDocumentOrderByWithRelationInput[]
    cursor?: OrderDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderDocumentScalarFieldEnum | OrderDocumentScalarFieldEnum[]
  }

  /**
   * TourOrder.notes
   */
  export type TourOrder$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    where?: OrderNoteWhereInput
    orderBy?: OrderNoteOrderByWithRelationInput | OrderNoteOrderByWithRelationInput[]
    cursor?: OrderNoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderNoteScalarFieldEnum | OrderNoteScalarFieldEnum[]
  }

  /**
   * TourOrder without action
   */
  export type TourOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TourOrder
     */
    select?: TourOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TourOrder
     */
    omit?: TourOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TourOrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderTraveler
   */

  export type AggregateOrderTraveler = {
    _count: OrderTravelerCountAggregateOutputType | null
    _avg: OrderTravelerAvgAggregateOutputType | null
    _sum: OrderTravelerSumAggregateOutputType | null
    _min: OrderTravelerMinAggregateOutputType | null
    _max: OrderTravelerMaxAggregateOutputType | null
  }

  export type OrderTravelerAvgAggregateOutputType = {
    id: number | null
    orderId: number | null
    price: Decimal | null
  }

  export type OrderTravelerSumAggregateOutputType = {
    id: number | null
    orderId: number | null
    price: Decimal | null
  }

  export type OrderTravelerMinAggregateOutputType = {
    id: number | null
    orderId: number | null
    travelerType: string | null
    title: string | null
    firstNameTh: string | null
    lastNameTh: string | null
    firstNameEn: string | null
    lastNameEn: string | null
    dateOfBirth: Date | null
    gender: string | null
    phone: string | null
    email: string | null
    passportNumber: string | null
    passportExpiry: Date | null
    passportNationality: string | null
    passportIssueCountry: string | null
    seatPreference: string | null
    mealPreference: string | null
    specialNeeds: string | null
    price: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderTravelerMaxAggregateOutputType = {
    id: number | null
    orderId: number | null
    travelerType: string | null
    title: string | null
    firstNameTh: string | null
    lastNameTh: string | null
    firstNameEn: string | null
    lastNameEn: string | null
    dateOfBirth: Date | null
    gender: string | null
    phone: string | null
    email: string | null
    passportNumber: string | null
    passportExpiry: Date | null
    passportNationality: string | null
    passportIssueCountry: string | null
    seatPreference: string | null
    mealPreference: string | null
    specialNeeds: string | null
    price: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderTravelerCountAggregateOutputType = {
    id: number
    orderId: number
    travelerType: number
    title: number
    firstNameTh: number
    lastNameTh: number
    firstNameEn: number
    lastNameEn: number
    dateOfBirth: number
    gender: number
    phone: number
    email: number
    passportNumber: number
    passportExpiry: number
    passportNationality: number
    passportIssueCountry: number
    seatPreference: number
    mealPreference: number
    specialNeeds: number
    price: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderTravelerAvgAggregateInputType = {
    id?: true
    orderId?: true
    price?: true
  }

  export type OrderTravelerSumAggregateInputType = {
    id?: true
    orderId?: true
    price?: true
  }

  export type OrderTravelerMinAggregateInputType = {
    id?: true
    orderId?: true
    travelerType?: true
    title?: true
    firstNameTh?: true
    lastNameTh?: true
    firstNameEn?: true
    lastNameEn?: true
    dateOfBirth?: true
    gender?: true
    phone?: true
    email?: true
    passportNumber?: true
    passportExpiry?: true
    passportNationality?: true
    passportIssueCountry?: true
    seatPreference?: true
    mealPreference?: true
    specialNeeds?: true
    price?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderTravelerMaxAggregateInputType = {
    id?: true
    orderId?: true
    travelerType?: true
    title?: true
    firstNameTh?: true
    lastNameTh?: true
    firstNameEn?: true
    lastNameEn?: true
    dateOfBirth?: true
    gender?: true
    phone?: true
    email?: true
    passportNumber?: true
    passportExpiry?: true
    passportNationality?: true
    passportIssueCountry?: true
    seatPreference?: true
    mealPreference?: true
    specialNeeds?: true
    price?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderTravelerCountAggregateInputType = {
    id?: true
    orderId?: true
    travelerType?: true
    title?: true
    firstNameTh?: true
    lastNameTh?: true
    firstNameEn?: true
    lastNameEn?: true
    dateOfBirth?: true
    gender?: true
    phone?: true
    email?: true
    passportNumber?: true
    passportExpiry?: true
    passportNationality?: true
    passportIssueCountry?: true
    seatPreference?: true
    mealPreference?: true
    specialNeeds?: true
    price?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderTravelerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderTraveler to aggregate.
     */
    where?: OrderTravelerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderTravelers to fetch.
     */
    orderBy?: OrderTravelerOrderByWithRelationInput | OrderTravelerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderTravelerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderTravelers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderTravelers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderTravelers
    **/
    _count?: true | OrderTravelerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderTravelerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderTravelerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderTravelerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderTravelerMaxAggregateInputType
  }

  export type GetOrderTravelerAggregateType<T extends OrderTravelerAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderTraveler]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderTraveler[P]>
      : GetScalarType<T[P], AggregateOrderTraveler[P]>
  }




  export type OrderTravelerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderTravelerWhereInput
    orderBy?: OrderTravelerOrderByWithAggregationInput | OrderTravelerOrderByWithAggregationInput[]
    by: OrderTravelerScalarFieldEnum[] | OrderTravelerScalarFieldEnum
    having?: OrderTravelerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderTravelerCountAggregateInputType | true
    _avg?: OrderTravelerAvgAggregateInputType
    _sum?: OrderTravelerSumAggregateInputType
    _min?: OrderTravelerMinAggregateInputType
    _max?: OrderTravelerMaxAggregateInputType
  }

  export type OrderTravelerGroupByOutputType = {
    id: number
    orderId: number
    travelerType: string
    title: string | null
    firstNameTh: string
    lastNameTh: string
    firstNameEn: string
    lastNameEn: string
    dateOfBirth: Date | null
    gender: string | null
    phone: string | null
    email: string | null
    passportNumber: string | null
    passportExpiry: Date | null
    passportNationality: string | null
    passportIssueCountry: string | null
    seatPreference: string | null
    mealPreference: string | null
    specialNeeds: string | null
    price: Decimal | null
    createdAt: Date
    updatedAt: Date
    _count: OrderTravelerCountAggregateOutputType | null
    _avg: OrderTravelerAvgAggregateOutputType | null
    _sum: OrderTravelerSumAggregateOutputType | null
    _min: OrderTravelerMinAggregateOutputType | null
    _max: OrderTravelerMaxAggregateOutputType | null
  }

  type GetOrderTravelerGroupByPayload<T extends OrderTravelerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderTravelerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderTravelerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderTravelerGroupByOutputType[P]>
            : GetScalarType<T[P], OrderTravelerGroupByOutputType[P]>
        }
      >
    >


  export type OrderTravelerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    travelerType?: boolean
    title?: boolean
    firstNameTh?: boolean
    lastNameTh?: boolean
    firstNameEn?: boolean
    lastNameEn?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    phone?: boolean
    email?: boolean
    passportNumber?: boolean
    passportExpiry?: boolean
    passportNationality?: boolean
    passportIssueCountry?: boolean
    seatPreference?: boolean
    mealPreference?: boolean
    specialNeeds?: boolean
    price?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderTraveler"]>

  export type OrderTravelerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    travelerType?: boolean
    title?: boolean
    firstNameTh?: boolean
    lastNameTh?: boolean
    firstNameEn?: boolean
    lastNameEn?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    phone?: boolean
    email?: boolean
    passportNumber?: boolean
    passportExpiry?: boolean
    passportNationality?: boolean
    passportIssueCountry?: boolean
    seatPreference?: boolean
    mealPreference?: boolean
    specialNeeds?: boolean
    price?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderTraveler"]>

  export type OrderTravelerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    travelerType?: boolean
    title?: boolean
    firstNameTh?: boolean
    lastNameTh?: boolean
    firstNameEn?: boolean
    lastNameEn?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    phone?: boolean
    email?: boolean
    passportNumber?: boolean
    passportExpiry?: boolean
    passportNationality?: boolean
    passportIssueCountry?: boolean
    seatPreference?: boolean
    mealPreference?: boolean
    specialNeeds?: boolean
    price?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderTraveler"]>

  export type OrderTravelerSelectScalar = {
    id?: boolean
    orderId?: boolean
    travelerType?: boolean
    title?: boolean
    firstNameTh?: boolean
    lastNameTh?: boolean
    firstNameEn?: boolean
    lastNameEn?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    phone?: boolean
    email?: boolean
    passportNumber?: boolean
    passportExpiry?: boolean
    passportNationality?: boolean
    passportIssueCountry?: boolean
    seatPreference?: boolean
    mealPreference?: boolean
    specialNeeds?: boolean
    price?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderTravelerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "travelerType" | "title" | "firstNameTh" | "lastNameTh" | "firstNameEn" | "lastNameEn" | "dateOfBirth" | "gender" | "phone" | "email" | "passportNumber" | "passportExpiry" | "passportNationality" | "passportIssueCountry" | "seatPreference" | "mealPreference" | "specialNeeds" | "price" | "createdAt" | "updatedAt", ExtArgs["result"]["orderTraveler"]>
  export type OrderTravelerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }
  export type OrderTravelerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }
  export type OrderTravelerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }

  export type $OrderTravelerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderTraveler"
    objects: {
      order: Prisma.$TourOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderId: number
      travelerType: string
      title: string | null
      firstNameTh: string
      lastNameTh: string
      firstNameEn: string
      lastNameEn: string
      dateOfBirth: Date | null
      gender: string | null
      phone: string | null
      email: string | null
      passportNumber: string | null
      passportExpiry: Date | null
      passportNationality: string | null
      passportIssueCountry: string | null
      seatPreference: string | null
      mealPreference: string | null
      specialNeeds: string | null
      price: Prisma.Decimal | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["orderTraveler"]>
    composites: {}
  }

  type OrderTravelerGetPayload<S extends boolean | null | undefined | OrderTravelerDefaultArgs> = $Result.GetResult<Prisma.$OrderTravelerPayload, S>

  type OrderTravelerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderTravelerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderTravelerCountAggregateInputType | true
    }

  export interface OrderTravelerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderTraveler'], meta: { name: 'OrderTraveler' } }
    /**
     * Find zero or one OrderTraveler that matches the filter.
     * @param {OrderTravelerFindUniqueArgs} args - Arguments to find a OrderTraveler
     * @example
     * // Get one OrderTraveler
     * const orderTraveler = await prisma.orderTraveler.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderTravelerFindUniqueArgs>(args: SelectSubset<T, OrderTravelerFindUniqueArgs<ExtArgs>>): Prisma__OrderTravelerClient<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderTraveler that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderTravelerFindUniqueOrThrowArgs} args - Arguments to find a OrderTraveler
     * @example
     * // Get one OrderTraveler
     * const orderTraveler = await prisma.orderTraveler.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderTravelerFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderTravelerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderTravelerClient<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderTraveler that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderTravelerFindFirstArgs} args - Arguments to find a OrderTraveler
     * @example
     * // Get one OrderTraveler
     * const orderTraveler = await prisma.orderTraveler.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderTravelerFindFirstArgs>(args?: SelectSubset<T, OrderTravelerFindFirstArgs<ExtArgs>>): Prisma__OrderTravelerClient<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderTraveler that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderTravelerFindFirstOrThrowArgs} args - Arguments to find a OrderTraveler
     * @example
     * // Get one OrderTraveler
     * const orderTraveler = await prisma.orderTraveler.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderTravelerFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderTravelerFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderTravelerClient<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderTravelers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderTravelerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderTravelers
     * const orderTravelers = await prisma.orderTraveler.findMany()
     * 
     * // Get first 10 OrderTravelers
     * const orderTravelers = await prisma.orderTraveler.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderTravelerWithIdOnly = await prisma.orderTraveler.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderTravelerFindManyArgs>(args?: SelectSubset<T, OrderTravelerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderTraveler.
     * @param {OrderTravelerCreateArgs} args - Arguments to create a OrderTraveler.
     * @example
     * // Create one OrderTraveler
     * const OrderTraveler = await prisma.orderTraveler.create({
     *   data: {
     *     // ... data to create a OrderTraveler
     *   }
     * })
     * 
     */
    create<T extends OrderTravelerCreateArgs>(args: SelectSubset<T, OrderTravelerCreateArgs<ExtArgs>>): Prisma__OrderTravelerClient<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderTravelers.
     * @param {OrderTravelerCreateManyArgs} args - Arguments to create many OrderTravelers.
     * @example
     * // Create many OrderTravelers
     * const orderTraveler = await prisma.orderTraveler.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderTravelerCreateManyArgs>(args?: SelectSubset<T, OrderTravelerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderTravelers and returns the data saved in the database.
     * @param {OrderTravelerCreateManyAndReturnArgs} args - Arguments to create many OrderTravelers.
     * @example
     * // Create many OrderTravelers
     * const orderTraveler = await prisma.orderTraveler.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderTravelers and only return the `id`
     * const orderTravelerWithIdOnly = await prisma.orderTraveler.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderTravelerCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderTravelerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderTraveler.
     * @param {OrderTravelerDeleteArgs} args - Arguments to delete one OrderTraveler.
     * @example
     * // Delete one OrderTraveler
     * const OrderTraveler = await prisma.orderTraveler.delete({
     *   where: {
     *     // ... filter to delete one OrderTraveler
     *   }
     * })
     * 
     */
    delete<T extends OrderTravelerDeleteArgs>(args: SelectSubset<T, OrderTravelerDeleteArgs<ExtArgs>>): Prisma__OrderTravelerClient<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderTraveler.
     * @param {OrderTravelerUpdateArgs} args - Arguments to update one OrderTraveler.
     * @example
     * // Update one OrderTraveler
     * const orderTraveler = await prisma.orderTraveler.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderTravelerUpdateArgs>(args: SelectSubset<T, OrderTravelerUpdateArgs<ExtArgs>>): Prisma__OrderTravelerClient<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderTravelers.
     * @param {OrderTravelerDeleteManyArgs} args - Arguments to filter OrderTravelers to delete.
     * @example
     * // Delete a few OrderTravelers
     * const { count } = await prisma.orderTraveler.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderTravelerDeleteManyArgs>(args?: SelectSubset<T, OrderTravelerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderTravelers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderTravelerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderTravelers
     * const orderTraveler = await prisma.orderTraveler.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderTravelerUpdateManyArgs>(args: SelectSubset<T, OrderTravelerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderTravelers and returns the data updated in the database.
     * @param {OrderTravelerUpdateManyAndReturnArgs} args - Arguments to update many OrderTravelers.
     * @example
     * // Update many OrderTravelers
     * const orderTraveler = await prisma.orderTraveler.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderTravelers and only return the `id`
     * const orderTravelerWithIdOnly = await prisma.orderTraveler.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderTravelerUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderTravelerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderTraveler.
     * @param {OrderTravelerUpsertArgs} args - Arguments to update or create a OrderTraveler.
     * @example
     * // Update or create a OrderTraveler
     * const orderTraveler = await prisma.orderTraveler.upsert({
     *   create: {
     *     // ... data to create a OrderTraveler
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderTraveler we want to update
     *   }
     * })
     */
    upsert<T extends OrderTravelerUpsertArgs>(args: SelectSubset<T, OrderTravelerUpsertArgs<ExtArgs>>): Prisma__OrderTravelerClient<$Result.GetResult<Prisma.$OrderTravelerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderTravelers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderTravelerCountArgs} args - Arguments to filter OrderTravelers to count.
     * @example
     * // Count the number of OrderTravelers
     * const count = await prisma.orderTraveler.count({
     *   where: {
     *     // ... the filter for the OrderTravelers we want to count
     *   }
     * })
    **/
    count<T extends OrderTravelerCountArgs>(
      args?: Subset<T, OrderTravelerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderTravelerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderTraveler.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderTravelerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderTravelerAggregateArgs>(args: Subset<T, OrderTravelerAggregateArgs>): Prisma.PrismaPromise<GetOrderTravelerAggregateType<T>>

    /**
     * Group by OrderTraveler.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderTravelerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderTravelerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderTravelerGroupByArgs['orderBy'] }
        : { orderBy?: OrderTravelerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderTravelerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderTravelerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderTraveler model
   */
  readonly fields: OrderTravelerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderTraveler.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderTravelerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends TourOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TourOrderDefaultArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderTraveler model
   */
  interface OrderTravelerFieldRefs {
    readonly id: FieldRef<"OrderTraveler", 'Int'>
    readonly orderId: FieldRef<"OrderTraveler", 'Int'>
    readonly travelerType: FieldRef<"OrderTraveler", 'String'>
    readonly title: FieldRef<"OrderTraveler", 'String'>
    readonly firstNameTh: FieldRef<"OrderTraveler", 'String'>
    readonly lastNameTh: FieldRef<"OrderTraveler", 'String'>
    readonly firstNameEn: FieldRef<"OrderTraveler", 'String'>
    readonly lastNameEn: FieldRef<"OrderTraveler", 'String'>
    readonly dateOfBirth: FieldRef<"OrderTraveler", 'DateTime'>
    readonly gender: FieldRef<"OrderTraveler", 'String'>
    readonly phone: FieldRef<"OrderTraveler", 'String'>
    readonly email: FieldRef<"OrderTraveler", 'String'>
    readonly passportNumber: FieldRef<"OrderTraveler", 'String'>
    readonly passportExpiry: FieldRef<"OrderTraveler", 'DateTime'>
    readonly passportNationality: FieldRef<"OrderTraveler", 'String'>
    readonly passportIssueCountry: FieldRef<"OrderTraveler", 'String'>
    readonly seatPreference: FieldRef<"OrderTraveler", 'String'>
    readonly mealPreference: FieldRef<"OrderTraveler", 'String'>
    readonly specialNeeds: FieldRef<"OrderTraveler", 'String'>
    readonly price: FieldRef<"OrderTraveler", 'Decimal'>
    readonly createdAt: FieldRef<"OrderTraveler", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderTraveler", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderTraveler findUnique
   */
  export type OrderTravelerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * Filter, which OrderTraveler to fetch.
     */
    where: OrderTravelerWhereUniqueInput
  }

  /**
   * OrderTraveler findUniqueOrThrow
   */
  export type OrderTravelerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * Filter, which OrderTraveler to fetch.
     */
    where: OrderTravelerWhereUniqueInput
  }

  /**
   * OrderTraveler findFirst
   */
  export type OrderTravelerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * Filter, which OrderTraveler to fetch.
     */
    where?: OrderTravelerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderTravelers to fetch.
     */
    orderBy?: OrderTravelerOrderByWithRelationInput | OrderTravelerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderTravelers.
     */
    cursor?: OrderTravelerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderTravelers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderTravelers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderTravelers.
     */
    distinct?: OrderTravelerScalarFieldEnum | OrderTravelerScalarFieldEnum[]
  }

  /**
   * OrderTraveler findFirstOrThrow
   */
  export type OrderTravelerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * Filter, which OrderTraveler to fetch.
     */
    where?: OrderTravelerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderTravelers to fetch.
     */
    orderBy?: OrderTravelerOrderByWithRelationInput | OrderTravelerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderTravelers.
     */
    cursor?: OrderTravelerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderTravelers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderTravelers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderTravelers.
     */
    distinct?: OrderTravelerScalarFieldEnum | OrderTravelerScalarFieldEnum[]
  }

  /**
   * OrderTraveler findMany
   */
  export type OrderTravelerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * Filter, which OrderTravelers to fetch.
     */
    where?: OrderTravelerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderTravelers to fetch.
     */
    orderBy?: OrderTravelerOrderByWithRelationInput | OrderTravelerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderTravelers.
     */
    cursor?: OrderTravelerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderTravelers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderTravelers.
     */
    skip?: number
    distinct?: OrderTravelerScalarFieldEnum | OrderTravelerScalarFieldEnum[]
  }

  /**
   * OrderTraveler create
   */
  export type OrderTravelerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderTraveler.
     */
    data: XOR<OrderTravelerCreateInput, OrderTravelerUncheckedCreateInput>
  }

  /**
   * OrderTraveler createMany
   */
  export type OrderTravelerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderTravelers.
     */
    data: OrderTravelerCreateManyInput | OrderTravelerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderTraveler createManyAndReturn
   */
  export type OrderTravelerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * The data used to create many OrderTravelers.
     */
    data: OrderTravelerCreateManyInput | OrderTravelerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderTraveler update
   */
  export type OrderTravelerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderTraveler.
     */
    data: XOR<OrderTravelerUpdateInput, OrderTravelerUncheckedUpdateInput>
    /**
     * Choose, which OrderTraveler to update.
     */
    where: OrderTravelerWhereUniqueInput
  }

  /**
   * OrderTraveler updateMany
   */
  export type OrderTravelerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderTravelers.
     */
    data: XOR<OrderTravelerUpdateManyMutationInput, OrderTravelerUncheckedUpdateManyInput>
    /**
     * Filter which OrderTravelers to update
     */
    where?: OrderTravelerWhereInput
    /**
     * Limit how many OrderTravelers to update.
     */
    limit?: number
  }

  /**
   * OrderTraveler updateManyAndReturn
   */
  export type OrderTravelerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * The data used to update OrderTravelers.
     */
    data: XOR<OrderTravelerUpdateManyMutationInput, OrderTravelerUncheckedUpdateManyInput>
    /**
     * Filter which OrderTravelers to update
     */
    where?: OrderTravelerWhereInput
    /**
     * Limit how many OrderTravelers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderTraveler upsert
   */
  export type OrderTravelerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderTraveler to update in case it exists.
     */
    where: OrderTravelerWhereUniqueInput
    /**
     * In case the OrderTraveler found by the `where` argument doesn't exist, create a new OrderTraveler with this data.
     */
    create: XOR<OrderTravelerCreateInput, OrderTravelerUncheckedCreateInput>
    /**
     * In case the OrderTraveler was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderTravelerUpdateInput, OrderTravelerUncheckedUpdateInput>
  }

  /**
   * OrderTraveler delete
   */
  export type OrderTravelerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
    /**
     * Filter which OrderTraveler to delete.
     */
    where: OrderTravelerWhereUniqueInput
  }

  /**
   * OrderTraveler deleteMany
   */
  export type OrderTravelerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderTravelers to delete
     */
    where?: OrderTravelerWhereInput
    /**
     * Limit how many OrderTravelers to delete.
     */
    limit?: number
  }

  /**
   * OrderTraveler without action
   */
  export type OrderTravelerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderTraveler
     */
    select?: OrderTravelerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderTraveler
     */
    omit?: OrderTravelerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderTravelerInclude<ExtArgs> | null
  }


  /**
   * Model OrderPayment
   */

  export type AggregateOrderPayment = {
    _count: OrderPaymentCountAggregateOutputType | null
    _avg: OrderPaymentAvgAggregateOutputType | null
    _sum: OrderPaymentSumAggregateOutputType | null
    _min: OrderPaymentMinAggregateOutputType | null
    _max: OrderPaymentMaxAggregateOutputType | null
  }

  export type OrderPaymentAvgAggregateOutputType = {
    id: number | null
    orderId: number | null
    amount: Decimal | null
    exchangeRate: Decimal | null
  }

  export type OrderPaymentSumAggregateOutputType = {
    id: number | null
    orderId: number | null
    amount: Decimal | null
    exchangeRate: Decimal | null
  }

  export type OrderPaymentMinAggregateOutputType = {
    id: number | null
    orderId: number | null
    paymentType: string | null
    paymentMethod: string | null
    paymentProvider: string | null
    transactionId: string | null
    referenceNumber: string | null
    amount: Decimal | null
    currency: string | null
    exchangeRate: Decimal | null
    paymentStatus: string | null
    gatewayResponse: string | null
    bankResponse: string | null
    receiptNumber: string | null
    invoiceNumber: string | null
    requestedAt: Date | null
    processedAt: Date | null
    completedAt: Date | null
    failedAt: Date | null
    refundedAt: Date | null
    paymentNotes: string | null
    failureReason: string | null
  }

  export type OrderPaymentMaxAggregateOutputType = {
    id: number | null
    orderId: number | null
    paymentType: string | null
    paymentMethod: string | null
    paymentProvider: string | null
    transactionId: string | null
    referenceNumber: string | null
    amount: Decimal | null
    currency: string | null
    exchangeRate: Decimal | null
    paymentStatus: string | null
    gatewayResponse: string | null
    bankResponse: string | null
    receiptNumber: string | null
    invoiceNumber: string | null
    requestedAt: Date | null
    processedAt: Date | null
    completedAt: Date | null
    failedAt: Date | null
    refundedAt: Date | null
    paymentNotes: string | null
    failureReason: string | null
  }

  export type OrderPaymentCountAggregateOutputType = {
    id: number
    orderId: number
    paymentType: number
    paymentMethod: number
    paymentProvider: number
    transactionId: number
    referenceNumber: number
    amount: number
    currency: number
    exchangeRate: number
    paymentStatus: number
    gatewayResponse: number
    bankResponse: number
    receiptNumber: number
    invoiceNumber: number
    requestedAt: number
    processedAt: number
    completedAt: number
    failedAt: number
    refundedAt: number
    paymentNotes: number
    failureReason: number
    _all: number
  }


  export type OrderPaymentAvgAggregateInputType = {
    id?: true
    orderId?: true
    amount?: true
    exchangeRate?: true
  }

  export type OrderPaymentSumAggregateInputType = {
    id?: true
    orderId?: true
    amount?: true
    exchangeRate?: true
  }

  export type OrderPaymentMinAggregateInputType = {
    id?: true
    orderId?: true
    paymentType?: true
    paymentMethod?: true
    paymentProvider?: true
    transactionId?: true
    referenceNumber?: true
    amount?: true
    currency?: true
    exchangeRate?: true
    paymentStatus?: true
    gatewayResponse?: true
    bankResponse?: true
    receiptNumber?: true
    invoiceNumber?: true
    requestedAt?: true
    processedAt?: true
    completedAt?: true
    failedAt?: true
    refundedAt?: true
    paymentNotes?: true
    failureReason?: true
  }

  export type OrderPaymentMaxAggregateInputType = {
    id?: true
    orderId?: true
    paymentType?: true
    paymentMethod?: true
    paymentProvider?: true
    transactionId?: true
    referenceNumber?: true
    amount?: true
    currency?: true
    exchangeRate?: true
    paymentStatus?: true
    gatewayResponse?: true
    bankResponse?: true
    receiptNumber?: true
    invoiceNumber?: true
    requestedAt?: true
    processedAt?: true
    completedAt?: true
    failedAt?: true
    refundedAt?: true
    paymentNotes?: true
    failureReason?: true
  }

  export type OrderPaymentCountAggregateInputType = {
    id?: true
    orderId?: true
    paymentType?: true
    paymentMethod?: true
    paymentProvider?: true
    transactionId?: true
    referenceNumber?: true
    amount?: true
    currency?: true
    exchangeRate?: true
    paymentStatus?: true
    gatewayResponse?: true
    bankResponse?: true
    receiptNumber?: true
    invoiceNumber?: true
    requestedAt?: true
    processedAt?: true
    completedAt?: true
    failedAt?: true
    refundedAt?: true
    paymentNotes?: true
    failureReason?: true
    _all?: true
  }

  export type OrderPaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderPayment to aggregate.
     */
    where?: OrderPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderPayments to fetch.
     */
    orderBy?: OrderPaymentOrderByWithRelationInput | OrderPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderPayments
    **/
    _count?: true | OrderPaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderPaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderPaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderPaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderPaymentMaxAggregateInputType
  }

  export type GetOrderPaymentAggregateType<T extends OrderPaymentAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderPayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderPayment[P]>
      : GetScalarType<T[P], AggregateOrderPayment[P]>
  }




  export type OrderPaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderPaymentWhereInput
    orderBy?: OrderPaymentOrderByWithAggregationInput | OrderPaymentOrderByWithAggregationInput[]
    by: OrderPaymentScalarFieldEnum[] | OrderPaymentScalarFieldEnum
    having?: OrderPaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderPaymentCountAggregateInputType | true
    _avg?: OrderPaymentAvgAggregateInputType
    _sum?: OrderPaymentSumAggregateInputType
    _min?: OrderPaymentMinAggregateInputType
    _max?: OrderPaymentMaxAggregateInputType
  }

  export type OrderPaymentGroupByOutputType = {
    id: number
    orderId: number
    paymentType: string
    paymentMethod: string
    paymentProvider: string | null
    transactionId: string | null
    referenceNumber: string | null
    amount: Decimal
    currency: string
    exchangeRate: Decimal | null
    paymentStatus: string
    gatewayResponse: string | null
    bankResponse: string | null
    receiptNumber: string | null
    invoiceNumber: string | null
    requestedAt: Date
    processedAt: Date | null
    completedAt: Date | null
    failedAt: Date | null
    refundedAt: Date | null
    paymentNotes: string | null
    failureReason: string | null
    _count: OrderPaymentCountAggregateOutputType | null
    _avg: OrderPaymentAvgAggregateOutputType | null
    _sum: OrderPaymentSumAggregateOutputType | null
    _min: OrderPaymentMinAggregateOutputType | null
    _max: OrderPaymentMaxAggregateOutputType | null
  }

  type GetOrderPaymentGroupByPayload<T extends OrderPaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderPaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderPaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderPaymentGroupByOutputType[P]>
            : GetScalarType<T[P], OrderPaymentGroupByOutputType[P]>
        }
      >
    >


  export type OrderPaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    paymentType?: boolean
    paymentMethod?: boolean
    paymentProvider?: boolean
    transactionId?: boolean
    referenceNumber?: boolean
    amount?: boolean
    currency?: boolean
    exchangeRate?: boolean
    paymentStatus?: boolean
    gatewayResponse?: boolean
    bankResponse?: boolean
    receiptNumber?: boolean
    invoiceNumber?: boolean
    requestedAt?: boolean
    processedAt?: boolean
    completedAt?: boolean
    failedAt?: boolean
    refundedAt?: boolean
    paymentNotes?: boolean
    failureReason?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderPayment"]>

  export type OrderPaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    paymentType?: boolean
    paymentMethod?: boolean
    paymentProvider?: boolean
    transactionId?: boolean
    referenceNumber?: boolean
    amount?: boolean
    currency?: boolean
    exchangeRate?: boolean
    paymentStatus?: boolean
    gatewayResponse?: boolean
    bankResponse?: boolean
    receiptNumber?: boolean
    invoiceNumber?: boolean
    requestedAt?: boolean
    processedAt?: boolean
    completedAt?: boolean
    failedAt?: boolean
    refundedAt?: boolean
    paymentNotes?: boolean
    failureReason?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderPayment"]>

  export type OrderPaymentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    paymentType?: boolean
    paymentMethod?: boolean
    paymentProvider?: boolean
    transactionId?: boolean
    referenceNumber?: boolean
    amount?: boolean
    currency?: boolean
    exchangeRate?: boolean
    paymentStatus?: boolean
    gatewayResponse?: boolean
    bankResponse?: boolean
    receiptNumber?: boolean
    invoiceNumber?: boolean
    requestedAt?: boolean
    processedAt?: boolean
    completedAt?: boolean
    failedAt?: boolean
    refundedAt?: boolean
    paymentNotes?: boolean
    failureReason?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderPayment"]>

  export type OrderPaymentSelectScalar = {
    id?: boolean
    orderId?: boolean
    paymentType?: boolean
    paymentMethod?: boolean
    paymentProvider?: boolean
    transactionId?: boolean
    referenceNumber?: boolean
    amount?: boolean
    currency?: boolean
    exchangeRate?: boolean
    paymentStatus?: boolean
    gatewayResponse?: boolean
    bankResponse?: boolean
    receiptNumber?: boolean
    invoiceNumber?: boolean
    requestedAt?: boolean
    processedAt?: boolean
    completedAt?: boolean
    failedAt?: boolean
    refundedAt?: boolean
    paymentNotes?: boolean
    failureReason?: boolean
  }

  export type OrderPaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "paymentType" | "paymentMethod" | "paymentProvider" | "transactionId" | "referenceNumber" | "amount" | "currency" | "exchangeRate" | "paymentStatus" | "gatewayResponse" | "bankResponse" | "receiptNumber" | "invoiceNumber" | "requestedAt" | "processedAt" | "completedAt" | "failedAt" | "refundedAt" | "paymentNotes" | "failureReason", ExtArgs["result"]["orderPayment"]>
  export type OrderPaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }
  export type OrderPaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }
  export type OrderPaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }

  export type $OrderPaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderPayment"
    objects: {
      order: Prisma.$TourOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderId: number
      paymentType: string
      paymentMethod: string
      paymentProvider: string | null
      transactionId: string | null
      referenceNumber: string | null
      amount: Prisma.Decimal
      currency: string
      exchangeRate: Prisma.Decimal | null
      paymentStatus: string
      gatewayResponse: string | null
      bankResponse: string | null
      receiptNumber: string | null
      invoiceNumber: string | null
      requestedAt: Date
      processedAt: Date | null
      completedAt: Date | null
      failedAt: Date | null
      refundedAt: Date | null
      paymentNotes: string | null
      failureReason: string | null
    }, ExtArgs["result"]["orderPayment"]>
    composites: {}
  }

  type OrderPaymentGetPayload<S extends boolean | null | undefined | OrderPaymentDefaultArgs> = $Result.GetResult<Prisma.$OrderPaymentPayload, S>

  type OrderPaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderPaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderPaymentCountAggregateInputType | true
    }

  export interface OrderPaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderPayment'], meta: { name: 'OrderPayment' } }
    /**
     * Find zero or one OrderPayment that matches the filter.
     * @param {OrderPaymentFindUniqueArgs} args - Arguments to find a OrderPayment
     * @example
     * // Get one OrderPayment
     * const orderPayment = await prisma.orderPayment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderPaymentFindUniqueArgs>(args: SelectSubset<T, OrderPaymentFindUniqueArgs<ExtArgs>>): Prisma__OrderPaymentClient<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderPayment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderPaymentFindUniqueOrThrowArgs} args - Arguments to find a OrderPayment
     * @example
     * // Get one OrderPayment
     * const orderPayment = await prisma.orderPayment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderPaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderPaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderPaymentClient<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderPayment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderPaymentFindFirstArgs} args - Arguments to find a OrderPayment
     * @example
     * // Get one OrderPayment
     * const orderPayment = await prisma.orderPayment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderPaymentFindFirstArgs>(args?: SelectSubset<T, OrderPaymentFindFirstArgs<ExtArgs>>): Prisma__OrderPaymentClient<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderPayment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderPaymentFindFirstOrThrowArgs} args - Arguments to find a OrderPayment
     * @example
     * // Get one OrderPayment
     * const orderPayment = await prisma.orderPayment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderPaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderPaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderPaymentClient<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderPayments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderPaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderPayments
     * const orderPayments = await prisma.orderPayment.findMany()
     * 
     * // Get first 10 OrderPayments
     * const orderPayments = await prisma.orderPayment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderPaymentWithIdOnly = await prisma.orderPayment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderPaymentFindManyArgs>(args?: SelectSubset<T, OrderPaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderPayment.
     * @param {OrderPaymentCreateArgs} args - Arguments to create a OrderPayment.
     * @example
     * // Create one OrderPayment
     * const OrderPayment = await prisma.orderPayment.create({
     *   data: {
     *     // ... data to create a OrderPayment
     *   }
     * })
     * 
     */
    create<T extends OrderPaymentCreateArgs>(args: SelectSubset<T, OrderPaymentCreateArgs<ExtArgs>>): Prisma__OrderPaymentClient<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderPayments.
     * @param {OrderPaymentCreateManyArgs} args - Arguments to create many OrderPayments.
     * @example
     * // Create many OrderPayments
     * const orderPayment = await prisma.orderPayment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderPaymentCreateManyArgs>(args?: SelectSubset<T, OrderPaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderPayments and returns the data saved in the database.
     * @param {OrderPaymentCreateManyAndReturnArgs} args - Arguments to create many OrderPayments.
     * @example
     * // Create many OrderPayments
     * const orderPayment = await prisma.orderPayment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderPayments and only return the `id`
     * const orderPaymentWithIdOnly = await prisma.orderPayment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderPaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderPaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderPayment.
     * @param {OrderPaymentDeleteArgs} args - Arguments to delete one OrderPayment.
     * @example
     * // Delete one OrderPayment
     * const OrderPayment = await prisma.orderPayment.delete({
     *   where: {
     *     // ... filter to delete one OrderPayment
     *   }
     * })
     * 
     */
    delete<T extends OrderPaymentDeleteArgs>(args: SelectSubset<T, OrderPaymentDeleteArgs<ExtArgs>>): Prisma__OrderPaymentClient<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderPayment.
     * @param {OrderPaymentUpdateArgs} args - Arguments to update one OrderPayment.
     * @example
     * // Update one OrderPayment
     * const orderPayment = await prisma.orderPayment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderPaymentUpdateArgs>(args: SelectSubset<T, OrderPaymentUpdateArgs<ExtArgs>>): Prisma__OrderPaymentClient<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderPayments.
     * @param {OrderPaymentDeleteManyArgs} args - Arguments to filter OrderPayments to delete.
     * @example
     * // Delete a few OrderPayments
     * const { count } = await prisma.orderPayment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderPaymentDeleteManyArgs>(args?: SelectSubset<T, OrderPaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderPayments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderPaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderPayments
     * const orderPayment = await prisma.orderPayment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderPaymentUpdateManyArgs>(args: SelectSubset<T, OrderPaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderPayments and returns the data updated in the database.
     * @param {OrderPaymentUpdateManyAndReturnArgs} args - Arguments to update many OrderPayments.
     * @example
     * // Update many OrderPayments
     * const orderPayment = await prisma.orderPayment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderPayments and only return the `id`
     * const orderPaymentWithIdOnly = await prisma.orderPayment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderPaymentUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderPaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderPayment.
     * @param {OrderPaymentUpsertArgs} args - Arguments to update or create a OrderPayment.
     * @example
     * // Update or create a OrderPayment
     * const orderPayment = await prisma.orderPayment.upsert({
     *   create: {
     *     // ... data to create a OrderPayment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderPayment we want to update
     *   }
     * })
     */
    upsert<T extends OrderPaymentUpsertArgs>(args: SelectSubset<T, OrderPaymentUpsertArgs<ExtArgs>>): Prisma__OrderPaymentClient<$Result.GetResult<Prisma.$OrderPaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderPayments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderPaymentCountArgs} args - Arguments to filter OrderPayments to count.
     * @example
     * // Count the number of OrderPayments
     * const count = await prisma.orderPayment.count({
     *   where: {
     *     // ... the filter for the OrderPayments we want to count
     *   }
     * })
    **/
    count<T extends OrderPaymentCountArgs>(
      args?: Subset<T, OrderPaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderPaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderPayment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderPaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderPaymentAggregateArgs>(args: Subset<T, OrderPaymentAggregateArgs>): Prisma.PrismaPromise<GetOrderPaymentAggregateType<T>>

    /**
     * Group by OrderPayment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderPaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderPaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderPaymentGroupByArgs['orderBy'] }
        : { orderBy?: OrderPaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderPaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderPayment model
   */
  readonly fields: OrderPaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderPayment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderPaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends TourOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TourOrderDefaultArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderPayment model
   */
  interface OrderPaymentFieldRefs {
    readonly id: FieldRef<"OrderPayment", 'Int'>
    readonly orderId: FieldRef<"OrderPayment", 'Int'>
    readonly paymentType: FieldRef<"OrderPayment", 'String'>
    readonly paymentMethod: FieldRef<"OrderPayment", 'String'>
    readonly paymentProvider: FieldRef<"OrderPayment", 'String'>
    readonly transactionId: FieldRef<"OrderPayment", 'String'>
    readonly referenceNumber: FieldRef<"OrderPayment", 'String'>
    readonly amount: FieldRef<"OrderPayment", 'Decimal'>
    readonly currency: FieldRef<"OrderPayment", 'String'>
    readonly exchangeRate: FieldRef<"OrderPayment", 'Decimal'>
    readonly paymentStatus: FieldRef<"OrderPayment", 'String'>
    readonly gatewayResponse: FieldRef<"OrderPayment", 'String'>
    readonly bankResponse: FieldRef<"OrderPayment", 'String'>
    readonly receiptNumber: FieldRef<"OrderPayment", 'String'>
    readonly invoiceNumber: FieldRef<"OrderPayment", 'String'>
    readonly requestedAt: FieldRef<"OrderPayment", 'DateTime'>
    readonly processedAt: FieldRef<"OrderPayment", 'DateTime'>
    readonly completedAt: FieldRef<"OrderPayment", 'DateTime'>
    readonly failedAt: FieldRef<"OrderPayment", 'DateTime'>
    readonly refundedAt: FieldRef<"OrderPayment", 'DateTime'>
    readonly paymentNotes: FieldRef<"OrderPayment", 'String'>
    readonly failureReason: FieldRef<"OrderPayment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrderPayment findUnique
   */
  export type OrderPaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * Filter, which OrderPayment to fetch.
     */
    where: OrderPaymentWhereUniqueInput
  }

  /**
   * OrderPayment findUniqueOrThrow
   */
  export type OrderPaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * Filter, which OrderPayment to fetch.
     */
    where: OrderPaymentWhereUniqueInput
  }

  /**
   * OrderPayment findFirst
   */
  export type OrderPaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * Filter, which OrderPayment to fetch.
     */
    where?: OrderPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderPayments to fetch.
     */
    orderBy?: OrderPaymentOrderByWithRelationInput | OrderPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderPayments.
     */
    cursor?: OrderPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderPayments.
     */
    distinct?: OrderPaymentScalarFieldEnum | OrderPaymentScalarFieldEnum[]
  }

  /**
   * OrderPayment findFirstOrThrow
   */
  export type OrderPaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * Filter, which OrderPayment to fetch.
     */
    where?: OrderPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderPayments to fetch.
     */
    orderBy?: OrderPaymentOrderByWithRelationInput | OrderPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderPayments.
     */
    cursor?: OrderPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderPayments.
     */
    distinct?: OrderPaymentScalarFieldEnum | OrderPaymentScalarFieldEnum[]
  }

  /**
   * OrderPayment findMany
   */
  export type OrderPaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * Filter, which OrderPayments to fetch.
     */
    where?: OrderPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderPayments to fetch.
     */
    orderBy?: OrderPaymentOrderByWithRelationInput | OrderPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderPayments.
     */
    cursor?: OrderPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderPayments.
     */
    skip?: number
    distinct?: OrderPaymentScalarFieldEnum | OrderPaymentScalarFieldEnum[]
  }

  /**
   * OrderPayment create
   */
  export type OrderPaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderPayment.
     */
    data: XOR<OrderPaymentCreateInput, OrderPaymentUncheckedCreateInput>
  }

  /**
   * OrderPayment createMany
   */
  export type OrderPaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderPayments.
     */
    data: OrderPaymentCreateManyInput | OrderPaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderPayment createManyAndReturn
   */
  export type OrderPaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * The data used to create many OrderPayments.
     */
    data: OrderPaymentCreateManyInput | OrderPaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderPayment update
   */
  export type OrderPaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderPayment.
     */
    data: XOR<OrderPaymentUpdateInput, OrderPaymentUncheckedUpdateInput>
    /**
     * Choose, which OrderPayment to update.
     */
    where: OrderPaymentWhereUniqueInput
  }

  /**
   * OrderPayment updateMany
   */
  export type OrderPaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderPayments.
     */
    data: XOR<OrderPaymentUpdateManyMutationInput, OrderPaymentUncheckedUpdateManyInput>
    /**
     * Filter which OrderPayments to update
     */
    where?: OrderPaymentWhereInput
    /**
     * Limit how many OrderPayments to update.
     */
    limit?: number
  }

  /**
   * OrderPayment updateManyAndReturn
   */
  export type OrderPaymentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * The data used to update OrderPayments.
     */
    data: XOR<OrderPaymentUpdateManyMutationInput, OrderPaymentUncheckedUpdateManyInput>
    /**
     * Filter which OrderPayments to update
     */
    where?: OrderPaymentWhereInput
    /**
     * Limit how many OrderPayments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderPayment upsert
   */
  export type OrderPaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderPayment to update in case it exists.
     */
    where: OrderPaymentWhereUniqueInput
    /**
     * In case the OrderPayment found by the `where` argument doesn't exist, create a new OrderPayment with this data.
     */
    create: XOR<OrderPaymentCreateInput, OrderPaymentUncheckedCreateInput>
    /**
     * In case the OrderPayment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderPaymentUpdateInput, OrderPaymentUncheckedUpdateInput>
  }

  /**
   * OrderPayment delete
   */
  export type OrderPaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
    /**
     * Filter which OrderPayment to delete.
     */
    where: OrderPaymentWhereUniqueInput
  }

  /**
   * OrderPayment deleteMany
   */
  export type OrderPaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderPayments to delete
     */
    where?: OrderPaymentWhereInput
    /**
     * Limit how many OrderPayments to delete.
     */
    limit?: number
  }

  /**
   * OrderPayment without action
   */
  export type OrderPaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderPayment
     */
    select?: OrderPaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderPayment
     */
    omit?: OrderPaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderPaymentInclude<ExtArgs> | null
  }


  /**
   * Model OrderDocument
   */

  export type AggregateOrderDocument = {
    _count: OrderDocumentCountAggregateOutputType | null
    _avg: OrderDocumentAvgAggregateOutputType | null
    _sum: OrderDocumentSumAggregateOutputType | null
    _min: OrderDocumentMinAggregateOutputType | null
    _max: OrderDocumentMaxAggregateOutputType | null
  }

  export type OrderDocumentAvgAggregateOutputType = {
    id: number | null
    orderId: number | null
    fileSize: number | null
  }

  export type OrderDocumentSumAggregateOutputType = {
    id: number | null
    orderId: number | null
    fileSize: number | null
  }

  export type OrderDocumentMinAggregateOutputType = {
    id: number | null
    orderId: number | null
    documentType: string | null
    documentTitle: string | null
    documentDescription: string | null
    fileName: string | null
    originalFileName: string | null
    filePath: string | null
    fileSize: number | null
    mimeType: string | null
    isGenerated: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderDocumentMaxAggregateOutputType = {
    id: number | null
    orderId: number | null
    documentType: string | null
    documentTitle: string | null
    documentDescription: string | null
    fileName: string | null
    originalFileName: string | null
    filePath: string | null
    fileSize: number | null
    mimeType: string | null
    isGenerated: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderDocumentCountAggregateOutputType = {
    id: number
    orderId: number
    documentType: number
    documentTitle: number
    documentDescription: number
    fileName: number
    originalFileName: number
    filePath: number
    fileSize: number
    mimeType: number
    isGenerated: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderDocumentAvgAggregateInputType = {
    id?: true
    orderId?: true
    fileSize?: true
  }

  export type OrderDocumentSumAggregateInputType = {
    id?: true
    orderId?: true
    fileSize?: true
  }

  export type OrderDocumentMinAggregateInputType = {
    id?: true
    orderId?: true
    documentType?: true
    documentTitle?: true
    documentDescription?: true
    fileName?: true
    originalFileName?: true
    filePath?: true
    fileSize?: true
    mimeType?: true
    isGenerated?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderDocumentMaxAggregateInputType = {
    id?: true
    orderId?: true
    documentType?: true
    documentTitle?: true
    documentDescription?: true
    fileName?: true
    originalFileName?: true
    filePath?: true
    fileSize?: true
    mimeType?: true
    isGenerated?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderDocumentCountAggregateInputType = {
    id?: true
    orderId?: true
    documentType?: true
    documentTitle?: true
    documentDescription?: true
    fileName?: true
    originalFileName?: true
    filePath?: true
    fileSize?: true
    mimeType?: true
    isGenerated?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderDocument to aggregate.
     */
    where?: OrderDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderDocuments to fetch.
     */
    orderBy?: OrderDocumentOrderByWithRelationInput | OrderDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderDocuments
    **/
    _count?: true | OrderDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderDocumentMaxAggregateInputType
  }

  export type GetOrderDocumentAggregateType<T extends OrderDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderDocument[P]>
      : GetScalarType<T[P], AggregateOrderDocument[P]>
  }




  export type OrderDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderDocumentWhereInput
    orderBy?: OrderDocumentOrderByWithAggregationInput | OrderDocumentOrderByWithAggregationInput[]
    by: OrderDocumentScalarFieldEnum[] | OrderDocumentScalarFieldEnum
    having?: OrderDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderDocumentCountAggregateInputType | true
    _avg?: OrderDocumentAvgAggregateInputType
    _sum?: OrderDocumentSumAggregateInputType
    _min?: OrderDocumentMinAggregateInputType
    _max?: OrderDocumentMaxAggregateInputType
  }

  export type OrderDocumentGroupByOutputType = {
    id: number
    orderId: number
    documentType: string
    documentTitle: string
    documentDescription: string | null
    fileName: string
    originalFileName: string
    filePath: string
    fileSize: number | null
    mimeType: string
    isGenerated: boolean
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: OrderDocumentCountAggregateOutputType | null
    _avg: OrderDocumentAvgAggregateOutputType | null
    _sum: OrderDocumentSumAggregateOutputType | null
    _min: OrderDocumentMinAggregateOutputType | null
    _max: OrderDocumentMaxAggregateOutputType | null
  }

  type GetOrderDocumentGroupByPayload<T extends OrderDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], OrderDocumentGroupByOutputType[P]>
        }
      >
    >


  export type OrderDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    documentType?: boolean
    documentTitle?: boolean
    documentDescription?: boolean
    fileName?: boolean
    originalFileName?: boolean
    filePath?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderDocument"]>

  export type OrderDocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    documentType?: boolean
    documentTitle?: boolean
    documentDescription?: boolean
    fileName?: boolean
    originalFileName?: boolean
    filePath?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderDocument"]>

  export type OrderDocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    documentType?: boolean
    documentTitle?: boolean
    documentDescription?: boolean
    fileName?: boolean
    originalFileName?: boolean
    filePath?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderDocument"]>

  export type OrderDocumentSelectScalar = {
    id?: boolean
    orderId?: boolean
    documentType?: boolean
    documentTitle?: boolean
    documentDescription?: boolean
    fileName?: boolean
    originalFileName?: boolean
    filePath?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderDocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "documentType" | "documentTitle" | "documentDescription" | "fileName" | "originalFileName" | "filePath" | "fileSize" | "mimeType" | "isGenerated" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["orderDocument"]>
  export type OrderDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }
  export type OrderDocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }
  export type OrderDocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }

  export type $OrderDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderDocument"
    objects: {
      order: Prisma.$TourOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderId: number
      documentType: string
      documentTitle: string
      documentDescription: string | null
      fileName: string
      originalFileName: string
      filePath: string
      fileSize: number | null
      mimeType: string
      isGenerated: boolean
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["orderDocument"]>
    composites: {}
  }

  type OrderDocumentGetPayload<S extends boolean | null | undefined | OrderDocumentDefaultArgs> = $Result.GetResult<Prisma.$OrderDocumentPayload, S>

  type OrderDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderDocumentCountAggregateInputType | true
    }

  export interface OrderDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderDocument'], meta: { name: 'OrderDocument' } }
    /**
     * Find zero or one OrderDocument that matches the filter.
     * @param {OrderDocumentFindUniqueArgs} args - Arguments to find a OrderDocument
     * @example
     * // Get one OrderDocument
     * const orderDocument = await prisma.orderDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderDocumentFindUniqueArgs>(args: SelectSubset<T, OrderDocumentFindUniqueArgs<ExtArgs>>): Prisma__OrderDocumentClient<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderDocument that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderDocumentFindUniqueOrThrowArgs} args - Arguments to find a OrderDocument
     * @example
     * // Get one OrderDocument
     * const orderDocument = await prisma.orderDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderDocumentClient<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderDocumentFindFirstArgs} args - Arguments to find a OrderDocument
     * @example
     * // Get one OrderDocument
     * const orderDocument = await prisma.orderDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderDocumentFindFirstArgs>(args?: SelectSubset<T, OrderDocumentFindFirstArgs<ExtArgs>>): Prisma__OrderDocumentClient<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderDocumentFindFirstOrThrowArgs} args - Arguments to find a OrderDocument
     * @example
     * // Get one OrderDocument
     * const orderDocument = await prisma.orderDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderDocumentClient<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderDocuments
     * const orderDocuments = await prisma.orderDocument.findMany()
     * 
     * // Get first 10 OrderDocuments
     * const orderDocuments = await prisma.orderDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderDocumentWithIdOnly = await prisma.orderDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderDocumentFindManyArgs>(args?: SelectSubset<T, OrderDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderDocument.
     * @param {OrderDocumentCreateArgs} args - Arguments to create a OrderDocument.
     * @example
     * // Create one OrderDocument
     * const OrderDocument = await prisma.orderDocument.create({
     *   data: {
     *     // ... data to create a OrderDocument
     *   }
     * })
     * 
     */
    create<T extends OrderDocumentCreateArgs>(args: SelectSubset<T, OrderDocumentCreateArgs<ExtArgs>>): Prisma__OrderDocumentClient<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderDocuments.
     * @param {OrderDocumentCreateManyArgs} args - Arguments to create many OrderDocuments.
     * @example
     * // Create many OrderDocuments
     * const orderDocument = await prisma.orderDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderDocumentCreateManyArgs>(args?: SelectSubset<T, OrderDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderDocuments and returns the data saved in the database.
     * @param {OrderDocumentCreateManyAndReturnArgs} args - Arguments to create many OrderDocuments.
     * @example
     * // Create many OrderDocuments
     * const orderDocument = await prisma.orderDocument.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderDocuments and only return the `id`
     * const orderDocumentWithIdOnly = await prisma.orderDocument.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderDocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderDocument.
     * @param {OrderDocumentDeleteArgs} args - Arguments to delete one OrderDocument.
     * @example
     * // Delete one OrderDocument
     * const OrderDocument = await prisma.orderDocument.delete({
     *   where: {
     *     // ... filter to delete one OrderDocument
     *   }
     * })
     * 
     */
    delete<T extends OrderDocumentDeleteArgs>(args: SelectSubset<T, OrderDocumentDeleteArgs<ExtArgs>>): Prisma__OrderDocumentClient<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderDocument.
     * @param {OrderDocumentUpdateArgs} args - Arguments to update one OrderDocument.
     * @example
     * // Update one OrderDocument
     * const orderDocument = await prisma.orderDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderDocumentUpdateArgs>(args: SelectSubset<T, OrderDocumentUpdateArgs<ExtArgs>>): Prisma__OrderDocumentClient<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderDocuments.
     * @param {OrderDocumentDeleteManyArgs} args - Arguments to filter OrderDocuments to delete.
     * @example
     * // Delete a few OrderDocuments
     * const { count } = await prisma.orderDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDocumentDeleteManyArgs>(args?: SelectSubset<T, OrderDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderDocuments
     * const orderDocument = await prisma.orderDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderDocumentUpdateManyArgs>(args: SelectSubset<T, OrderDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderDocuments and returns the data updated in the database.
     * @param {OrderDocumentUpdateManyAndReturnArgs} args - Arguments to update many OrderDocuments.
     * @example
     * // Update many OrderDocuments
     * const orderDocument = await prisma.orderDocument.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderDocuments and only return the `id`
     * const orderDocumentWithIdOnly = await prisma.orderDocument.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderDocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderDocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderDocument.
     * @param {OrderDocumentUpsertArgs} args - Arguments to update or create a OrderDocument.
     * @example
     * // Update or create a OrderDocument
     * const orderDocument = await prisma.orderDocument.upsert({
     *   create: {
     *     // ... data to create a OrderDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderDocument we want to update
     *   }
     * })
     */
    upsert<T extends OrderDocumentUpsertArgs>(args: SelectSubset<T, OrderDocumentUpsertArgs<ExtArgs>>): Prisma__OrderDocumentClient<$Result.GetResult<Prisma.$OrderDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderDocumentCountArgs} args - Arguments to filter OrderDocuments to count.
     * @example
     * // Count the number of OrderDocuments
     * const count = await prisma.orderDocument.count({
     *   where: {
     *     // ... the filter for the OrderDocuments we want to count
     *   }
     * })
    **/
    count<T extends OrderDocumentCountArgs>(
      args?: Subset<T, OrderDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderDocumentAggregateArgs>(args: Subset<T, OrderDocumentAggregateArgs>): Prisma.PrismaPromise<GetOrderDocumentAggregateType<T>>

    /**
     * Group by OrderDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderDocumentGroupByArgs['orderBy'] }
        : { orderBy?: OrderDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderDocument model
   */
  readonly fields: OrderDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends TourOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TourOrderDefaultArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderDocument model
   */
  interface OrderDocumentFieldRefs {
    readonly id: FieldRef<"OrderDocument", 'Int'>
    readonly orderId: FieldRef<"OrderDocument", 'Int'>
    readonly documentType: FieldRef<"OrderDocument", 'String'>
    readonly documentTitle: FieldRef<"OrderDocument", 'String'>
    readonly documentDescription: FieldRef<"OrderDocument", 'String'>
    readonly fileName: FieldRef<"OrderDocument", 'String'>
    readonly originalFileName: FieldRef<"OrderDocument", 'String'>
    readonly filePath: FieldRef<"OrderDocument", 'String'>
    readonly fileSize: FieldRef<"OrderDocument", 'Int'>
    readonly mimeType: FieldRef<"OrderDocument", 'String'>
    readonly isGenerated: FieldRef<"OrderDocument", 'Boolean'>
    readonly isActive: FieldRef<"OrderDocument", 'Boolean'>
    readonly createdAt: FieldRef<"OrderDocument", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderDocument", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderDocument findUnique
   */
  export type OrderDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which OrderDocument to fetch.
     */
    where: OrderDocumentWhereUniqueInput
  }

  /**
   * OrderDocument findUniqueOrThrow
   */
  export type OrderDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which OrderDocument to fetch.
     */
    where: OrderDocumentWhereUniqueInput
  }

  /**
   * OrderDocument findFirst
   */
  export type OrderDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which OrderDocument to fetch.
     */
    where?: OrderDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderDocuments to fetch.
     */
    orderBy?: OrderDocumentOrderByWithRelationInput | OrderDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderDocuments.
     */
    cursor?: OrderDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderDocuments.
     */
    distinct?: OrderDocumentScalarFieldEnum | OrderDocumentScalarFieldEnum[]
  }

  /**
   * OrderDocument findFirstOrThrow
   */
  export type OrderDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which OrderDocument to fetch.
     */
    where?: OrderDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderDocuments to fetch.
     */
    orderBy?: OrderDocumentOrderByWithRelationInput | OrderDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderDocuments.
     */
    cursor?: OrderDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderDocuments.
     */
    distinct?: OrderDocumentScalarFieldEnum | OrderDocumentScalarFieldEnum[]
  }

  /**
   * OrderDocument findMany
   */
  export type OrderDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * Filter, which OrderDocuments to fetch.
     */
    where?: OrderDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderDocuments to fetch.
     */
    orderBy?: OrderDocumentOrderByWithRelationInput | OrderDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderDocuments.
     */
    cursor?: OrderDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderDocuments.
     */
    skip?: number
    distinct?: OrderDocumentScalarFieldEnum | OrderDocumentScalarFieldEnum[]
  }

  /**
   * OrderDocument create
   */
  export type OrderDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderDocument.
     */
    data: XOR<OrderDocumentCreateInput, OrderDocumentUncheckedCreateInput>
  }

  /**
   * OrderDocument createMany
   */
  export type OrderDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderDocuments.
     */
    data: OrderDocumentCreateManyInput | OrderDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderDocument createManyAndReturn
   */
  export type OrderDocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * The data used to create many OrderDocuments.
     */
    data: OrderDocumentCreateManyInput | OrderDocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderDocument update
   */
  export type OrderDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderDocument.
     */
    data: XOR<OrderDocumentUpdateInput, OrderDocumentUncheckedUpdateInput>
    /**
     * Choose, which OrderDocument to update.
     */
    where: OrderDocumentWhereUniqueInput
  }

  /**
   * OrderDocument updateMany
   */
  export type OrderDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderDocuments.
     */
    data: XOR<OrderDocumentUpdateManyMutationInput, OrderDocumentUncheckedUpdateManyInput>
    /**
     * Filter which OrderDocuments to update
     */
    where?: OrderDocumentWhereInput
    /**
     * Limit how many OrderDocuments to update.
     */
    limit?: number
  }

  /**
   * OrderDocument updateManyAndReturn
   */
  export type OrderDocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * The data used to update OrderDocuments.
     */
    data: XOR<OrderDocumentUpdateManyMutationInput, OrderDocumentUncheckedUpdateManyInput>
    /**
     * Filter which OrderDocuments to update
     */
    where?: OrderDocumentWhereInput
    /**
     * Limit how many OrderDocuments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderDocument upsert
   */
  export type OrderDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderDocument to update in case it exists.
     */
    where: OrderDocumentWhereUniqueInput
    /**
     * In case the OrderDocument found by the `where` argument doesn't exist, create a new OrderDocument with this data.
     */
    create: XOR<OrderDocumentCreateInput, OrderDocumentUncheckedCreateInput>
    /**
     * In case the OrderDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderDocumentUpdateInput, OrderDocumentUncheckedUpdateInput>
  }

  /**
   * OrderDocument delete
   */
  export type OrderDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
    /**
     * Filter which OrderDocument to delete.
     */
    where: OrderDocumentWhereUniqueInput
  }

  /**
   * OrderDocument deleteMany
   */
  export type OrderDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderDocuments to delete
     */
    where?: OrderDocumentWhereInput
    /**
     * Limit how many OrderDocuments to delete.
     */
    limit?: number
  }

  /**
   * OrderDocument without action
   */
  export type OrderDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderDocument
     */
    select?: OrderDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderDocument
     */
    omit?: OrderDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderDocumentInclude<ExtArgs> | null
  }


  /**
   * Model OrderNote
   */

  export type AggregateOrderNote = {
    _count: OrderNoteCountAggregateOutputType | null
    _avg: OrderNoteAvgAggregateOutputType | null
    _sum: OrderNoteSumAggregateOutputType | null
    _min: OrderNoteMinAggregateOutputType | null
    _max: OrderNoteMaxAggregateOutputType | null
  }

  export type OrderNoteAvgAggregateOutputType = {
    id: number | null
    orderId: number | null
  }

  export type OrderNoteSumAggregateOutputType = {
    id: number | null
    orderId: number | null
  }

  export type OrderNoteMinAggregateOutputType = {
    id: number | null
    orderId: number | null
    noteType: string | null
    subject: string | null
    content: string | null
    isInternal: boolean | null
    authorType: string | null
    authorName: string | null
    authorId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderNoteMaxAggregateOutputType = {
    id: number | null
    orderId: number | null
    noteType: string | null
    subject: string | null
    content: string | null
    isInternal: boolean | null
    authorType: string | null
    authorName: string | null
    authorId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderNoteCountAggregateOutputType = {
    id: number
    orderId: number
    noteType: number
    subject: number
    content: number
    isInternal: number
    authorType: number
    authorName: number
    authorId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderNoteAvgAggregateInputType = {
    id?: true
    orderId?: true
  }

  export type OrderNoteSumAggregateInputType = {
    id?: true
    orderId?: true
  }

  export type OrderNoteMinAggregateInputType = {
    id?: true
    orderId?: true
    noteType?: true
    subject?: true
    content?: true
    isInternal?: true
    authorType?: true
    authorName?: true
    authorId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderNoteMaxAggregateInputType = {
    id?: true
    orderId?: true
    noteType?: true
    subject?: true
    content?: true
    isInternal?: true
    authorType?: true
    authorName?: true
    authorId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderNoteCountAggregateInputType = {
    id?: true
    orderId?: true
    noteType?: true
    subject?: true
    content?: true
    isInternal?: true
    authorType?: true
    authorName?: true
    authorId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderNoteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderNote to aggregate.
     */
    where?: OrderNoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderNotes to fetch.
     */
    orderBy?: OrderNoteOrderByWithRelationInput | OrderNoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderNoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderNotes
    **/
    _count?: true | OrderNoteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderNoteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderNoteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderNoteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderNoteMaxAggregateInputType
  }

  export type GetOrderNoteAggregateType<T extends OrderNoteAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderNote]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderNote[P]>
      : GetScalarType<T[P], AggregateOrderNote[P]>
  }




  export type OrderNoteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderNoteWhereInput
    orderBy?: OrderNoteOrderByWithAggregationInput | OrderNoteOrderByWithAggregationInput[]
    by: OrderNoteScalarFieldEnum[] | OrderNoteScalarFieldEnum
    having?: OrderNoteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderNoteCountAggregateInputType | true
    _avg?: OrderNoteAvgAggregateInputType
    _sum?: OrderNoteSumAggregateInputType
    _min?: OrderNoteMinAggregateInputType
    _max?: OrderNoteMaxAggregateInputType
  }

  export type OrderNoteGroupByOutputType = {
    id: number
    orderId: number
    noteType: string
    subject: string | null
    content: string
    isInternal: boolean
    authorType: string
    authorName: string | null
    authorId: string | null
    createdAt: Date
    updatedAt: Date
    _count: OrderNoteCountAggregateOutputType | null
    _avg: OrderNoteAvgAggregateOutputType | null
    _sum: OrderNoteSumAggregateOutputType | null
    _min: OrderNoteMinAggregateOutputType | null
    _max: OrderNoteMaxAggregateOutputType | null
  }

  type GetOrderNoteGroupByPayload<T extends OrderNoteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderNoteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderNoteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderNoteGroupByOutputType[P]>
            : GetScalarType<T[P], OrderNoteGroupByOutputType[P]>
        }
      >
    >


  export type OrderNoteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    noteType?: boolean
    subject?: boolean
    content?: boolean
    isInternal?: boolean
    authorType?: boolean
    authorName?: boolean
    authorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderNote"]>

  export type OrderNoteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    noteType?: boolean
    subject?: boolean
    content?: boolean
    isInternal?: boolean
    authorType?: boolean
    authorName?: boolean
    authorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderNote"]>

  export type OrderNoteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    noteType?: boolean
    subject?: boolean
    content?: boolean
    isInternal?: boolean
    authorType?: boolean
    authorName?: boolean
    authorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderNote"]>

  export type OrderNoteSelectScalar = {
    id?: boolean
    orderId?: boolean
    noteType?: boolean
    subject?: boolean
    content?: boolean
    isInternal?: boolean
    authorType?: boolean
    authorName?: boolean
    authorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderNoteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "noteType" | "subject" | "content" | "isInternal" | "authorType" | "authorName" | "authorId" | "createdAt" | "updatedAt", ExtArgs["result"]["orderNote"]>
  export type OrderNoteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }
  export type OrderNoteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }
  export type OrderNoteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | TourOrderDefaultArgs<ExtArgs>
  }

  export type $OrderNotePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderNote"
    objects: {
      order: Prisma.$TourOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderId: number
      noteType: string
      subject: string | null
      content: string
      isInternal: boolean
      authorType: string
      authorName: string | null
      authorId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["orderNote"]>
    composites: {}
  }

  type OrderNoteGetPayload<S extends boolean | null | undefined | OrderNoteDefaultArgs> = $Result.GetResult<Prisma.$OrderNotePayload, S>

  type OrderNoteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderNoteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderNoteCountAggregateInputType | true
    }

  export interface OrderNoteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderNote'], meta: { name: 'OrderNote' } }
    /**
     * Find zero or one OrderNote that matches the filter.
     * @param {OrderNoteFindUniqueArgs} args - Arguments to find a OrderNote
     * @example
     * // Get one OrderNote
     * const orderNote = await prisma.orderNote.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderNoteFindUniqueArgs>(args: SelectSubset<T, OrderNoteFindUniqueArgs<ExtArgs>>): Prisma__OrderNoteClient<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderNote that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderNoteFindUniqueOrThrowArgs} args - Arguments to find a OrderNote
     * @example
     * // Get one OrderNote
     * const orderNote = await prisma.orderNote.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderNoteFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderNoteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderNoteClient<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderNote that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderNoteFindFirstArgs} args - Arguments to find a OrderNote
     * @example
     * // Get one OrderNote
     * const orderNote = await prisma.orderNote.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderNoteFindFirstArgs>(args?: SelectSubset<T, OrderNoteFindFirstArgs<ExtArgs>>): Prisma__OrderNoteClient<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderNote that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderNoteFindFirstOrThrowArgs} args - Arguments to find a OrderNote
     * @example
     * // Get one OrderNote
     * const orderNote = await prisma.orderNote.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderNoteFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderNoteFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderNoteClient<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderNotes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderNoteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderNotes
     * const orderNotes = await prisma.orderNote.findMany()
     * 
     * // Get first 10 OrderNotes
     * const orderNotes = await prisma.orderNote.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderNoteWithIdOnly = await prisma.orderNote.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderNoteFindManyArgs>(args?: SelectSubset<T, OrderNoteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderNote.
     * @param {OrderNoteCreateArgs} args - Arguments to create a OrderNote.
     * @example
     * // Create one OrderNote
     * const OrderNote = await prisma.orderNote.create({
     *   data: {
     *     // ... data to create a OrderNote
     *   }
     * })
     * 
     */
    create<T extends OrderNoteCreateArgs>(args: SelectSubset<T, OrderNoteCreateArgs<ExtArgs>>): Prisma__OrderNoteClient<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderNotes.
     * @param {OrderNoteCreateManyArgs} args - Arguments to create many OrderNotes.
     * @example
     * // Create many OrderNotes
     * const orderNote = await prisma.orderNote.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderNoteCreateManyArgs>(args?: SelectSubset<T, OrderNoteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderNotes and returns the data saved in the database.
     * @param {OrderNoteCreateManyAndReturnArgs} args - Arguments to create many OrderNotes.
     * @example
     * // Create many OrderNotes
     * const orderNote = await prisma.orderNote.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderNotes and only return the `id`
     * const orderNoteWithIdOnly = await prisma.orderNote.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderNoteCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderNoteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderNote.
     * @param {OrderNoteDeleteArgs} args - Arguments to delete one OrderNote.
     * @example
     * // Delete one OrderNote
     * const OrderNote = await prisma.orderNote.delete({
     *   where: {
     *     // ... filter to delete one OrderNote
     *   }
     * })
     * 
     */
    delete<T extends OrderNoteDeleteArgs>(args: SelectSubset<T, OrderNoteDeleteArgs<ExtArgs>>): Prisma__OrderNoteClient<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderNote.
     * @param {OrderNoteUpdateArgs} args - Arguments to update one OrderNote.
     * @example
     * // Update one OrderNote
     * const orderNote = await prisma.orderNote.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderNoteUpdateArgs>(args: SelectSubset<T, OrderNoteUpdateArgs<ExtArgs>>): Prisma__OrderNoteClient<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderNotes.
     * @param {OrderNoteDeleteManyArgs} args - Arguments to filter OrderNotes to delete.
     * @example
     * // Delete a few OrderNotes
     * const { count } = await prisma.orderNote.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderNoteDeleteManyArgs>(args?: SelectSubset<T, OrderNoteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderNotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderNoteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderNotes
     * const orderNote = await prisma.orderNote.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderNoteUpdateManyArgs>(args: SelectSubset<T, OrderNoteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderNotes and returns the data updated in the database.
     * @param {OrderNoteUpdateManyAndReturnArgs} args - Arguments to update many OrderNotes.
     * @example
     * // Update many OrderNotes
     * const orderNote = await prisma.orderNote.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderNotes and only return the `id`
     * const orderNoteWithIdOnly = await prisma.orderNote.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderNoteUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderNoteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderNote.
     * @param {OrderNoteUpsertArgs} args - Arguments to update or create a OrderNote.
     * @example
     * // Update or create a OrderNote
     * const orderNote = await prisma.orderNote.upsert({
     *   create: {
     *     // ... data to create a OrderNote
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderNote we want to update
     *   }
     * })
     */
    upsert<T extends OrderNoteUpsertArgs>(args: SelectSubset<T, OrderNoteUpsertArgs<ExtArgs>>): Prisma__OrderNoteClient<$Result.GetResult<Prisma.$OrderNotePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderNotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderNoteCountArgs} args - Arguments to filter OrderNotes to count.
     * @example
     * // Count the number of OrderNotes
     * const count = await prisma.orderNote.count({
     *   where: {
     *     // ... the filter for the OrderNotes we want to count
     *   }
     * })
    **/
    count<T extends OrderNoteCountArgs>(
      args?: Subset<T, OrderNoteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderNoteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderNote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderNoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderNoteAggregateArgs>(args: Subset<T, OrderNoteAggregateArgs>): Prisma.PrismaPromise<GetOrderNoteAggregateType<T>>

    /**
     * Group by OrderNote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderNoteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderNoteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderNoteGroupByArgs['orderBy'] }
        : { orderBy?: OrderNoteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderNoteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderNoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderNote model
   */
  readonly fields: OrderNoteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderNote.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderNoteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends TourOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TourOrderDefaultArgs<ExtArgs>>): Prisma__TourOrderClient<$Result.GetResult<Prisma.$TourOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderNote model
   */
  interface OrderNoteFieldRefs {
    readonly id: FieldRef<"OrderNote", 'Int'>
    readonly orderId: FieldRef<"OrderNote", 'Int'>
    readonly noteType: FieldRef<"OrderNote", 'String'>
    readonly subject: FieldRef<"OrderNote", 'String'>
    readonly content: FieldRef<"OrderNote", 'String'>
    readonly isInternal: FieldRef<"OrderNote", 'Boolean'>
    readonly authorType: FieldRef<"OrderNote", 'String'>
    readonly authorName: FieldRef<"OrderNote", 'String'>
    readonly authorId: FieldRef<"OrderNote", 'String'>
    readonly createdAt: FieldRef<"OrderNote", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderNote", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderNote findUnique
   */
  export type OrderNoteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * Filter, which OrderNote to fetch.
     */
    where: OrderNoteWhereUniqueInput
  }

  /**
   * OrderNote findUniqueOrThrow
   */
  export type OrderNoteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * Filter, which OrderNote to fetch.
     */
    where: OrderNoteWhereUniqueInput
  }

  /**
   * OrderNote findFirst
   */
  export type OrderNoteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * Filter, which OrderNote to fetch.
     */
    where?: OrderNoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderNotes to fetch.
     */
    orderBy?: OrderNoteOrderByWithRelationInput | OrderNoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderNotes.
     */
    cursor?: OrderNoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderNotes.
     */
    distinct?: OrderNoteScalarFieldEnum | OrderNoteScalarFieldEnum[]
  }

  /**
   * OrderNote findFirstOrThrow
   */
  export type OrderNoteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * Filter, which OrderNote to fetch.
     */
    where?: OrderNoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderNotes to fetch.
     */
    orderBy?: OrderNoteOrderByWithRelationInput | OrderNoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderNotes.
     */
    cursor?: OrderNoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderNotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderNotes.
     */
    distinct?: OrderNoteScalarFieldEnum | OrderNoteScalarFieldEnum[]
  }

  /**
   * OrderNote findMany
   */
  export type OrderNoteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * Filter, which OrderNotes to fetch.
     */
    where?: OrderNoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderNotes to fetch.
     */
    orderBy?: OrderNoteOrderByWithRelationInput | OrderNoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderNotes.
     */
    cursor?: OrderNoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderNotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderNotes.
     */
    skip?: number
    distinct?: OrderNoteScalarFieldEnum | OrderNoteScalarFieldEnum[]
  }

  /**
   * OrderNote create
   */
  export type OrderNoteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderNote.
     */
    data: XOR<OrderNoteCreateInput, OrderNoteUncheckedCreateInput>
  }

  /**
   * OrderNote createMany
   */
  export type OrderNoteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderNotes.
     */
    data: OrderNoteCreateManyInput | OrderNoteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderNote createManyAndReturn
   */
  export type OrderNoteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * The data used to create many OrderNotes.
     */
    data: OrderNoteCreateManyInput | OrderNoteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderNote update
   */
  export type OrderNoteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderNote.
     */
    data: XOR<OrderNoteUpdateInput, OrderNoteUncheckedUpdateInput>
    /**
     * Choose, which OrderNote to update.
     */
    where: OrderNoteWhereUniqueInput
  }

  /**
   * OrderNote updateMany
   */
  export type OrderNoteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderNotes.
     */
    data: XOR<OrderNoteUpdateManyMutationInput, OrderNoteUncheckedUpdateManyInput>
    /**
     * Filter which OrderNotes to update
     */
    where?: OrderNoteWhereInput
    /**
     * Limit how many OrderNotes to update.
     */
    limit?: number
  }

  /**
   * OrderNote updateManyAndReturn
   */
  export type OrderNoteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * The data used to update OrderNotes.
     */
    data: XOR<OrderNoteUpdateManyMutationInput, OrderNoteUncheckedUpdateManyInput>
    /**
     * Filter which OrderNotes to update
     */
    where?: OrderNoteWhereInput
    /**
     * Limit how many OrderNotes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderNote upsert
   */
  export type OrderNoteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderNote to update in case it exists.
     */
    where: OrderNoteWhereUniqueInput
    /**
     * In case the OrderNote found by the `where` argument doesn't exist, create a new OrderNote with this data.
     */
    create: XOR<OrderNoteCreateInput, OrderNoteUncheckedCreateInput>
    /**
     * In case the OrderNote was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderNoteUpdateInput, OrderNoteUncheckedUpdateInput>
  }

  /**
   * OrderNote delete
   */
  export type OrderNoteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
    /**
     * Filter which OrderNote to delete.
     */
    where: OrderNoteWhereUniqueInput
  }

  /**
   * OrderNote deleteMany
   */
  export type OrderNoteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderNotes to delete
     */
    where?: OrderNoteWhereInput
    /**
     * Limit how many OrderNotes to delete.
     */
    limit?: number
  }

  /**
   * OrderNote without action
   */
  export type OrderNoteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderNote
     */
    select?: OrderNoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderNote
     */
    omit?: OrderNoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderNoteInclude<ExtArgs> | null
  }


  /**
   * Model TwOrder
   */

  export type AggregateTwOrder = {
    _count: TwOrderCountAggregateOutputType | null
    _avg: TwOrderAvgAggregateOutputType | null
    _sum: TwOrderSumAggregateOutputType | null
    _min: TwOrderMinAggregateOutputType | null
    _max: TwOrderMaxAggregateOutputType | null
  }

  export type TwOrderAvgAggregateOutputType = {
    id: number | null
    periodId: number | null
    pricePerPerson: Decimal | null
    travelerCount: number | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    basePrice: Decimal | null
    extraRooms: number | null
  }

  export type TwOrderSumAggregateOutputType = {
    id: bigint | null
    periodId: number | null
    pricePerPerson: Decimal | null
    travelerCount: number | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    basePrice: Decimal | null
    extraRooms: number | null
  }

  export type TwOrderMinAggregateOutputType = {
    id: bigint | null
    periodId: number | null
    departureDate: Date | null
    returnDate: Date | null
    pricePerPerson: Decimal | null
    travelerCount: number | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    basePrice: Decimal | null
    extraRooms: number | null
    isEdited: boolean | null
    address: string | null
    tourProgramId: string | null
    tourName: string | null
    subDistrict: string | null
    district: string | null
    province: string | null
    postalCode: string | null
    status: string | null
    selectedPackage: string | null
    customerName: string | null
    customerPhone: string | null
    customerEmail: string | null
  }

  export type TwOrderMaxAggregateOutputType = {
    id: bigint | null
    periodId: number | null
    departureDate: Date | null
    returnDate: Date | null
    pricePerPerson: Decimal | null
    travelerCount: number | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    basePrice: Decimal | null
    extraRooms: number | null
    isEdited: boolean | null
    address: string | null
    tourProgramId: string | null
    tourName: string | null
    subDistrict: string | null
    district: string | null
    province: string | null
    postalCode: string | null
    status: string | null
    selectedPackage: string | null
    customerName: string | null
    customerPhone: string | null
    customerEmail: string | null
  }

  export type TwOrderCountAggregateOutputType = {
    id: number
    periodId: number
    departureDate: number
    returnDate: number
    pricePerPerson: number
    travelerCount: number
    totalAmount: number
    depositAmount: number
    createdAt: number
    updatedAt: number
    basePrice: number
    extraRooms: number
    isEdited: number
    address: number
    tourProgramId: number
    tourName: number
    subDistrict: number
    district: number
    province: number
    postalCode: number
    status: number
    selectedPackage: number
    customerName: number
    customerPhone: number
    customerEmail: number
    _all: number
  }


  export type TwOrderAvgAggregateInputType = {
    id?: true
    periodId?: true
    pricePerPerson?: true
    travelerCount?: true
    totalAmount?: true
    depositAmount?: true
    basePrice?: true
    extraRooms?: true
  }

  export type TwOrderSumAggregateInputType = {
    id?: true
    periodId?: true
    pricePerPerson?: true
    travelerCount?: true
    totalAmount?: true
    depositAmount?: true
    basePrice?: true
    extraRooms?: true
  }

  export type TwOrderMinAggregateInputType = {
    id?: true
    periodId?: true
    departureDate?: true
    returnDate?: true
    pricePerPerson?: true
    travelerCount?: true
    totalAmount?: true
    depositAmount?: true
    createdAt?: true
    updatedAt?: true
    basePrice?: true
    extraRooms?: true
    isEdited?: true
    address?: true
    tourProgramId?: true
    tourName?: true
    subDistrict?: true
    district?: true
    province?: true
    postalCode?: true
    status?: true
    selectedPackage?: true
    customerName?: true
    customerPhone?: true
    customerEmail?: true
  }

  export type TwOrderMaxAggregateInputType = {
    id?: true
    periodId?: true
    departureDate?: true
    returnDate?: true
    pricePerPerson?: true
    travelerCount?: true
    totalAmount?: true
    depositAmount?: true
    createdAt?: true
    updatedAt?: true
    basePrice?: true
    extraRooms?: true
    isEdited?: true
    address?: true
    tourProgramId?: true
    tourName?: true
    subDistrict?: true
    district?: true
    province?: true
    postalCode?: true
    status?: true
    selectedPackage?: true
    customerName?: true
    customerPhone?: true
    customerEmail?: true
  }

  export type TwOrderCountAggregateInputType = {
    id?: true
    periodId?: true
    departureDate?: true
    returnDate?: true
    pricePerPerson?: true
    travelerCount?: true
    totalAmount?: true
    depositAmount?: true
    createdAt?: true
    updatedAt?: true
    basePrice?: true
    extraRooms?: true
    isEdited?: true
    address?: true
    tourProgramId?: true
    tourName?: true
    subDistrict?: true
    district?: true
    province?: true
    postalCode?: true
    status?: true
    selectedPackage?: true
    customerName?: true
    customerPhone?: true
    customerEmail?: true
    _all?: true
  }

  export type TwOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TwOrder to aggregate.
     */
    where?: TwOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwOrders to fetch.
     */
    orderBy?: TwOrderOrderByWithRelationInput | TwOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TwOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TwOrders
    **/
    _count?: true | TwOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TwOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TwOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TwOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TwOrderMaxAggregateInputType
  }

  export type GetTwOrderAggregateType<T extends TwOrderAggregateArgs> = {
        [P in keyof T & keyof AggregateTwOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTwOrder[P]>
      : GetScalarType<T[P], AggregateTwOrder[P]>
  }




  export type TwOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TwOrderWhereInput
    orderBy?: TwOrderOrderByWithAggregationInput | TwOrderOrderByWithAggregationInput[]
    by: TwOrderScalarFieldEnum[] | TwOrderScalarFieldEnum
    having?: TwOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TwOrderCountAggregateInputType | true
    _avg?: TwOrderAvgAggregateInputType
    _sum?: TwOrderSumAggregateInputType
    _min?: TwOrderMinAggregateInputType
    _max?: TwOrderMaxAggregateInputType
  }

  export type TwOrderGroupByOutputType = {
    id: bigint
    periodId: number | null
    departureDate: Date | null
    returnDate: Date | null
    pricePerPerson: Decimal | null
    travelerCount: number | null
    totalAmount: Decimal | null
    depositAmount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    basePrice: Decimal | null
    extraRooms: number | null
    isEdited: boolean | null
    address: string | null
    tourProgramId: string | null
    tourName: string | null
    subDistrict: string | null
    district: string | null
    province: string | null
    postalCode: string | null
    status: string | null
    selectedPackage: string | null
    customerName: string | null
    customerPhone: string | null
    customerEmail: string | null
    _count: TwOrderCountAggregateOutputType | null
    _avg: TwOrderAvgAggregateOutputType | null
    _sum: TwOrderSumAggregateOutputType | null
    _min: TwOrderMinAggregateOutputType | null
    _max: TwOrderMaxAggregateOutputType | null
  }

  type GetTwOrderGroupByPayload<T extends TwOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TwOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TwOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TwOrderGroupByOutputType[P]>
            : GetScalarType<T[P], TwOrderGroupByOutputType[P]>
        }
      >
    >


  export type TwOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    periodId?: boolean
    departureDate?: boolean
    returnDate?: boolean
    pricePerPerson?: boolean
    travelerCount?: boolean
    totalAmount?: boolean
    depositAmount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    basePrice?: boolean
    extraRooms?: boolean
    isEdited?: boolean
    address?: boolean
    tourProgramId?: boolean
    tourName?: boolean
    subDistrict?: boolean
    district?: boolean
    province?: boolean
    postalCode?: boolean
    status?: boolean
    selectedPackage?: boolean
    customerName?: boolean
    customerPhone?: boolean
    customerEmail?: boolean
  }, ExtArgs["result"]["twOrder"]>

  export type TwOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    periodId?: boolean
    departureDate?: boolean
    returnDate?: boolean
    pricePerPerson?: boolean
    travelerCount?: boolean
    totalAmount?: boolean
    depositAmount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    basePrice?: boolean
    extraRooms?: boolean
    isEdited?: boolean
    address?: boolean
    tourProgramId?: boolean
    tourName?: boolean
    subDistrict?: boolean
    district?: boolean
    province?: boolean
    postalCode?: boolean
    status?: boolean
    selectedPackage?: boolean
    customerName?: boolean
    customerPhone?: boolean
    customerEmail?: boolean
  }, ExtArgs["result"]["twOrder"]>

  export type TwOrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    periodId?: boolean
    departureDate?: boolean
    returnDate?: boolean
    pricePerPerson?: boolean
    travelerCount?: boolean
    totalAmount?: boolean
    depositAmount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    basePrice?: boolean
    extraRooms?: boolean
    isEdited?: boolean
    address?: boolean
    tourProgramId?: boolean
    tourName?: boolean
    subDistrict?: boolean
    district?: boolean
    province?: boolean
    postalCode?: boolean
    status?: boolean
    selectedPackage?: boolean
    customerName?: boolean
    customerPhone?: boolean
    customerEmail?: boolean
  }, ExtArgs["result"]["twOrder"]>

  export type TwOrderSelectScalar = {
    id?: boolean
    periodId?: boolean
    departureDate?: boolean
    returnDate?: boolean
    pricePerPerson?: boolean
    travelerCount?: boolean
    totalAmount?: boolean
    depositAmount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    basePrice?: boolean
    extraRooms?: boolean
    isEdited?: boolean
    address?: boolean
    tourProgramId?: boolean
    tourName?: boolean
    subDistrict?: boolean
    district?: boolean
    province?: boolean
    postalCode?: boolean
    status?: boolean
    selectedPackage?: boolean
    customerName?: boolean
    customerPhone?: boolean
    customerEmail?: boolean
  }

  export type TwOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "periodId" | "departureDate" | "returnDate" | "pricePerPerson" | "travelerCount" | "totalAmount" | "depositAmount" | "createdAt" | "updatedAt" | "basePrice" | "extraRooms" | "isEdited" | "address" | "tourProgramId" | "tourName" | "subDistrict" | "district" | "province" | "postalCode" | "status" | "selectedPackage" | "customerName" | "customerPhone" | "customerEmail", ExtArgs["result"]["twOrder"]>

  export type $TwOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TwOrder"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      periodId: number | null
      departureDate: Date | null
      returnDate: Date | null
      pricePerPerson: Prisma.Decimal | null
      travelerCount: number | null
      totalAmount: Prisma.Decimal | null
      depositAmount: Prisma.Decimal | null
      createdAt: Date | null
      updatedAt: Date | null
      basePrice: Prisma.Decimal | null
      extraRooms: number | null
      isEdited: boolean | null
      address: string | null
      tourProgramId: string | null
      tourName: string | null
      subDistrict: string | null
      district: string | null
      province: string | null
      postalCode: string | null
      status: string | null
      selectedPackage: string | null
      customerName: string | null
      customerPhone: string | null
      customerEmail: string | null
    }, ExtArgs["result"]["twOrder"]>
    composites: {}
  }

  type TwOrderGetPayload<S extends boolean | null | undefined | TwOrderDefaultArgs> = $Result.GetResult<Prisma.$TwOrderPayload, S>

  type TwOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TwOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TwOrderCountAggregateInputType | true
    }

  export interface TwOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TwOrder'], meta: { name: 'TwOrder' } }
    /**
     * Find zero or one TwOrder that matches the filter.
     * @param {TwOrderFindUniqueArgs} args - Arguments to find a TwOrder
     * @example
     * // Get one TwOrder
     * const twOrder = await prisma.twOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TwOrderFindUniqueArgs>(args: SelectSubset<T, TwOrderFindUniqueArgs<ExtArgs>>): Prisma__TwOrderClient<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TwOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TwOrderFindUniqueOrThrowArgs} args - Arguments to find a TwOrder
     * @example
     * // Get one TwOrder
     * const twOrder = await prisma.twOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TwOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, TwOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TwOrderClient<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TwOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwOrderFindFirstArgs} args - Arguments to find a TwOrder
     * @example
     * // Get one TwOrder
     * const twOrder = await prisma.twOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TwOrderFindFirstArgs>(args?: SelectSubset<T, TwOrderFindFirstArgs<ExtArgs>>): Prisma__TwOrderClient<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TwOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwOrderFindFirstOrThrowArgs} args - Arguments to find a TwOrder
     * @example
     * // Get one TwOrder
     * const twOrder = await prisma.twOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TwOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, TwOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__TwOrderClient<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TwOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TwOrders
     * const twOrders = await prisma.twOrder.findMany()
     * 
     * // Get first 10 TwOrders
     * const twOrders = await prisma.twOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const twOrderWithIdOnly = await prisma.twOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TwOrderFindManyArgs>(args?: SelectSubset<T, TwOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TwOrder.
     * @param {TwOrderCreateArgs} args - Arguments to create a TwOrder.
     * @example
     * // Create one TwOrder
     * const TwOrder = await prisma.twOrder.create({
     *   data: {
     *     // ... data to create a TwOrder
     *   }
     * })
     * 
     */
    create<T extends TwOrderCreateArgs>(args: SelectSubset<T, TwOrderCreateArgs<ExtArgs>>): Prisma__TwOrderClient<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TwOrders.
     * @param {TwOrderCreateManyArgs} args - Arguments to create many TwOrders.
     * @example
     * // Create many TwOrders
     * const twOrder = await prisma.twOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TwOrderCreateManyArgs>(args?: SelectSubset<T, TwOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TwOrders and returns the data saved in the database.
     * @param {TwOrderCreateManyAndReturnArgs} args - Arguments to create many TwOrders.
     * @example
     * // Create many TwOrders
     * const twOrder = await prisma.twOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TwOrders and only return the `id`
     * const twOrderWithIdOnly = await prisma.twOrder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TwOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, TwOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TwOrder.
     * @param {TwOrderDeleteArgs} args - Arguments to delete one TwOrder.
     * @example
     * // Delete one TwOrder
     * const TwOrder = await prisma.twOrder.delete({
     *   where: {
     *     // ... filter to delete one TwOrder
     *   }
     * })
     * 
     */
    delete<T extends TwOrderDeleteArgs>(args: SelectSubset<T, TwOrderDeleteArgs<ExtArgs>>): Prisma__TwOrderClient<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TwOrder.
     * @param {TwOrderUpdateArgs} args - Arguments to update one TwOrder.
     * @example
     * // Update one TwOrder
     * const twOrder = await prisma.twOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TwOrderUpdateArgs>(args: SelectSubset<T, TwOrderUpdateArgs<ExtArgs>>): Prisma__TwOrderClient<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TwOrders.
     * @param {TwOrderDeleteManyArgs} args - Arguments to filter TwOrders to delete.
     * @example
     * // Delete a few TwOrders
     * const { count } = await prisma.twOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TwOrderDeleteManyArgs>(args?: SelectSubset<T, TwOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TwOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TwOrders
     * const twOrder = await prisma.twOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TwOrderUpdateManyArgs>(args: SelectSubset<T, TwOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TwOrders and returns the data updated in the database.
     * @param {TwOrderUpdateManyAndReturnArgs} args - Arguments to update many TwOrders.
     * @example
     * // Update many TwOrders
     * const twOrder = await prisma.twOrder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TwOrders and only return the `id`
     * const twOrderWithIdOnly = await prisma.twOrder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TwOrderUpdateManyAndReturnArgs>(args: SelectSubset<T, TwOrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TwOrder.
     * @param {TwOrderUpsertArgs} args - Arguments to update or create a TwOrder.
     * @example
     * // Update or create a TwOrder
     * const twOrder = await prisma.twOrder.upsert({
     *   create: {
     *     // ... data to create a TwOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TwOrder we want to update
     *   }
     * })
     */
    upsert<T extends TwOrderUpsertArgs>(args: SelectSubset<T, TwOrderUpsertArgs<ExtArgs>>): Prisma__TwOrderClient<$Result.GetResult<Prisma.$TwOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TwOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwOrderCountArgs} args - Arguments to filter TwOrders to count.
     * @example
     * // Count the number of TwOrders
     * const count = await prisma.twOrder.count({
     *   where: {
     *     // ... the filter for the TwOrders we want to count
     *   }
     * })
    **/
    count<T extends TwOrderCountArgs>(
      args?: Subset<T, TwOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TwOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TwOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TwOrderAggregateArgs>(args: Subset<T, TwOrderAggregateArgs>): Prisma.PrismaPromise<GetTwOrderAggregateType<T>>

    /**
     * Group by TwOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TwOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TwOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TwOrderGroupByArgs['orderBy'] }
        : { orderBy?: TwOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TwOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTwOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TwOrder model
   */
  readonly fields: TwOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TwOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TwOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TwOrder model
   */
  interface TwOrderFieldRefs {
    readonly id: FieldRef<"TwOrder", 'BigInt'>
    readonly periodId: FieldRef<"TwOrder", 'Int'>
    readonly departureDate: FieldRef<"TwOrder", 'DateTime'>
    readonly returnDate: FieldRef<"TwOrder", 'DateTime'>
    readonly pricePerPerson: FieldRef<"TwOrder", 'Decimal'>
    readonly travelerCount: FieldRef<"TwOrder", 'Int'>
    readonly totalAmount: FieldRef<"TwOrder", 'Decimal'>
    readonly depositAmount: FieldRef<"TwOrder", 'Decimal'>
    readonly createdAt: FieldRef<"TwOrder", 'DateTime'>
    readonly updatedAt: FieldRef<"TwOrder", 'DateTime'>
    readonly basePrice: FieldRef<"TwOrder", 'Decimal'>
    readonly extraRooms: FieldRef<"TwOrder", 'Int'>
    readonly isEdited: FieldRef<"TwOrder", 'Boolean'>
    readonly address: FieldRef<"TwOrder", 'String'>
    readonly tourProgramId: FieldRef<"TwOrder", 'String'>
    readonly tourName: FieldRef<"TwOrder", 'String'>
    readonly subDistrict: FieldRef<"TwOrder", 'String'>
    readonly district: FieldRef<"TwOrder", 'String'>
    readonly province: FieldRef<"TwOrder", 'String'>
    readonly postalCode: FieldRef<"TwOrder", 'String'>
    readonly status: FieldRef<"TwOrder", 'String'>
    readonly selectedPackage: FieldRef<"TwOrder", 'String'>
    readonly customerName: FieldRef<"TwOrder", 'String'>
    readonly customerPhone: FieldRef<"TwOrder", 'String'>
    readonly customerEmail: FieldRef<"TwOrder", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TwOrder findUnique
   */
  export type TwOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * Filter, which TwOrder to fetch.
     */
    where: TwOrderWhereUniqueInput
  }

  /**
   * TwOrder findUniqueOrThrow
   */
  export type TwOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * Filter, which TwOrder to fetch.
     */
    where: TwOrderWhereUniqueInput
  }

  /**
   * TwOrder findFirst
   */
  export type TwOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * Filter, which TwOrder to fetch.
     */
    where?: TwOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwOrders to fetch.
     */
    orderBy?: TwOrderOrderByWithRelationInput | TwOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TwOrders.
     */
    cursor?: TwOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TwOrders.
     */
    distinct?: TwOrderScalarFieldEnum | TwOrderScalarFieldEnum[]
  }

  /**
   * TwOrder findFirstOrThrow
   */
  export type TwOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * Filter, which TwOrder to fetch.
     */
    where?: TwOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwOrders to fetch.
     */
    orderBy?: TwOrderOrderByWithRelationInput | TwOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TwOrders.
     */
    cursor?: TwOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TwOrders.
     */
    distinct?: TwOrderScalarFieldEnum | TwOrderScalarFieldEnum[]
  }

  /**
   * TwOrder findMany
   */
  export type TwOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * Filter, which TwOrders to fetch.
     */
    where?: TwOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TwOrders to fetch.
     */
    orderBy?: TwOrderOrderByWithRelationInput | TwOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TwOrders.
     */
    cursor?: TwOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TwOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TwOrders.
     */
    skip?: number
    distinct?: TwOrderScalarFieldEnum | TwOrderScalarFieldEnum[]
  }

  /**
   * TwOrder create
   */
  export type TwOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * The data needed to create a TwOrder.
     */
    data?: XOR<TwOrderCreateInput, TwOrderUncheckedCreateInput>
  }

  /**
   * TwOrder createMany
   */
  export type TwOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TwOrders.
     */
    data: TwOrderCreateManyInput | TwOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TwOrder createManyAndReturn
   */
  export type TwOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * The data used to create many TwOrders.
     */
    data: TwOrderCreateManyInput | TwOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TwOrder update
   */
  export type TwOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * The data needed to update a TwOrder.
     */
    data: XOR<TwOrderUpdateInput, TwOrderUncheckedUpdateInput>
    /**
     * Choose, which TwOrder to update.
     */
    where: TwOrderWhereUniqueInput
  }

  /**
   * TwOrder updateMany
   */
  export type TwOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TwOrders.
     */
    data: XOR<TwOrderUpdateManyMutationInput, TwOrderUncheckedUpdateManyInput>
    /**
     * Filter which TwOrders to update
     */
    where?: TwOrderWhereInput
    /**
     * Limit how many TwOrders to update.
     */
    limit?: number
  }

  /**
   * TwOrder updateManyAndReturn
   */
  export type TwOrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * The data used to update TwOrders.
     */
    data: XOR<TwOrderUpdateManyMutationInput, TwOrderUncheckedUpdateManyInput>
    /**
     * Filter which TwOrders to update
     */
    where?: TwOrderWhereInput
    /**
     * Limit how many TwOrders to update.
     */
    limit?: number
  }

  /**
   * TwOrder upsert
   */
  export type TwOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * The filter to search for the TwOrder to update in case it exists.
     */
    where: TwOrderWhereUniqueInput
    /**
     * In case the TwOrder found by the `where` argument doesn't exist, create a new TwOrder with this data.
     */
    create: XOR<TwOrderCreateInput, TwOrderUncheckedCreateInput>
    /**
     * In case the TwOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TwOrderUpdateInput, TwOrderUncheckedUpdateInput>
  }

  /**
   * TwOrder delete
   */
  export type TwOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
    /**
     * Filter which TwOrder to delete.
     */
    where: TwOrderWhereUniqueInput
  }

  /**
   * TwOrder deleteMany
   */
  export type TwOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TwOrders to delete
     */
    where?: TwOrderWhereInput
    /**
     * Limit how many TwOrders to delete.
     */
    limit?: number
  }

  /**
   * TwOrder without action
   */
  export type TwOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TwOrder
     */
    select?: TwOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TwOrder
     */
    omit?: TwOrderOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ProductPoolScalarFieldEnum: {
    id: 'id',
    supplierId: 'supplierId',
    productRunningId: 'productRunningId',
    productId: 'productId',
    periodId: 'periodId',
    productSubCategoryId: 'productSubCategoryId',
    productTourCode: 'productTourCode',
    productTourwowCode: 'productTourwowCode',
    productTwUrlPath: 'productTwUrlPath',
    productName: 'productName',
    productStartAt: 'productStartAt',
    productPrice: 'productPrice',
    productPriceCompare: 'productPriceCompare',
    productHasOneCountry: 'productHasOneCountry',
    productMainCountryId: 'productMainCountryId',
    productMainCountryNameTh: 'productMainCountryNameTh',
    productMainCountryNameEn: 'productMainCountryNameEn',
    productCountries: 'productCountries',
    productCountrySubUnits: 'productCountrySubUnits',
    productTags: 'productTags',
    productTagsJson: 'productTagsJson',
    productDurationDay: 'productDurationDay',
    productDurationNight: 'productDurationNight',
    productDurationDayAndNight: 'productDurationDayAndNight',
    productFreeDay: 'productFreeDay',
    productMealAmount: 'productMealAmount',
    productHotelStar: 'productHotelStar',
    productHasVisa: 'productHasVisa',
    productVisaPrice: 'productVisaPrice',
    productHilightDescription: 'productHilightDescription',
    productSubCategoryLabel: 'productSubCategoryLabel',
    productBannerUrl: 'productBannerUrl',
    productHasActivePeriods: 'productHasActivePeriods',
    productIsRecommended: 'productIsRecommended',
    periodGroupCode: 'periodGroupCode',
    periodStartAt: 'periodStartAt',
    periodEndAt: 'periodEndAt',
    periodIsChannelTwpOnlineBooking: 'periodIsChannelTwpOnlineBooking',
    periodPriceAdultDouble: 'periodPriceAdultDouble',
    periodPriceAdultSingle: 'periodPriceAdultSingle',
    periodPriceAdultTripple: 'periodPriceAdultTripple',
    periodPriceChildNoBed: 'periodPriceChildNoBed',
    periodPriceChildBed: 'periodPriceChildBed',
    periodPriceInfant: 'periodPriceInfant',
    periodPriceJoinLand: 'periodPriceJoinLand',
    periodPriceAdultDoubleCompare: 'periodPriceAdultDoubleCompare',
    periodPriceAdultSingleCompare: 'periodPriceAdultSingleCompare',
    periodPriceAdultTrippleCompare: 'periodPriceAdultTrippleCompare',
    periodPriceChildNoBedCompare: 'periodPriceChildNoBedCompare',
    periodPriceChildBedCompare: 'periodPriceChildBedCompare',
    periodPriceInfantCompare: 'periodPriceInfantCompare',
    periodPriceJoinLandCompare: 'periodPriceJoinLandCompare',
    periodDeposit: 'periodDeposit',
    periodCommission: 'periodCommission',
    periodCommissionCompany: 'periodCommissionCompany',
    periodCommissionSeller: 'periodCommissionSeller',
    periodQuantity: 'periodQuantity',
    periodQuantityRemaining: 'periodQuantityRemaining',
    periodSellStatusCode: 'periodSellStatusCode',
    periodIsActive: 'periodIsActive',
    periodDeal: 'periodDeal',
    periodConfig: 'periodConfig',
    periodInstallmentCount: 'periodInstallmentCount',
    periodTransportationCategoryId: 'periodTransportationCategoryId',
    periodTransportationCategoryName: 'periodTransportationCategoryName',
    periodGoTransportationId: 'periodGoTransportationId',
    periodGoTransportationNameEn: 'periodGoTransportationNameEn',
    periodGoTransportationCode: 'periodGoTransportationCode',
    periodGoAirportArrival: 'periodGoAirportArrival',
    periodGoAirportDeparture: 'periodGoAirportDeparture',
    periodGoFlightNumberArrival: 'periodGoFlightNumberArrival',
    periodGoFlightNumberDeparture: 'periodGoFlightNumberDeparture',
    periodGoFlightTimeArrival: 'periodGoFlightTimeArrival',
    periodGoFlightTimeDeparture: 'periodGoFlightTimeDeparture',
    periodBackTransportationId: 'periodBackTransportationId',
    periodBackTransportationNameEn: 'periodBackTransportationNameEn',
    periodBackTransportationCode: 'periodBackTransportationCode',
    periodBackAirportArrival: 'periodBackAirportArrival',
    periodBackAirportDeparture: 'periodBackAirportDeparture',
    periodBackFlightNumberArrival: 'periodBackFlightNumberArrival',
    periodBackFlightNumberDeparture: 'periodBackFlightNumberDeparture',
    periodBackFlightTimeArrival: 'periodBackFlightTimeArrival',
    periodBackFlightTimeDeparture: 'periodBackFlightTimeDeparture',
    createdAt: 'createdAt'
  };

  export type ProductPoolScalarFieldEnum = (typeof ProductPoolScalarFieldEnum)[keyof typeof ProductPoolScalarFieldEnum]


  export const AgencyBlogScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    title: 'title',
    tags: 'tags',
    createdAt: 'createdAt',
    createdByAgencyMemberId: 'createdByAgencyMemberId',
    updatedAt: 'updatedAt',
    updatedByAgencyMemberId: 'updatedByAgencyMemberId',
    deletedAt: 'deletedAt',
    deletedByAgencyMemberId: 'deletedByAgencyMemberId'
  };

  export type AgencyBlogScalarFieldEnum = (typeof AgencyBlogScalarFieldEnum)[keyof typeof AgencyBlogScalarFieldEnum]


  export const SeoArticleScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    parentArticleId: 'parentArticleId',
    isChildOfHomePage: 'isChildOfHomePage',
    isActive: 'isActive',
    seoArticleTypeId: 'seoArticleTypeId',
    seoTargetPageTypeId: 'seoTargetPageTypeId',
    seoSpecialPageId: 'seoSpecialPageId',
    countryId: 'countryId',
    provinceId: 'provinceId',
    countrySubUnitId: 'countrySubUnitId',
    proCategorySubProductId: 'proCategorySubProductId',
    code: 'code',
    name: 'name',
    urlPath: 'urlPath',
    trimmedUrlPath: 'trimmedUrlPath',
    realUrlPath: 'realUrlPath',
    metaTitle: 'metaTitle',
    metaDescription: 'metaDescription',
    primaryKeyword: 'primaryKeyword',
    secondaryKeyword: 'secondaryKeyword',
    relatedKeyword: 'relatedKeyword',
    note: 'note',
    desktopCoverImageFileName: 'desktopCoverImageFileName',
    desktopCoverImageFileSize: 'desktopCoverImageFileSize',
    desktopCoverImageContentType: 'desktopCoverImageContentType',
    desktopCoverImageUpdatedAt: 'desktopCoverImageUpdatedAt',
    mobileCoverImageFileName: 'mobileCoverImageFileName',
    mobileCoverImageFileSize: 'mobileCoverImageFileSize',
    mobileCoverImageContentType: 'mobileCoverImageContentType',
    mobileCoverImageUpdatedAt: 'mobileCoverImageUpdatedAt',
    coverImageAltText: 'coverImageAltText',
    content: 'content',
    hasContent: 'hasContent',
    tags: 'tags',
    createdAt: 'createdAt',
    createdByAgencyMemberId: 'createdByAgencyMemberId',
    updatedAt: 'updatedAt',
    updatedByAgencyMemberId: 'updatedByAgencyMemberId'
  };

  export type SeoArticleScalarFieldEnum = (typeof SeoArticleScalarFieldEnum)[keyof typeof SeoArticleScalarFieldEnum]


  export const TwPageScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    urlPath: 'urlPath',
    redirectToUrlPath: 'redirectToUrlPath',
    twPageTypeId: 'twPageTypeId',
    twPageArgument: 'twPageArgument',
    lastmod: 'lastmod',
    priority: 'priority',
    visitedCount: 'visitedCount',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    visitedAt: 'visitedAt'
  };

  export type TwPageScalarFieldEnum = (typeof TwPageScalarFieldEnum)[keyof typeof TwPageScalarFieldEnum]


  export const TwPageTypeScalarFieldEnum: {
    id: 'id',
    slug: 'slug',
    priority: 'priority'
  };

  export type TwPageTypeScalarFieldEnum = (typeof TwPageTypeScalarFieldEnum)[keyof typeof TwPageTypeScalarFieldEnum]


  export const SeoArticleTypeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug'
  };

  export type SeoArticleTypeScalarFieldEnum = (typeof SeoArticleTypeScalarFieldEnum)[keyof typeof SeoArticleTypeScalarFieldEnum]


  export const BlogDescriptionScalarFieldEnum: {
    id: 'id',
    agcyBlogsId: 'agcyBlogsId',
    agcyGalleriesId: 'agcyGalleriesId',
    typeSlug: 'typeSlug',
    ordinal: 'ordinal',
    description: 'description',
    imageDescription: 'imageDescription',
    createdAt: 'createdAt',
    createdByAgencyMemberId: 'createdByAgencyMemberId',
    updatedAt: 'updatedAt',
    updatedByAgencyMemberId: 'updatedByAgencyMemberId',
    deletedAt: 'deletedAt',
    deletedByAgencyMemberId: 'deletedByAgencyMemberId'
  };

  export type BlogDescriptionScalarFieldEnum = (typeof BlogDescriptionScalarFieldEnum)[keyof typeof BlogDescriptionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    phone: 'phone',
    passwordHash: 'passwordHash',
    role: 'role',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const TourOrderScalarFieldEnum: {
    id: 'id',
    orderReference: 'orderReference',
    productTourwowCode: 'productTourwowCode',
    productTourCode: 'productTourCode',
    periodStartAt: 'periodStartAt',
    periodEndAt: 'periodEndAt',
    productId: 'productId',
    periodId: 'periodId',
    supplierId: 'supplierId',
    tourName: 'tourName',
    tourCountry: 'tourCountry',
    tourDurationDays: 'tourDurationDays',
    tourDurationNights: 'tourDurationNights',
    basePrice: 'basePrice',
    totalAmount: 'totalAmount',
    depositAmount: 'depositAmount',
    remainingAmount: 'remainingAmount',
    currency: 'currency',
    adultCount: 'adultCount',
    childWithBedCount: 'childWithBedCount',
    childNoBedCount: 'childNoBedCount',
    infantCount: 'infantCount',
    singleRoomCount: 'singleRoomCount',
    extraRoomCount: 'extraRoomCount',
    bookerTitle: 'bookerTitle',
    bookerFirstNameTh: 'bookerFirstNameTh',
    bookerLastNameTh: 'bookerLastNameTh',
    bookerFirstNameEn: 'bookerFirstNameEn',
    bookerLastNameEn: 'bookerLastNameEn',
    bookerPhone: 'bookerPhone',
    bookerEmail: 'bookerEmail',
    bookerDateOfBirth: 'bookerDateOfBirth',
    bookerAddress: 'bookerAddress',
    bookerProvince: 'bookerProvince',
    bookerPostalCode: 'bookerPostalCode',
    specialRequests: 'specialRequests',
    dietaryRequirements: 'dietaryRequirements',
    medicalConditions: 'medicalConditions',
    orderStatus: 'orderStatus',
    paymentStatus: 'paymentStatus',
    paymentDeadline: 'paymentDeadline',
    documentDeadline: 'documentDeadline',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    confirmedAt: 'confirmedAt',
    cancelledAt: 'cancelledAt',
    completedAt: 'completedAt',
    userId: 'userId'
  };

  export type TourOrderScalarFieldEnum = (typeof TourOrderScalarFieldEnum)[keyof typeof TourOrderScalarFieldEnum]


  export const OrderTravelerScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    travelerType: 'travelerType',
    title: 'title',
    firstNameTh: 'firstNameTh',
    lastNameTh: 'lastNameTh',
    firstNameEn: 'firstNameEn',
    lastNameEn: 'lastNameEn',
    dateOfBirth: 'dateOfBirth',
    gender: 'gender',
    phone: 'phone',
    email: 'email',
    passportNumber: 'passportNumber',
    passportExpiry: 'passportExpiry',
    passportNationality: 'passportNationality',
    passportIssueCountry: 'passportIssueCountry',
    seatPreference: 'seatPreference',
    mealPreference: 'mealPreference',
    specialNeeds: 'specialNeeds',
    price: 'price',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderTravelerScalarFieldEnum = (typeof OrderTravelerScalarFieldEnum)[keyof typeof OrderTravelerScalarFieldEnum]


  export const OrderPaymentScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    paymentType: 'paymentType',
    paymentMethod: 'paymentMethod',
    paymentProvider: 'paymentProvider',
    transactionId: 'transactionId',
    referenceNumber: 'referenceNumber',
    amount: 'amount',
    currency: 'currency',
    exchangeRate: 'exchangeRate',
    paymentStatus: 'paymentStatus',
    gatewayResponse: 'gatewayResponse',
    bankResponse: 'bankResponse',
    receiptNumber: 'receiptNumber',
    invoiceNumber: 'invoiceNumber',
    requestedAt: 'requestedAt',
    processedAt: 'processedAt',
    completedAt: 'completedAt',
    failedAt: 'failedAt',
    refundedAt: 'refundedAt',
    paymentNotes: 'paymentNotes',
    failureReason: 'failureReason'
  };

  export type OrderPaymentScalarFieldEnum = (typeof OrderPaymentScalarFieldEnum)[keyof typeof OrderPaymentScalarFieldEnum]


  export const OrderDocumentScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    documentType: 'documentType',
    documentTitle: 'documentTitle',
    documentDescription: 'documentDescription',
    fileName: 'fileName',
    originalFileName: 'originalFileName',
    filePath: 'filePath',
    fileSize: 'fileSize',
    mimeType: 'mimeType',
    isGenerated: 'isGenerated',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderDocumentScalarFieldEnum = (typeof OrderDocumentScalarFieldEnum)[keyof typeof OrderDocumentScalarFieldEnum]


  export const OrderNoteScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    noteType: 'noteType',
    subject: 'subject',
    content: 'content',
    isInternal: 'isInternal',
    authorType: 'authorType',
    authorName: 'authorName',
    authorId: 'authorId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderNoteScalarFieldEnum = (typeof OrderNoteScalarFieldEnum)[keyof typeof OrderNoteScalarFieldEnum]


  export const TwOrderScalarFieldEnum: {
    id: 'id',
    periodId: 'periodId',
    departureDate: 'departureDate',
    returnDate: 'returnDate',
    pricePerPerson: 'pricePerPerson',
    travelerCount: 'travelerCount',
    totalAmount: 'totalAmount',
    depositAmount: 'depositAmount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    basePrice: 'basePrice',
    extraRooms: 'extraRooms',
    isEdited: 'isEdited',
    address: 'address',
    tourProgramId: 'tourProgramId',
    tourName: 'tourName',
    subDistrict: 'subDistrict',
    district: 'district',
    province: 'province',
    postalCode: 'postalCode',
    status: 'status',
    selectedPackage: 'selectedPackage',
    customerName: 'customerName',
    customerPhone: 'customerPhone',
    customerEmail: 'customerEmail'
  };

  export type TwOrderScalarFieldEnum = (typeof TwOrderScalarFieldEnum)[keyof typeof TwOrderScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    
  /**
   * Deep Input Types
   */


  export type ProductPoolWhereInput = {
    AND?: ProductPoolWhereInput | ProductPoolWhereInput[]
    OR?: ProductPoolWhereInput[]
    NOT?: ProductPoolWhereInput | ProductPoolWhereInput[]
    id?: IntFilter<"ProductPool"> | number
    supplierId?: IntFilter<"ProductPool"> | number
    productRunningId?: IntFilter<"ProductPool"> | number
    productId?: IntFilter<"ProductPool"> | number
    periodId?: IntFilter<"ProductPool"> | number
    productSubCategoryId?: IntFilter<"ProductPool"> | number
    productTourCode?: StringFilter<"ProductPool"> | string
    productTourwowCode?: StringFilter<"ProductPool"> | string
    productTwUrlPath?: StringFilter<"ProductPool"> | string
    productName?: StringFilter<"ProductPool"> | string
    productStartAt?: DateTimeFilter<"ProductPool"> | Date | string
    productPrice?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    productPriceCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    productHasOneCountry?: IntFilter<"ProductPool"> | number
    productMainCountryId?: IntFilter<"ProductPool"> | number
    productMainCountryNameTh?: StringFilter<"ProductPool"> | string
    productMainCountryNameEn?: StringFilter<"ProductPool"> | string
    productCountries?: StringFilter<"ProductPool"> | string
    productCountrySubUnits?: StringFilter<"ProductPool"> | string
    productTags?: StringFilter<"ProductPool"> | string
    productTagsJson?: StringFilter<"ProductPool"> | string
    productDurationDay?: IntFilter<"ProductPool"> | number
    productDurationNight?: IntFilter<"ProductPool"> | number
    productDurationDayAndNight?: StringFilter<"ProductPool"> | string
    productFreeDay?: IntNullableFilter<"ProductPool"> | number | null
    productMealAmount?: IntFilter<"ProductPool"> | number
    productHotelStar?: IntFilter<"ProductPool"> | number
    productHasVisa?: IntFilter<"ProductPool"> | number
    productVisaPrice?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    productHilightDescription?: StringFilter<"ProductPool"> | string
    productSubCategoryLabel?: StringFilter<"ProductPool"> | string
    productBannerUrl?: StringFilter<"ProductPool"> | string
    productHasActivePeriods?: IntFilter<"ProductPool"> | number
    productIsRecommended?: IntFilter<"ProductPool"> | number
    periodGroupCode?: StringNullableFilter<"ProductPool"> | string | null
    periodStartAt?: DateTimeFilter<"ProductPool"> | Date | string
    periodEndAt?: DateTimeFilter<"ProductPool"> | Date | string
    periodIsChannelTwpOnlineBooking?: IntFilter<"ProductPool"> | number
    periodPriceAdultDouble?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodDeposit?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodCommission?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodCommissionCompany?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodCommissionSeller?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodQuantity?: IntFilter<"ProductPool"> | number
    periodQuantityRemaining?: IntFilter<"ProductPool"> | number
    periodSellStatusCode?: IntFilter<"ProductPool"> | number
    periodIsActive?: IntFilter<"ProductPool"> | number
    periodDeal?: IntFilter<"ProductPool"> | number
    periodConfig?: IntFilter<"ProductPool"> | number
    periodInstallmentCount?: IntFilter<"ProductPool"> | number
    periodTransportationCategoryId?: IntFilter<"ProductPool"> | number
    periodTransportationCategoryName?: StringFilter<"ProductPool"> | string
    periodGoTransportationId?: IntFilter<"ProductPool"> | number
    periodGoTransportationNameEn?: StringFilter<"ProductPool"> | string
    periodGoTransportationCode?: StringFilter<"ProductPool"> | string
    periodGoAirportArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodGoAirportDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodGoFlightNumberArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodGoFlightNumberDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodGoFlightTimeArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodGoFlightTimeDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodBackTransportationId?: IntFilter<"ProductPool"> | number
    periodBackTransportationNameEn?: StringFilter<"ProductPool"> | string
    periodBackTransportationCode?: StringFilter<"ProductPool"> | string
    periodBackAirportArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodBackAirportDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodBackFlightNumberArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodBackFlightNumberDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodBackFlightTimeArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodBackFlightTimeDeparture?: StringNullableFilter<"ProductPool"> | string | null
    createdAt?: DateTimeFilter<"ProductPool"> | Date | string
  }

  export type ProductPoolOrderByWithRelationInput = {
    id?: SortOrder
    supplierId?: SortOrder
    productRunningId?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    productSubCategoryId?: SortOrder
    productTourCode?: SortOrder
    productTourwowCode?: SortOrder
    productTwUrlPath?: SortOrder
    productName?: SortOrder
    productStartAt?: SortOrder
    productPrice?: SortOrder
    productPriceCompare?: SortOrderInput | SortOrder
    productHasOneCountry?: SortOrder
    productMainCountryId?: SortOrder
    productMainCountryNameTh?: SortOrder
    productMainCountryNameEn?: SortOrder
    productCountries?: SortOrder
    productCountrySubUnits?: SortOrder
    productTags?: SortOrder
    productTagsJson?: SortOrder
    productDurationDay?: SortOrder
    productDurationNight?: SortOrder
    productDurationDayAndNight?: SortOrder
    productFreeDay?: SortOrderInput | SortOrder
    productMealAmount?: SortOrder
    productHotelStar?: SortOrder
    productHasVisa?: SortOrder
    productVisaPrice?: SortOrderInput | SortOrder
    productHilightDescription?: SortOrder
    productSubCategoryLabel?: SortOrder
    productBannerUrl?: SortOrder
    productHasActivePeriods?: SortOrder
    productIsRecommended?: SortOrder
    periodGroupCode?: SortOrderInput | SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    periodIsChannelTwpOnlineBooking?: SortOrder
    periodPriceAdultDouble?: SortOrder
    periodPriceAdultSingle?: SortOrderInput | SortOrder
    periodPriceAdultTripple?: SortOrderInput | SortOrder
    periodPriceChildNoBed?: SortOrderInput | SortOrder
    periodPriceChildBed?: SortOrderInput | SortOrder
    periodPriceInfant?: SortOrderInput | SortOrder
    periodPriceJoinLand?: SortOrderInput | SortOrder
    periodPriceAdultDoubleCompare?: SortOrderInput | SortOrder
    periodPriceAdultSingleCompare?: SortOrderInput | SortOrder
    periodPriceAdultTrippleCompare?: SortOrderInput | SortOrder
    periodPriceChildNoBedCompare?: SortOrderInput | SortOrder
    periodPriceChildBedCompare?: SortOrderInput | SortOrder
    periodPriceInfantCompare?: SortOrderInput | SortOrder
    periodPriceJoinLandCompare?: SortOrderInput | SortOrder
    periodDeposit?: SortOrderInput | SortOrder
    periodCommission?: SortOrder
    periodCommissionCompany?: SortOrder
    periodCommissionSeller?: SortOrder
    periodQuantity?: SortOrder
    periodQuantityRemaining?: SortOrder
    periodSellStatusCode?: SortOrder
    periodIsActive?: SortOrder
    periodDeal?: SortOrder
    periodConfig?: SortOrder
    periodInstallmentCount?: SortOrder
    periodTransportationCategoryId?: SortOrder
    periodTransportationCategoryName?: SortOrder
    periodGoTransportationId?: SortOrder
    periodGoTransportationNameEn?: SortOrder
    periodGoTransportationCode?: SortOrder
    periodGoAirportArrival?: SortOrderInput | SortOrder
    periodGoAirportDeparture?: SortOrderInput | SortOrder
    periodGoFlightNumberArrival?: SortOrderInput | SortOrder
    periodGoFlightNumberDeparture?: SortOrderInput | SortOrder
    periodGoFlightTimeArrival?: SortOrderInput | SortOrder
    periodGoFlightTimeDeparture?: SortOrderInput | SortOrder
    periodBackTransportationId?: SortOrder
    periodBackTransportationNameEn?: SortOrder
    periodBackTransportationCode?: SortOrder
    periodBackAirportArrival?: SortOrderInput | SortOrder
    periodBackAirportDeparture?: SortOrderInput | SortOrder
    periodBackFlightNumberArrival?: SortOrderInput | SortOrder
    periodBackFlightNumberDeparture?: SortOrderInput | SortOrder
    periodBackFlightTimeArrival?: SortOrderInput | SortOrder
    periodBackFlightTimeDeparture?: SortOrderInput | SortOrder
    createdAt?: SortOrder
  }

  export type ProductPoolWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductPoolWhereInput | ProductPoolWhereInput[]
    OR?: ProductPoolWhereInput[]
    NOT?: ProductPoolWhereInput | ProductPoolWhereInput[]
    supplierId?: IntFilter<"ProductPool"> | number
    productRunningId?: IntFilter<"ProductPool"> | number
    productId?: IntFilter<"ProductPool"> | number
    periodId?: IntFilter<"ProductPool"> | number
    productSubCategoryId?: IntFilter<"ProductPool"> | number
    productTourCode?: StringFilter<"ProductPool"> | string
    productTourwowCode?: StringFilter<"ProductPool"> | string
    productTwUrlPath?: StringFilter<"ProductPool"> | string
    productName?: StringFilter<"ProductPool"> | string
    productStartAt?: DateTimeFilter<"ProductPool"> | Date | string
    productPrice?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    productPriceCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    productHasOneCountry?: IntFilter<"ProductPool"> | number
    productMainCountryId?: IntFilter<"ProductPool"> | number
    productMainCountryNameTh?: StringFilter<"ProductPool"> | string
    productMainCountryNameEn?: StringFilter<"ProductPool"> | string
    productCountries?: StringFilter<"ProductPool"> | string
    productCountrySubUnits?: StringFilter<"ProductPool"> | string
    productTags?: StringFilter<"ProductPool"> | string
    productTagsJson?: StringFilter<"ProductPool"> | string
    productDurationDay?: IntFilter<"ProductPool"> | number
    productDurationNight?: IntFilter<"ProductPool"> | number
    productDurationDayAndNight?: StringFilter<"ProductPool"> | string
    productFreeDay?: IntNullableFilter<"ProductPool"> | number | null
    productMealAmount?: IntFilter<"ProductPool"> | number
    productHotelStar?: IntFilter<"ProductPool"> | number
    productHasVisa?: IntFilter<"ProductPool"> | number
    productVisaPrice?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    productHilightDescription?: StringFilter<"ProductPool"> | string
    productSubCategoryLabel?: StringFilter<"ProductPool"> | string
    productBannerUrl?: StringFilter<"ProductPool"> | string
    productHasActivePeriods?: IntFilter<"ProductPool"> | number
    productIsRecommended?: IntFilter<"ProductPool"> | number
    periodGroupCode?: StringNullableFilter<"ProductPool"> | string | null
    periodStartAt?: DateTimeFilter<"ProductPool"> | Date | string
    periodEndAt?: DateTimeFilter<"ProductPool"> | Date | string
    periodIsChannelTwpOnlineBooking?: IntFilter<"ProductPool"> | number
    periodPriceAdultDouble?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodDeposit?: DecimalNullableFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodCommission?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodCommissionCompany?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodCommissionSeller?: DecimalFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodQuantity?: IntFilter<"ProductPool"> | number
    periodQuantityRemaining?: IntFilter<"ProductPool"> | number
    periodSellStatusCode?: IntFilter<"ProductPool"> | number
    periodIsActive?: IntFilter<"ProductPool"> | number
    periodDeal?: IntFilter<"ProductPool"> | number
    periodConfig?: IntFilter<"ProductPool"> | number
    periodInstallmentCount?: IntFilter<"ProductPool"> | number
    periodTransportationCategoryId?: IntFilter<"ProductPool"> | number
    periodTransportationCategoryName?: StringFilter<"ProductPool"> | string
    periodGoTransportationId?: IntFilter<"ProductPool"> | number
    periodGoTransportationNameEn?: StringFilter<"ProductPool"> | string
    periodGoTransportationCode?: StringFilter<"ProductPool"> | string
    periodGoAirportArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodGoAirportDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodGoFlightNumberArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodGoFlightNumberDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodGoFlightTimeArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodGoFlightTimeDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodBackTransportationId?: IntFilter<"ProductPool"> | number
    periodBackTransportationNameEn?: StringFilter<"ProductPool"> | string
    periodBackTransportationCode?: StringFilter<"ProductPool"> | string
    periodBackAirportArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodBackAirportDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodBackFlightNumberArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodBackFlightNumberDeparture?: StringNullableFilter<"ProductPool"> | string | null
    periodBackFlightTimeArrival?: StringNullableFilter<"ProductPool"> | string | null
    periodBackFlightTimeDeparture?: StringNullableFilter<"ProductPool"> | string | null
    createdAt?: DateTimeFilter<"ProductPool"> | Date | string
  }, "id">

  export type ProductPoolOrderByWithAggregationInput = {
    id?: SortOrder
    supplierId?: SortOrder
    productRunningId?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    productSubCategoryId?: SortOrder
    productTourCode?: SortOrder
    productTourwowCode?: SortOrder
    productTwUrlPath?: SortOrder
    productName?: SortOrder
    productStartAt?: SortOrder
    productPrice?: SortOrder
    productPriceCompare?: SortOrderInput | SortOrder
    productHasOneCountry?: SortOrder
    productMainCountryId?: SortOrder
    productMainCountryNameTh?: SortOrder
    productMainCountryNameEn?: SortOrder
    productCountries?: SortOrder
    productCountrySubUnits?: SortOrder
    productTags?: SortOrder
    productTagsJson?: SortOrder
    productDurationDay?: SortOrder
    productDurationNight?: SortOrder
    productDurationDayAndNight?: SortOrder
    productFreeDay?: SortOrderInput | SortOrder
    productMealAmount?: SortOrder
    productHotelStar?: SortOrder
    productHasVisa?: SortOrder
    productVisaPrice?: SortOrderInput | SortOrder
    productHilightDescription?: SortOrder
    productSubCategoryLabel?: SortOrder
    productBannerUrl?: SortOrder
    productHasActivePeriods?: SortOrder
    productIsRecommended?: SortOrder
    periodGroupCode?: SortOrderInput | SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    periodIsChannelTwpOnlineBooking?: SortOrder
    periodPriceAdultDouble?: SortOrder
    periodPriceAdultSingle?: SortOrderInput | SortOrder
    periodPriceAdultTripple?: SortOrderInput | SortOrder
    periodPriceChildNoBed?: SortOrderInput | SortOrder
    periodPriceChildBed?: SortOrderInput | SortOrder
    periodPriceInfant?: SortOrderInput | SortOrder
    periodPriceJoinLand?: SortOrderInput | SortOrder
    periodPriceAdultDoubleCompare?: SortOrderInput | SortOrder
    periodPriceAdultSingleCompare?: SortOrderInput | SortOrder
    periodPriceAdultTrippleCompare?: SortOrderInput | SortOrder
    periodPriceChildNoBedCompare?: SortOrderInput | SortOrder
    periodPriceChildBedCompare?: SortOrderInput | SortOrder
    periodPriceInfantCompare?: SortOrderInput | SortOrder
    periodPriceJoinLandCompare?: SortOrderInput | SortOrder
    periodDeposit?: SortOrderInput | SortOrder
    periodCommission?: SortOrder
    periodCommissionCompany?: SortOrder
    periodCommissionSeller?: SortOrder
    periodQuantity?: SortOrder
    periodQuantityRemaining?: SortOrder
    periodSellStatusCode?: SortOrder
    periodIsActive?: SortOrder
    periodDeal?: SortOrder
    periodConfig?: SortOrder
    periodInstallmentCount?: SortOrder
    periodTransportationCategoryId?: SortOrder
    periodTransportationCategoryName?: SortOrder
    periodGoTransportationId?: SortOrder
    periodGoTransportationNameEn?: SortOrder
    periodGoTransportationCode?: SortOrder
    periodGoAirportArrival?: SortOrderInput | SortOrder
    periodGoAirportDeparture?: SortOrderInput | SortOrder
    periodGoFlightNumberArrival?: SortOrderInput | SortOrder
    periodGoFlightNumberDeparture?: SortOrderInput | SortOrder
    periodGoFlightTimeArrival?: SortOrderInput | SortOrder
    periodGoFlightTimeDeparture?: SortOrderInput | SortOrder
    periodBackTransportationId?: SortOrder
    periodBackTransportationNameEn?: SortOrder
    periodBackTransportationCode?: SortOrder
    periodBackAirportArrival?: SortOrderInput | SortOrder
    periodBackAirportDeparture?: SortOrderInput | SortOrder
    periodBackFlightNumberArrival?: SortOrderInput | SortOrder
    periodBackFlightNumberDeparture?: SortOrderInput | SortOrder
    periodBackFlightTimeArrival?: SortOrderInput | SortOrder
    periodBackFlightTimeDeparture?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ProductPoolCountOrderByAggregateInput
    _avg?: ProductPoolAvgOrderByAggregateInput
    _max?: ProductPoolMaxOrderByAggregateInput
    _min?: ProductPoolMinOrderByAggregateInput
    _sum?: ProductPoolSumOrderByAggregateInput
  }

  export type ProductPoolScalarWhereWithAggregatesInput = {
    AND?: ProductPoolScalarWhereWithAggregatesInput | ProductPoolScalarWhereWithAggregatesInput[]
    OR?: ProductPoolScalarWhereWithAggregatesInput[]
    NOT?: ProductPoolScalarWhereWithAggregatesInput | ProductPoolScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductPool"> | number
    supplierId?: IntWithAggregatesFilter<"ProductPool"> | number
    productRunningId?: IntWithAggregatesFilter<"ProductPool"> | number
    productId?: IntWithAggregatesFilter<"ProductPool"> | number
    periodId?: IntWithAggregatesFilter<"ProductPool"> | number
    productSubCategoryId?: IntWithAggregatesFilter<"ProductPool"> | number
    productTourCode?: StringWithAggregatesFilter<"ProductPool"> | string
    productTourwowCode?: StringWithAggregatesFilter<"ProductPool"> | string
    productTwUrlPath?: StringWithAggregatesFilter<"ProductPool"> | string
    productName?: StringWithAggregatesFilter<"ProductPool"> | string
    productStartAt?: DateTimeWithAggregatesFilter<"ProductPool"> | Date | string
    productPrice?: DecimalWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    productPriceCompare?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    productHasOneCountry?: IntWithAggregatesFilter<"ProductPool"> | number
    productMainCountryId?: IntWithAggregatesFilter<"ProductPool"> | number
    productMainCountryNameTh?: StringWithAggregatesFilter<"ProductPool"> | string
    productMainCountryNameEn?: StringWithAggregatesFilter<"ProductPool"> | string
    productCountries?: StringWithAggregatesFilter<"ProductPool"> | string
    productCountrySubUnits?: StringWithAggregatesFilter<"ProductPool"> | string
    productTags?: StringWithAggregatesFilter<"ProductPool"> | string
    productTagsJson?: StringWithAggregatesFilter<"ProductPool"> | string
    productDurationDay?: IntWithAggregatesFilter<"ProductPool"> | number
    productDurationNight?: IntWithAggregatesFilter<"ProductPool"> | number
    productDurationDayAndNight?: StringWithAggregatesFilter<"ProductPool"> | string
    productFreeDay?: IntNullableWithAggregatesFilter<"ProductPool"> | number | null
    productMealAmount?: IntWithAggregatesFilter<"ProductPool"> | number
    productHotelStar?: IntWithAggregatesFilter<"ProductPool"> | number
    productHasVisa?: IntWithAggregatesFilter<"ProductPool"> | number
    productVisaPrice?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    productHilightDescription?: StringWithAggregatesFilter<"ProductPool"> | string
    productSubCategoryLabel?: StringWithAggregatesFilter<"ProductPool"> | string
    productBannerUrl?: StringWithAggregatesFilter<"ProductPool"> | string
    productHasActivePeriods?: IntWithAggregatesFilter<"ProductPool"> | number
    productIsRecommended?: IntWithAggregatesFilter<"ProductPool"> | number
    periodGroupCode?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodStartAt?: DateTimeWithAggregatesFilter<"ProductPool"> | Date | string
    periodEndAt?: DateTimeWithAggregatesFilter<"ProductPool"> | Date | string
    periodIsChannelTwpOnlineBooking?: IntWithAggregatesFilter<"ProductPool"> | number
    periodPriceAdultDouble?: DecimalWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodDeposit?: DecimalNullableWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string | null
    periodCommission?: DecimalWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodCommissionCompany?: DecimalWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodCommissionSeller?: DecimalWithAggregatesFilter<"ProductPool"> | Decimal | DecimalJsLike | number | string
    periodQuantity?: IntWithAggregatesFilter<"ProductPool"> | number
    periodQuantityRemaining?: IntWithAggregatesFilter<"ProductPool"> | number
    periodSellStatusCode?: IntWithAggregatesFilter<"ProductPool"> | number
    periodIsActive?: IntWithAggregatesFilter<"ProductPool"> | number
    periodDeal?: IntWithAggregatesFilter<"ProductPool"> | number
    periodConfig?: IntWithAggregatesFilter<"ProductPool"> | number
    periodInstallmentCount?: IntWithAggregatesFilter<"ProductPool"> | number
    periodTransportationCategoryId?: IntWithAggregatesFilter<"ProductPool"> | number
    periodTransportationCategoryName?: StringWithAggregatesFilter<"ProductPool"> | string
    periodGoTransportationId?: IntWithAggregatesFilter<"ProductPool"> | number
    periodGoTransportationNameEn?: StringWithAggregatesFilter<"ProductPool"> | string
    periodGoTransportationCode?: StringWithAggregatesFilter<"ProductPool"> | string
    periodGoAirportArrival?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodGoAirportDeparture?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodGoFlightNumberArrival?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodGoFlightNumberDeparture?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodGoFlightTimeArrival?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodGoFlightTimeDeparture?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodBackTransportationId?: IntWithAggregatesFilter<"ProductPool"> | number
    periodBackTransportationNameEn?: StringWithAggregatesFilter<"ProductPool"> | string
    periodBackTransportationCode?: StringWithAggregatesFilter<"ProductPool"> | string
    periodBackAirportArrival?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodBackAirportDeparture?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodBackFlightNumberArrival?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodBackFlightNumberDeparture?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodBackFlightTimeArrival?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    periodBackFlightTimeDeparture?: StringNullableWithAggregatesFilter<"ProductPool"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ProductPool"> | Date | string
  }

  export type AgencyBlogWhereInput = {
    AND?: AgencyBlogWhereInput | AgencyBlogWhereInput[]
    OR?: AgencyBlogWhereInput[]
    NOT?: AgencyBlogWhereInput | AgencyBlogWhereInput[]
    id?: IntFilter<"AgencyBlog"> | number
    agencyId?: IntFilter<"AgencyBlog"> | number
    title?: StringFilter<"AgencyBlog"> | string
    tags?: StringFilter<"AgencyBlog"> | string
    createdAt?: DateTimeFilter<"AgencyBlog"> | Date | string
    createdByAgencyMemberId?: IntFilter<"AgencyBlog"> | number
    updatedAt?: DateTimeFilter<"AgencyBlog"> | Date | string
    updatedByAgencyMemberId?: IntFilter<"AgencyBlog"> | number
    deletedAt?: DateTimeNullableFilter<"AgencyBlog"> | Date | string | null
    deletedByAgencyMemberId?: IntNullableFilter<"AgencyBlog"> | number | null
  }

  export type AgencyBlogOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    title?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedByAgencyMemberId?: SortOrderInput | SortOrder
  }

  export type AgencyBlogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AgencyBlogWhereInput | AgencyBlogWhereInput[]
    OR?: AgencyBlogWhereInput[]
    NOT?: AgencyBlogWhereInput | AgencyBlogWhereInput[]
    agencyId?: IntFilter<"AgencyBlog"> | number
    title?: StringFilter<"AgencyBlog"> | string
    tags?: StringFilter<"AgencyBlog"> | string
    createdAt?: DateTimeFilter<"AgencyBlog"> | Date | string
    createdByAgencyMemberId?: IntFilter<"AgencyBlog"> | number
    updatedAt?: DateTimeFilter<"AgencyBlog"> | Date | string
    updatedByAgencyMemberId?: IntFilter<"AgencyBlog"> | number
    deletedAt?: DateTimeNullableFilter<"AgencyBlog"> | Date | string | null
    deletedByAgencyMemberId?: IntNullableFilter<"AgencyBlog"> | number | null
  }, "id">

  export type AgencyBlogOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    title?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedByAgencyMemberId?: SortOrderInput | SortOrder
    _count?: AgencyBlogCountOrderByAggregateInput
    _avg?: AgencyBlogAvgOrderByAggregateInput
    _max?: AgencyBlogMaxOrderByAggregateInput
    _min?: AgencyBlogMinOrderByAggregateInput
    _sum?: AgencyBlogSumOrderByAggregateInput
  }

  export type AgencyBlogScalarWhereWithAggregatesInput = {
    AND?: AgencyBlogScalarWhereWithAggregatesInput | AgencyBlogScalarWhereWithAggregatesInput[]
    OR?: AgencyBlogScalarWhereWithAggregatesInput[]
    NOT?: AgencyBlogScalarWhereWithAggregatesInput | AgencyBlogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AgencyBlog"> | number
    agencyId?: IntWithAggregatesFilter<"AgencyBlog"> | number
    title?: StringWithAggregatesFilter<"AgencyBlog"> | string
    tags?: StringWithAggregatesFilter<"AgencyBlog"> | string
    createdAt?: DateTimeWithAggregatesFilter<"AgencyBlog"> | Date | string
    createdByAgencyMemberId?: IntWithAggregatesFilter<"AgencyBlog"> | number
    updatedAt?: DateTimeWithAggregatesFilter<"AgencyBlog"> | Date | string
    updatedByAgencyMemberId?: IntWithAggregatesFilter<"AgencyBlog"> | number
    deletedAt?: DateTimeNullableWithAggregatesFilter<"AgencyBlog"> | Date | string | null
    deletedByAgencyMemberId?: IntNullableWithAggregatesFilter<"AgencyBlog"> | number | null
  }

  export type SeoArticleWhereInput = {
    AND?: SeoArticleWhereInput | SeoArticleWhereInput[]
    OR?: SeoArticleWhereInput[]
    NOT?: SeoArticleWhereInput | SeoArticleWhereInput[]
    id?: IntFilter<"SeoArticle"> | number
    agencyId?: IntFilter<"SeoArticle"> | number
    parentArticleId?: IntNullableFilter<"SeoArticle"> | number | null
    isChildOfHomePage?: IntFilter<"SeoArticle"> | number
    isActive?: IntFilter<"SeoArticle"> | number
    seoArticleTypeId?: IntFilter<"SeoArticle"> | number
    seoTargetPageTypeId?: IntNullableFilter<"SeoArticle"> | number | null
    seoSpecialPageId?: IntNullableFilter<"SeoArticle"> | number | null
    countryId?: IntNullableFilter<"SeoArticle"> | number | null
    provinceId?: IntNullableFilter<"SeoArticle"> | number | null
    countrySubUnitId?: IntNullableFilter<"SeoArticle"> | number | null
    proCategorySubProductId?: IntNullableFilter<"SeoArticle"> | number | null
    code?: StringFilter<"SeoArticle"> | string
    name?: StringFilter<"SeoArticle"> | string
    urlPath?: StringFilter<"SeoArticle"> | string
    trimmedUrlPath?: StringFilter<"SeoArticle"> | string
    realUrlPath?: StringFilter<"SeoArticle"> | string
    metaTitle?: StringNullableFilter<"SeoArticle"> | string | null
    metaDescription?: StringNullableFilter<"SeoArticle"> | string | null
    primaryKeyword?: StringNullableFilter<"SeoArticle"> | string | null
    secondaryKeyword?: StringNullableFilter<"SeoArticle"> | string | null
    relatedKeyword?: StringNullableFilter<"SeoArticle"> | string | null
    note?: StringNullableFilter<"SeoArticle"> | string | null
    desktopCoverImageFileName?: StringNullableFilter<"SeoArticle"> | string | null
    desktopCoverImageFileSize?: IntNullableFilter<"SeoArticle"> | number | null
    desktopCoverImageContentType?: StringNullableFilter<"SeoArticle"> | string | null
    desktopCoverImageUpdatedAt?: DateTimeNullableFilter<"SeoArticle"> | Date | string | null
    mobileCoverImageFileName?: StringNullableFilter<"SeoArticle"> | string | null
    mobileCoverImageFileSize?: IntNullableFilter<"SeoArticle"> | number | null
    mobileCoverImageContentType?: StringNullableFilter<"SeoArticle"> | string | null
    mobileCoverImageUpdatedAt?: DateTimeNullableFilter<"SeoArticle"> | Date | string | null
    coverImageAltText?: StringNullableFilter<"SeoArticle"> | string | null
    content?: StringNullableFilter<"SeoArticle"> | string | null
    hasContent?: IntFilter<"SeoArticle"> | number
    tags?: StringNullableFilter<"SeoArticle"> | string | null
    createdAt?: DateTimeFilter<"SeoArticle"> | Date | string
    createdByAgencyMemberId?: IntFilter<"SeoArticle"> | number
    updatedAt?: DateTimeFilter<"SeoArticle"> | Date | string
    updatedByAgencyMemberId?: IntFilter<"SeoArticle"> | number
  }

  export type SeoArticleOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    parentArticleId?: SortOrderInput | SortOrder
    isChildOfHomePage?: SortOrder
    isActive?: SortOrder
    seoArticleTypeId?: SortOrder
    seoTargetPageTypeId?: SortOrderInput | SortOrder
    seoSpecialPageId?: SortOrderInput | SortOrder
    countryId?: SortOrderInput | SortOrder
    provinceId?: SortOrderInput | SortOrder
    countrySubUnitId?: SortOrderInput | SortOrder
    proCategorySubProductId?: SortOrderInput | SortOrder
    code?: SortOrder
    name?: SortOrder
    urlPath?: SortOrder
    trimmedUrlPath?: SortOrder
    realUrlPath?: SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    primaryKeyword?: SortOrderInput | SortOrder
    secondaryKeyword?: SortOrderInput | SortOrder
    relatedKeyword?: SortOrderInput | SortOrder
    note?: SortOrderInput | SortOrder
    desktopCoverImageFileName?: SortOrderInput | SortOrder
    desktopCoverImageFileSize?: SortOrderInput | SortOrder
    desktopCoverImageContentType?: SortOrderInput | SortOrder
    desktopCoverImageUpdatedAt?: SortOrderInput | SortOrder
    mobileCoverImageFileName?: SortOrderInput | SortOrder
    mobileCoverImageFileSize?: SortOrderInput | SortOrder
    mobileCoverImageContentType?: SortOrderInput | SortOrder
    mobileCoverImageUpdatedAt?: SortOrderInput | SortOrder
    coverImageAltText?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    hasContent?: SortOrder
    tags?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
  }

  export type SeoArticleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SeoArticleWhereInput | SeoArticleWhereInput[]
    OR?: SeoArticleWhereInput[]
    NOT?: SeoArticleWhereInput | SeoArticleWhereInput[]
    agencyId?: IntFilter<"SeoArticle"> | number
    parentArticleId?: IntNullableFilter<"SeoArticle"> | number | null
    isChildOfHomePage?: IntFilter<"SeoArticle"> | number
    isActive?: IntFilter<"SeoArticle"> | number
    seoArticleTypeId?: IntFilter<"SeoArticle"> | number
    seoTargetPageTypeId?: IntNullableFilter<"SeoArticle"> | number | null
    seoSpecialPageId?: IntNullableFilter<"SeoArticle"> | number | null
    countryId?: IntNullableFilter<"SeoArticle"> | number | null
    provinceId?: IntNullableFilter<"SeoArticle"> | number | null
    countrySubUnitId?: IntNullableFilter<"SeoArticle"> | number | null
    proCategorySubProductId?: IntNullableFilter<"SeoArticle"> | number | null
    code?: StringFilter<"SeoArticle"> | string
    name?: StringFilter<"SeoArticle"> | string
    urlPath?: StringFilter<"SeoArticle"> | string
    trimmedUrlPath?: StringFilter<"SeoArticle"> | string
    realUrlPath?: StringFilter<"SeoArticle"> | string
    metaTitle?: StringNullableFilter<"SeoArticle"> | string | null
    metaDescription?: StringNullableFilter<"SeoArticle"> | string | null
    primaryKeyword?: StringNullableFilter<"SeoArticle"> | string | null
    secondaryKeyword?: StringNullableFilter<"SeoArticle"> | string | null
    relatedKeyword?: StringNullableFilter<"SeoArticle"> | string | null
    note?: StringNullableFilter<"SeoArticle"> | string | null
    desktopCoverImageFileName?: StringNullableFilter<"SeoArticle"> | string | null
    desktopCoverImageFileSize?: IntNullableFilter<"SeoArticle"> | number | null
    desktopCoverImageContentType?: StringNullableFilter<"SeoArticle"> | string | null
    desktopCoverImageUpdatedAt?: DateTimeNullableFilter<"SeoArticle"> | Date | string | null
    mobileCoverImageFileName?: StringNullableFilter<"SeoArticle"> | string | null
    mobileCoverImageFileSize?: IntNullableFilter<"SeoArticle"> | number | null
    mobileCoverImageContentType?: StringNullableFilter<"SeoArticle"> | string | null
    mobileCoverImageUpdatedAt?: DateTimeNullableFilter<"SeoArticle"> | Date | string | null
    coverImageAltText?: StringNullableFilter<"SeoArticle"> | string | null
    content?: StringNullableFilter<"SeoArticle"> | string | null
    hasContent?: IntFilter<"SeoArticle"> | number
    tags?: StringNullableFilter<"SeoArticle"> | string | null
    createdAt?: DateTimeFilter<"SeoArticle"> | Date | string
    createdByAgencyMemberId?: IntFilter<"SeoArticle"> | number
    updatedAt?: DateTimeFilter<"SeoArticle"> | Date | string
    updatedByAgencyMemberId?: IntFilter<"SeoArticle"> | number
  }, "id">

  export type SeoArticleOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    parentArticleId?: SortOrderInput | SortOrder
    isChildOfHomePage?: SortOrder
    isActive?: SortOrder
    seoArticleTypeId?: SortOrder
    seoTargetPageTypeId?: SortOrderInput | SortOrder
    seoSpecialPageId?: SortOrderInput | SortOrder
    countryId?: SortOrderInput | SortOrder
    provinceId?: SortOrderInput | SortOrder
    countrySubUnitId?: SortOrderInput | SortOrder
    proCategorySubProductId?: SortOrderInput | SortOrder
    code?: SortOrder
    name?: SortOrder
    urlPath?: SortOrder
    trimmedUrlPath?: SortOrder
    realUrlPath?: SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    primaryKeyword?: SortOrderInput | SortOrder
    secondaryKeyword?: SortOrderInput | SortOrder
    relatedKeyword?: SortOrderInput | SortOrder
    note?: SortOrderInput | SortOrder
    desktopCoverImageFileName?: SortOrderInput | SortOrder
    desktopCoverImageFileSize?: SortOrderInput | SortOrder
    desktopCoverImageContentType?: SortOrderInput | SortOrder
    desktopCoverImageUpdatedAt?: SortOrderInput | SortOrder
    mobileCoverImageFileName?: SortOrderInput | SortOrder
    mobileCoverImageFileSize?: SortOrderInput | SortOrder
    mobileCoverImageContentType?: SortOrderInput | SortOrder
    mobileCoverImageUpdatedAt?: SortOrderInput | SortOrder
    coverImageAltText?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    hasContent?: SortOrder
    tags?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    _count?: SeoArticleCountOrderByAggregateInput
    _avg?: SeoArticleAvgOrderByAggregateInput
    _max?: SeoArticleMaxOrderByAggregateInput
    _min?: SeoArticleMinOrderByAggregateInput
    _sum?: SeoArticleSumOrderByAggregateInput
  }

  export type SeoArticleScalarWhereWithAggregatesInput = {
    AND?: SeoArticleScalarWhereWithAggregatesInput | SeoArticleScalarWhereWithAggregatesInput[]
    OR?: SeoArticleScalarWhereWithAggregatesInput[]
    NOT?: SeoArticleScalarWhereWithAggregatesInput | SeoArticleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SeoArticle"> | number
    agencyId?: IntWithAggregatesFilter<"SeoArticle"> | number
    parentArticleId?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    isChildOfHomePage?: IntWithAggregatesFilter<"SeoArticle"> | number
    isActive?: IntWithAggregatesFilter<"SeoArticle"> | number
    seoArticleTypeId?: IntWithAggregatesFilter<"SeoArticle"> | number
    seoTargetPageTypeId?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    seoSpecialPageId?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    countryId?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    provinceId?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    countrySubUnitId?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    proCategorySubProductId?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    code?: StringWithAggregatesFilter<"SeoArticle"> | string
    name?: StringWithAggregatesFilter<"SeoArticle"> | string
    urlPath?: StringWithAggregatesFilter<"SeoArticle"> | string
    trimmedUrlPath?: StringWithAggregatesFilter<"SeoArticle"> | string
    realUrlPath?: StringWithAggregatesFilter<"SeoArticle"> | string
    metaTitle?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    metaDescription?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    primaryKeyword?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    secondaryKeyword?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    relatedKeyword?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    note?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    desktopCoverImageFileName?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    desktopCoverImageFileSize?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    desktopCoverImageContentType?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    desktopCoverImageUpdatedAt?: DateTimeNullableWithAggregatesFilter<"SeoArticle"> | Date | string | null
    mobileCoverImageFileName?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    mobileCoverImageFileSize?: IntNullableWithAggregatesFilter<"SeoArticle"> | number | null
    mobileCoverImageContentType?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    mobileCoverImageUpdatedAt?: DateTimeNullableWithAggregatesFilter<"SeoArticle"> | Date | string | null
    coverImageAltText?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    content?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    hasContent?: IntWithAggregatesFilter<"SeoArticle"> | number
    tags?: StringNullableWithAggregatesFilter<"SeoArticle"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SeoArticle"> | Date | string
    createdByAgencyMemberId?: IntWithAggregatesFilter<"SeoArticle"> | number
    updatedAt?: DateTimeWithAggregatesFilter<"SeoArticle"> | Date | string
    updatedByAgencyMemberId?: IntWithAggregatesFilter<"SeoArticle"> | number
  }

  export type TwPageWhereInput = {
    AND?: TwPageWhereInput | TwPageWhereInput[]
    OR?: TwPageWhereInput[]
    NOT?: TwPageWhereInput | TwPageWhereInput[]
    id?: IntFilter<"TwPage"> | number
    agencyId?: IntNullableFilter<"TwPage"> | number | null
    urlPath?: StringFilter<"TwPage"> | string
    redirectToUrlPath?: StringNullableFilter<"TwPage"> | string | null
    twPageTypeId?: IntFilter<"TwPage"> | number
    twPageArgument?: StringFilter<"TwPage"> | string
    lastmod?: StringFilter<"TwPage"> | string
    priority?: FloatFilter<"TwPage"> | number
    visitedCount?: IntFilter<"TwPage"> | number
    isActive?: IntFilter<"TwPage"> | number
    createdAt?: DateTimeFilter<"TwPage"> | Date | string
    updatedAt?: DateTimeFilter<"TwPage"> | Date | string
    visitedAt?: DateTimeNullableFilter<"TwPage"> | Date | string | null
  }

  export type TwPageOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    urlPath?: SortOrder
    redirectToUrlPath?: SortOrderInput | SortOrder
    twPageTypeId?: SortOrder
    twPageArgument?: SortOrder
    lastmod?: SortOrder
    priority?: SortOrder
    visitedCount?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitedAt?: SortOrderInput | SortOrder
  }

  export type TwPageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TwPageWhereInput | TwPageWhereInput[]
    OR?: TwPageWhereInput[]
    NOT?: TwPageWhereInput | TwPageWhereInput[]
    agencyId?: IntNullableFilter<"TwPage"> | number | null
    urlPath?: StringFilter<"TwPage"> | string
    redirectToUrlPath?: StringNullableFilter<"TwPage"> | string | null
    twPageTypeId?: IntFilter<"TwPage"> | number
    twPageArgument?: StringFilter<"TwPage"> | string
    lastmod?: StringFilter<"TwPage"> | string
    priority?: FloatFilter<"TwPage"> | number
    visitedCount?: IntFilter<"TwPage"> | number
    isActive?: IntFilter<"TwPage"> | number
    createdAt?: DateTimeFilter<"TwPage"> | Date | string
    updatedAt?: DateTimeFilter<"TwPage"> | Date | string
    visitedAt?: DateTimeNullableFilter<"TwPage"> | Date | string | null
  }, "id">

  export type TwPageOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    urlPath?: SortOrder
    redirectToUrlPath?: SortOrderInput | SortOrder
    twPageTypeId?: SortOrder
    twPageArgument?: SortOrder
    lastmod?: SortOrder
    priority?: SortOrder
    visitedCount?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitedAt?: SortOrderInput | SortOrder
    _count?: TwPageCountOrderByAggregateInput
    _avg?: TwPageAvgOrderByAggregateInput
    _max?: TwPageMaxOrderByAggregateInput
    _min?: TwPageMinOrderByAggregateInput
    _sum?: TwPageSumOrderByAggregateInput
  }

  export type TwPageScalarWhereWithAggregatesInput = {
    AND?: TwPageScalarWhereWithAggregatesInput | TwPageScalarWhereWithAggregatesInput[]
    OR?: TwPageScalarWhereWithAggregatesInput[]
    NOT?: TwPageScalarWhereWithAggregatesInput | TwPageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TwPage"> | number
    agencyId?: IntNullableWithAggregatesFilter<"TwPage"> | number | null
    urlPath?: StringWithAggregatesFilter<"TwPage"> | string
    redirectToUrlPath?: StringNullableWithAggregatesFilter<"TwPage"> | string | null
    twPageTypeId?: IntWithAggregatesFilter<"TwPage"> | number
    twPageArgument?: StringWithAggregatesFilter<"TwPage"> | string
    lastmod?: StringWithAggregatesFilter<"TwPage"> | string
    priority?: FloatWithAggregatesFilter<"TwPage"> | number
    visitedCount?: IntWithAggregatesFilter<"TwPage"> | number
    isActive?: IntWithAggregatesFilter<"TwPage"> | number
    createdAt?: DateTimeWithAggregatesFilter<"TwPage"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TwPage"> | Date | string
    visitedAt?: DateTimeNullableWithAggregatesFilter<"TwPage"> | Date | string | null
  }

  export type TwPageTypeWhereInput = {
    AND?: TwPageTypeWhereInput | TwPageTypeWhereInput[]
    OR?: TwPageTypeWhereInput[]
    NOT?: TwPageTypeWhereInput | TwPageTypeWhereInput[]
    id?: IntFilter<"TwPageType"> | number
    slug?: StringFilter<"TwPageType"> | string
    priority?: FloatFilter<"TwPageType"> | number
  }

  export type TwPageTypeOrderByWithRelationInput = {
    id?: SortOrder
    slug?: SortOrder
    priority?: SortOrder
  }

  export type TwPageTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TwPageTypeWhereInput | TwPageTypeWhereInput[]
    OR?: TwPageTypeWhereInput[]
    NOT?: TwPageTypeWhereInput | TwPageTypeWhereInput[]
    slug?: StringFilter<"TwPageType"> | string
    priority?: FloatFilter<"TwPageType"> | number
  }, "id">

  export type TwPageTypeOrderByWithAggregationInput = {
    id?: SortOrder
    slug?: SortOrder
    priority?: SortOrder
    _count?: TwPageTypeCountOrderByAggregateInput
    _avg?: TwPageTypeAvgOrderByAggregateInput
    _max?: TwPageTypeMaxOrderByAggregateInput
    _min?: TwPageTypeMinOrderByAggregateInput
    _sum?: TwPageTypeSumOrderByAggregateInput
  }

  export type TwPageTypeScalarWhereWithAggregatesInput = {
    AND?: TwPageTypeScalarWhereWithAggregatesInput | TwPageTypeScalarWhereWithAggregatesInput[]
    OR?: TwPageTypeScalarWhereWithAggregatesInput[]
    NOT?: TwPageTypeScalarWhereWithAggregatesInput | TwPageTypeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TwPageType"> | number
    slug?: StringWithAggregatesFilter<"TwPageType"> | string
    priority?: FloatWithAggregatesFilter<"TwPageType"> | number
  }

  export type SeoArticleTypeWhereInput = {
    AND?: SeoArticleTypeWhereInput | SeoArticleTypeWhereInput[]
    OR?: SeoArticleTypeWhereInput[]
    NOT?: SeoArticleTypeWhereInput | SeoArticleTypeWhereInput[]
    id?: IntFilter<"SeoArticleType"> | number
    name?: StringFilter<"SeoArticleType"> | string
    slug?: StringFilter<"SeoArticleType"> | string
  }

  export type SeoArticleTypeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
  }

  export type SeoArticleTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SeoArticleTypeWhereInput | SeoArticleTypeWhereInput[]
    OR?: SeoArticleTypeWhereInput[]
    NOT?: SeoArticleTypeWhereInput | SeoArticleTypeWhereInput[]
    name?: StringFilter<"SeoArticleType"> | string
    slug?: StringFilter<"SeoArticleType"> | string
  }, "id">

  export type SeoArticleTypeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    _count?: SeoArticleTypeCountOrderByAggregateInput
    _avg?: SeoArticleTypeAvgOrderByAggregateInput
    _max?: SeoArticleTypeMaxOrderByAggregateInput
    _min?: SeoArticleTypeMinOrderByAggregateInput
    _sum?: SeoArticleTypeSumOrderByAggregateInput
  }

  export type SeoArticleTypeScalarWhereWithAggregatesInput = {
    AND?: SeoArticleTypeScalarWhereWithAggregatesInput | SeoArticleTypeScalarWhereWithAggregatesInput[]
    OR?: SeoArticleTypeScalarWhereWithAggregatesInput[]
    NOT?: SeoArticleTypeScalarWhereWithAggregatesInput | SeoArticleTypeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SeoArticleType"> | number
    name?: StringWithAggregatesFilter<"SeoArticleType"> | string
    slug?: StringWithAggregatesFilter<"SeoArticleType"> | string
  }

  export type BlogDescriptionWhereInput = {
    AND?: BlogDescriptionWhereInput | BlogDescriptionWhereInput[]
    OR?: BlogDescriptionWhereInput[]
    NOT?: BlogDescriptionWhereInput | BlogDescriptionWhereInput[]
    id?: IntFilter<"BlogDescription"> | number
    agcyBlogsId?: IntFilter<"BlogDescription"> | number
    agcyGalleriesId?: IntNullableFilter<"BlogDescription"> | number | null
    typeSlug?: StringFilter<"BlogDescription"> | string
    ordinal?: IntFilter<"BlogDescription"> | number
    description?: StringNullableFilter<"BlogDescription"> | string | null
    imageDescription?: StringNullableFilter<"BlogDescription"> | string | null
    createdAt?: DateTimeFilter<"BlogDescription"> | Date | string
    createdByAgencyMemberId?: IntFilter<"BlogDescription"> | number
    updatedAt?: DateTimeFilter<"BlogDescription"> | Date | string
    updatedByAgencyMemberId?: IntFilter<"BlogDescription"> | number
    deletedAt?: DateTimeNullableFilter<"BlogDescription"> | Date | string | null
    deletedByAgencyMemberId?: IntNullableFilter<"BlogDescription"> | number | null
  }

  export type BlogDescriptionOrderByWithRelationInput = {
    id?: SortOrder
    agcyBlogsId?: SortOrder
    agcyGalleriesId?: SortOrderInput | SortOrder
    typeSlug?: SortOrder
    ordinal?: SortOrder
    description?: SortOrderInput | SortOrder
    imageDescription?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedByAgencyMemberId?: SortOrderInput | SortOrder
  }

  export type BlogDescriptionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BlogDescriptionWhereInput | BlogDescriptionWhereInput[]
    OR?: BlogDescriptionWhereInput[]
    NOT?: BlogDescriptionWhereInput | BlogDescriptionWhereInput[]
    agcyBlogsId?: IntFilter<"BlogDescription"> | number
    agcyGalleriesId?: IntNullableFilter<"BlogDescription"> | number | null
    typeSlug?: StringFilter<"BlogDescription"> | string
    ordinal?: IntFilter<"BlogDescription"> | number
    description?: StringNullableFilter<"BlogDescription"> | string | null
    imageDescription?: StringNullableFilter<"BlogDescription"> | string | null
    createdAt?: DateTimeFilter<"BlogDescription"> | Date | string
    createdByAgencyMemberId?: IntFilter<"BlogDescription"> | number
    updatedAt?: DateTimeFilter<"BlogDescription"> | Date | string
    updatedByAgencyMemberId?: IntFilter<"BlogDescription"> | number
    deletedAt?: DateTimeNullableFilter<"BlogDescription"> | Date | string | null
    deletedByAgencyMemberId?: IntNullableFilter<"BlogDescription"> | number | null
  }, "id">

  export type BlogDescriptionOrderByWithAggregationInput = {
    id?: SortOrder
    agcyBlogsId?: SortOrder
    agcyGalleriesId?: SortOrderInput | SortOrder
    typeSlug?: SortOrder
    ordinal?: SortOrder
    description?: SortOrderInput | SortOrder
    imageDescription?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedByAgencyMemberId?: SortOrderInput | SortOrder
    _count?: BlogDescriptionCountOrderByAggregateInput
    _avg?: BlogDescriptionAvgOrderByAggregateInput
    _max?: BlogDescriptionMaxOrderByAggregateInput
    _min?: BlogDescriptionMinOrderByAggregateInput
    _sum?: BlogDescriptionSumOrderByAggregateInput
  }

  export type BlogDescriptionScalarWhereWithAggregatesInput = {
    AND?: BlogDescriptionScalarWhereWithAggregatesInput | BlogDescriptionScalarWhereWithAggregatesInput[]
    OR?: BlogDescriptionScalarWhereWithAggregatesInput[]
    NOT?: BlogDescriptionScalarWhereWithAggregatesInput | BlogDescriptionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"BlogDescription"> | number
    agcyBlogsId?: IntWithAggregatesFilter<"BlogDescription"> | number
    agcyGalleriesId?: IntNullableWithAggregatesFilter<"BlogDescription"> | number | null
    typeSlug?: StringWithAggregatesFilter<"BlogDescription"> | string
    ordinal?: IntWithAggregatesFilter<"BlogDescription"> | number
    description?: StringNullableWithAggregatesFilter<"BlogDescription"> | string | null
    imageDescription?: StringNullableWithAggregatesFilter<"BlogDescription"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"BlogDescription"> | Date | string
    createdByAgencyMemberId?: IntWithAggregatesFilter<"BlogDescription"> | number
    updatedAt?: DateTimeWithAggregatesFilter<"BlogDescription"> | Date | string
    updatedByAgencyMemberId?: IntWithAggregatesFilter<"BlogDescription"> | number
    deletedAt?: DateTimeNullableWithAggregatesFilter<"BlogDescription"> | Date | string | null
    deletedByAgencyMemberId?: IntNullableWithAggregatesFilter<"BlogDescription"> | number | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    passwordHash?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    orders?: TourOrderListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    orders?: TourOrderOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    passwordHash?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    orders?: TourOrderListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    passwordHash?: StringWithAggregatesFilter<"User"> | string
    role?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type TourOrderWhereInput = {
    AND?: TourOrderWhereInput | TourOrderWhereInput[]
    OR?: TourOrderWhereInput[]
    NOT?: TourOrderWhereInput | TourOrderWhereInput[]
    id?: IntFilter<"TourOrder"> | number
    orderReference?: StringFilter<"TourOrder"> | string
    productTourwowCode?: StringFilter<"TourOrder"> | string
    productTourCode?: StringFilter<"TourOrder"> | string
    periodStartAt?: DateTimeFilter<"TourOrder"> | Date | string
    periodEndAt?: DateTimeFilter<"TourOrder"> | Date | string
    productId?: IntFilter<"TourOrder"> | number
    periodId?: IntFilter<"TourOrder"> | number
    supplierId?: IntFilter<"TourOrder"> | number
    tourName?: StringFilter<"TourOrder"> | string
    tourCountry?: StringFilter<"TourOrder"> | string
    tourDurationDays?: IntFilter<"TourOrder"> | number
    tourDurationNights?: IntFilter<"TourOrder"> | number
    basePrice?: DecimalFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string
    depositAmount?: DecimalNullableFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: DecimalNullableFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringFilter<"TourOrder"> | string
    adultCount?: IntFilter<"TourOrder"> | number
    childWithBedCount?: IntFilter<"TourOrder"> | number
    childNoBedCount?: IntFilter<"TourOrder"> | number
    infantCount?: IntFilter<"TourOrder"> | number
    singleRoomCount?: IntFilter<"TourOrder"> | number
    extraRoomCount?: IntFilter<"TourOrder"> | number
    bookerTitle?: StringNullableFilter<"TourOrder"> | string | null
    bookerFirstNameTh?: StringFilter<"TourOrder"> | string
    bookerLastNameTh?: StringFilter<"TourOrder"> | string
    bookerFirstNameEn?: StringFilter<"TourOrder"> | string
    bookerLastNameEn?: StringFilter<"TourOrder"> | string
    bookerPhone?: StringFilter<"TourOrder"> | string
    bookerEmail?: StringFilter<"TourOrder"> | string
    bookerDateOfBirth?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    bookerAddress?: StringNullableFilter<"TourOrder"> | string | null
    bookerProvince?: StringNullableFilter<"TourOrder"> | string | null
    bookerPostalCode?: StringNullableFilter<"TourOrder"> | string | null
    specialRequests?: StringNullableFilter<"TourOrder"> | string | null
    dietaryRequirements?: StringNullableFilter<"TourOrder"> | string | null
    medicalConditions?: StringNullableFilter<"TourOrder"> | string | null
    orderStatus?: StringFilter<"TourOrder"> | string
    paymentStatus?: StringFilter<"TourOrder"> | string
    paymentDeadline?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    documentDeadline?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    createdAt?: DateTimeFilter<"TourOrder"> | Date | string
    updatedAt?: DateTimeFilter<"TourOrder"> | Date | string
    confirmedAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    userId?: IntNullableFilter<"TourOrder"> | number | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    travelers?: OrderTravelerListRelationFilter
    payments?: OrderPaymentListRelationFilter
    documents?: OrderDocumentListRelationFilter
    notes?: OrderNoteListRelationFilter
  }

  export type TourOrderOrderByWithRelationInput = {
    id?: SortOrder
    orderReference?: SortOrder
    productTourwowCode?: SortOrder
    productTourCode?: SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    supplierId?: SortOrder
    tourName?: SortOrder
    tourCountry?: SortOrder
    tourDurationDays?: SortOrder
    tourDurationNights?: SortOrder
    basePrice?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrderInput | SortOrder
    remainingAmount?: SortOrderInput | SortOrder
    currency?: SortOrder
    adultCount?: SortOrder
    childWithBedCount?: SortOrder
    childNoBedCount?: SortOrder
    infantCount?: SortOrder
    singleRoomCount?: SortOrder
    extraRoomCount?: SortOrder
    bookerTitle?: SortOrderInput | SortOrder
    bookerFirstNameTh?: SortOrder
    bookerLastNameTh?: SortOrder
    bookerFirstNameEn?: SortOrder
    bookerLastNameEn?: SortOrder
    bookerPhone?: SortOrder
    bookerEmail?: SortOrder
    bookerDateOfBirth?: SortOrderInput | SortOrder
    bookerAddress?: SortOrderInput | SortOrder
    bookerProvince?: SortOrderInput | SortOrder
    bookerPostalCode?: SortOrderInput | SortOrder
    specialRequests?: SortOrderInput | SortOrder
    dietaryRequirements?: SortOrderInput | SortOrder
    medicalConditions?: SortOrderInput | SortOrder
    orderStatus?: SortOrder
    paymentStatus?: SortOrder
    paymentDeadline?: SortOrderInput | SortOrder
    documentDeadline?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    confirmedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    travelers?: OrderTravelerOrderByRelationAggregateInput
    payments?: OrderPaymentOrderByRelationAggregateInput
    documents?: OrderDocumentOrderByRelationAggregateInput
    notes?: OrderNoteOrderByRelationAggregateInput
  }

  export type TourOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    orderReference?: string
    AND?: TourOrderWhereInput | TourOrderWhereInput[]
    OR?: TourOrderWhereInput[]
    NOT?: TourOrderWhereInput | TourOrderWhereInput[]
    productTourwowCode?: StringFilter<"TourOrder"> | string
    productTourCode?: StringFilter<"TourOrder"> | string
    periodStartAt?: DateTimeFilter<"TourOrder"> | Date | string
    periodEndAt?: DateTimeFilter<"TourOrder"> | Date | string
    productId?: IntFilter<"TourOrder"> | number
    periodId?: IntFilter<"TourOrder"> | number
    supplierId?: IntFilter<"TourOrder"> | number
    tourName?: StringFilter<"TourOrder"> | string
    tourCountry?: StringFilter<"TourOrder"> | string
    tourDurationDays?: IntFilter<"TourOrder"> | number
    tourDurationNights?: IntFilter<"TourOrder"> | number
    basePrice?: DecimalFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string
    depositAmount?: DecimalNullableFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: DecimalNullableFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringFilter<"TourOrder"> | string
    adultCount?: IntFilter<"TourOrder"> | number
    childWithBedCount?: IntFilter<"TourOrder"> | number
    childNoBedCount?: IntFilter<"TourOrder"> | number
    infantCount?: IntFilter<"TourOrder"> | number
    singleRoomCount?: IntFilter<"TourOrder"> | number
    extraRoomCount?: IntFilter<"TourOrder"> | number
    bookerTitle?: StringNullableFilter<"TourOrder"> | string | null
    bookerFirstNameTh?: StringFilter<"TourOrder"> | string
    bookerLastNameTh?: StringFilter<"TourOrder"> | string
    bookerFirstNameEn?: StringFilter<"TourOrder"> | string
    bookerLastNameEn?: StringFilter<"TourOrder"> | string
    bookerPhone?: StringFilter<"TourOrder"> | string
    bookerEmail?: StringFilter<"TourOrder"> | string
    bookerDateOfBirth?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    bookerAddress?: StringNullableFilter<"TourOrder"> | string | null
    bookerProvince?: StringNullableFilter<"TourOrder"> | string | null
    bookerPostalCode?: StringNullableFilter<"TourOrder"> | string | null
    specialRequests?: StringNullableFilter<"TourOrder"> | string | null
    dietaryRequirements?: StringNullableFilter<"TourOrder"> | string | null
    medicalConditions?: StringNullableFilter<"TourOrder"> | string | null
    orderStatus?: StringFilter<"TourOrder"> | string
    paymentStatus?: StringFilter<"TourOrder"> | string
    paymentDeadline?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    documentDeadline?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    createdAt?: DateTimeFilter<"TourOrder"> | Date | string
    updatedAt?: DateTimeFilter<"TourOrder"> | Date | string
    confirmedAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    userId?: IntNullableFilter<"TourOrder"> | number | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    travelers?: OrderTravelerListRelationFilter
    payments?: OrderPaymentListRelationFilter
    documents?: OrderDocumentListRelationFilter
    notes?: OrderNoteListRelationFilter
  }, "id" | "orderReference">

  export type TourOrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderReference?: SortOrder
    productTourwowCode?: SortOrder
    productTourCode?: SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    supplierId?: SortOrder
    tourName?: SortOrder
    tourCountry?: SortOrder
    tourDurationDays?: SortOrder
    tourDurationNights?: SortOrder
    basePrice?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrderInput | SortOrder
    remainingAmount?: SortOrderInput | SortOrder
    currency?: SortOrder
    adultCount?: SortOrder
    childWithBedCount?: SortOrder
    childNoBedCount?: SortOrder
    infantCount?: SortOrder
    singleRoomCount?: SortOrder
    extraRoomCount?: SortOrder
    bookerTitle?: SortOrderInput | SortOrder
    bookerFirstNameTh?: SortOrder
    bookerLastNameTh?: SortOrder
    bookerFirstNameEn?: SortOrder
    bookerLastNameEn?: SortOrder
    bookerPhone?: SortOrder
    bookerEmail?: SortOrder
    bookerDateOfBirth?: SortOrderInput | SortOrder
    bookerAddress?: SortOrderInput | SortOrder
    bookerProvince?: SortOrderInput | SortOrder
    bookerPostalCode?: SortOrderInput | SortOrder
    specialRequests?: SortOrderInput | SortOrder
    dietaryRequirements?: SortOrderInput | SortOrder
    medicalConditions?: SortOrderInput | SortOrder
    orderStatus?: SortOrder
    paymentStatus?: SortOrder
    paymentDeadline?: SortOrderInput | SortOrder
    documentDeadline?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    confirmedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    _count?: TourOrderCountOrderByAggregateInput
    _avg?: TourOrderAvgOrderByAggregateInput
    _max?: TourOrderMaxOrderByAggregateInput
    _min?: TourOrderMinOrderByAggregateInput
    _sum?: TourOrderSumOrderByAggregateInput
  }

  export type TourOrderScalarWhereWithAggregatesInput = {
    AND?: TourOrderScalarWhereWithAggregatesInput | TourOrderScalarWhereWithAggregatesInput[]
    OR?: TourOrderScalarWhereWithAggregatesInput[]
    NOT?: TourOrderScalarWhereWithAggregatesInput | TourOrderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TourOrder"> | number
    orderReference?: StringWithAggregatesFilter<"TourOrder"> | string
    productTourwowCode?: StringWithAggregatesFilter<"TourOrder"> | string
    productTourCode?: StringWithAggregatesFilter<"TourOrder"> | string
    periodStartAt?: DateTimeWithAggregatesFilter<"TourOrder"> | Date | string
    periodEndAt?: DateTimeWithAggregatesFilter<"TourOrder"> | Date | string
    productId?: IntWithAggregatesFilter<"TourOrder"> | number
    periodId?: IntWithAggregatesFilter<"TourOrder"> | number
    supplierId?: IntWithAggregatesFilter<"TourOrder"> | number
    tourName?: StringWithAggregatesFilter<"TourOrder"> | string
    tourCountry?: StringWithAggregatesFilter<"TourOrder"> | string
    tourDurationDays?: IntWithAggregatesFilter<"TourOrder"> | number
    tourDurationNights?: IntWithAggregatesFilter<"TourOrder"> | number
    basePrice?: DecimalWithAggregatesFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string
    depositAmount?: DecimalNullableWithAggregatesFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: DecimalNullableWithAggregatesFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringWithAggregatesFilter<"TourOrder"> | string
    adultCount?: IntWithAggregatesFilter<"TourOrder"> | number
    childWithBedCount?: IntWithAggregatesFilter<"TourOrder"> | number
    childNoBedCount?: IntWithAggregatesFilter<"TourOrder"> | number
    infantCount?: IntWithAggregatesFilter<"TourOrder"> | number
    singleRoomCount?: IntWithAggregatesFilter<"TourOrder"> | number
    extraRoomCount?: IntWithAggregatesFilter<"TourOrder"> | number
    bookerTitle?: StringNullableWithAggregatesFilter<"TourOrder"> | string | null
    bookerFirstNameTh?: StringWithAggregatesFilter<"TourOrder"> | string
    bookerLastNameTh?: StringWithAggregatesFilter<"TourOrder"> | string
    bookerFirstNameEn?: StringWithAggregatesFilter<"TourOrder"> | string
    bookerLastNameEn?: StringWithAggregatesFilter<"TourOrder"> | string
    bookerPhone?: StringWithAggregatesFilter<"TourOrder"> | string
    bookerEmail?: StringWithAggregatesFilter<"TourOrder"> | string
    bookerDateOfBirth?: DateTimeNullableWithAggregatesFilter<"TourOrder"> | Date | string | null
    bookerAddress?: StringNullableWithAggregatesFilter<"TourOrder"> | string | null
    bookerProvince?: StringNullableWithAggregatesFilter<"TourOrder"> | string | null
    bookerPostalCode?: StringNullableWithAggregatesFilter<"TourOrder"> | string | null
    specialRequests?: StringNullableWithAggregatesFilter<"TourOrder"> | string | null
    dietaryRequirements?: StringNullableWithAggregatesFilter<"TourOrder"> | string | null
    medicalConditions?: StringNullableWithAggregatesFilter<"TourOrder"> | string | null
    orderStatus?: StringWithAggregatesFilter<"TourOrder"> | string
    paymentStatus?: StringWithAggregatesFilter<"TourOrder"> | string
    paymentDeadline?: DateTimeNullableWithAggregatesFilter<"TourOrder"> | Date | string | null
    documentDeadline?: DateTimeNullableWithAggregatesFilter<"TourOrder"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TourOrder"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TourOrder"> | Date | string
    confirmedAt?: DateTimeNullableWithAggregatesFilter<"TourOrder"> | Date | string | null
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"TourOrder"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"TourOrder"> | Date | string | null
    userId?: IntNullableWithAggregatesFilter<"TourOrder"> | number | null
  }

  export type OrderTravelerWhereInput = {
    AND?: OrderTravelerWhereInput | OrderTravelerWhereInput[]
    OR?: OrderTravelerWhereInput[]
    NOT?: OrderTravelerWhereInput | OrderTravelerWhereInput[]
    id?: IntFilter<"OrderTraveler"> | number
    orderId?: IntFilter<"OrderTraveler"> | number
    travelerType?: StringFilter<"OrderTraveler"> | string
    title?: StringNullableFilter<"OrderTraveler"> | string | null
    firstNameTh?: StringFilter<"OrderTraveler"> | string
    lastNameTh?: StringFilter<"OrderTraveler"> | string
    firstNameEn?: StringFilter<"OrderTraveler"> | string
    lastNameEn?: StringFilter<"OrderTraveler"> | string
    dateOfBirth?: DateTimeNullableFilter<"OrderTraveler"> | Date | string | null
    gender?: StringNullableFilter<"OrderTraveler"> | string | null
    phone?: StringNullableFilter<"OrderTraveler"> | string | null
    email?: StringNullableFilter<"OrderTraveler"> | string | null
    passportNumber?: StringNullableFilter<"OrderTraveler"> | string | null
    passportExpiry?: DateTimeNullableFilter<"OrderTraveler"> | Date | string | null
    passportNationality?: StringNullableFilter<"OrderTraveler"> | string | null
    passportIssueCountry?: StringNullableFilter<"OrderTraveler"> | string | null
    seatPreference?: StringNullableFilter<"OrderTraveler"> | string | null
    mealPreference?: StringNullableFilter<"OrderTraveler"> | string | null
    specialNeeds?: StringNullableFilter<"OrderTraveler"> | string | null
    price?: DecimalNullableFilter<"OrderTraveler"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"OrderTraveler"> | Date | string
    updatedAt?: DateTimeFilter<"OrderTraveler"> | Date | string
    order?: XOR<TourOrderScalarRelationFilter, TourOrderWhereInput>
  }

  export type OrderTravelerOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    travelerType?: SortOrder
    title?: SortOrderInput | SortOrder
    firstNameTh?: SortOrder
    lastNameTh?: SortOrder
    firstNameEn?: SortOrder
    lastNameEn?: SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    passportNumber?: SortOrderInput | SortOrder
    passportExpiry?: SortOrderInput | SortOrder
    passportNationality?: SortOrderInput | SortOrder
    passportIssueCountry?: SortOrderInput | SortOrder
    seatPreference?: SortOrderInput | SortOrder
    mealPreference?: SortOrderInput | SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: TourOrderOrderByWithRelationInput
  }

  export type OrderTravelerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderTravelerWhereInput | OrderTravelerWhereInput[]
    OR?: OrderTravelerWhereInput[]
    NOT?: OrderTravelerWhereInput | OrderTravelerWhereInput[]
    orderId?: IntFilter<"OrderTraveler"> | number
    travelerType?: StringFilter<"OrderTraveler"> | string
    title?: StringNullableFilter<"OrderTraveler"> | string | null
    firstNameTh?: StringFilter<"OrderTraveler"> | string
    lastNameTh?: StringFilter<"OrderTraveler"> | string
    firstNameEn?: StringFilter<"OrderTraveler"> | string
    lastNameEn?: StringFilter<"OrderTraveler"> | string
    dateOfBirth?: DateTimeNullableFilter<"OrderTraveler"> | Date | string | null
    gender?: StringNullableFilter<"OrderTraveler"> | string | null
    phone?: StringNullableFilter<"OrderTraveler"> | string | null
    email?: StringNullableFilter<"OrderTraveler"> | string | null
    passportNumber?: StringNullableFilter<"OrderTraveler"> | string | null
    passportExpiry?: DateTimeNullableFilter<"OrderTraveler"> | Date | string | null
    passportNationality?: StringNullableFilter<"OrderTraveler"> | string | null
    passportIssueCountry?: StringNullableFilter<"OrderTraveler"> | string | null
    seatPreference?: StringNullableFilter<"OrderTraveler"> | string | null
    mealPreference?: StringNullableFilter<"OrderTraveler"> | string | null
    specialNeeds?: StringNullableFilter<"OrderTraveler"> | string | null
    price?: DecimalNullableFilter<"OrderTraveler"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"OrderTraveler"> | Date | string
    updatedAt?: DateTimeFilter<"OrderTraveler"> | Date | string
    order?: XOR<TourOrderScalarRelationFilter, TourOrderWhereInput>
  }, "id">

  export type OrderTravelerOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    travelerType?: SortOrder
    title?: SortOrderInput | SortOrder
    firstNameTh?: SortOrder
    lastNameTh?: SortOrder
    firstNameEn?: SortOrder
    lastNameEn?: SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    passportNumber?: SortOrderInput | SortOrder
    passportExpiry?: SortOrderInput | SortOrder
    passportNationality?: SortOrderInput | SortOrder
    passportIssueCountry?: SortOrderInput | SortOrder
    seatPreference?: SortOrderInput | SortOrder
    mealPreference?: SortOrderInput | SortOrder
    specialNeeds?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderTravelerCountOrderByAggregateInput
    _avg?: OrderTravelerAvgOrderByAggregateInput
    _max?: OrderTravelerMaxOrderByAggregateInput
    _min?: OrderTravelerMinOrderByAggregateInput
    _sum?: OrderTravelerSumOrderByAggregateInput
  }

  export type OrderTravelerScalarWhereWithAggregatesInput = {
    AND?: OrderTravelerScalarWhereWithAggregatesInput | OrderTravelerScalarWhereWithAggregatesInput[]
    OR?: OrderTravelerScalarWhereWithAggregatesInput[]
    NOT?: OrderTravelerScalarWhereWithAggregatesInput | OrderTravelerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrderTraveler"> | number
    orderId?: IntWithAggregatesFilter<"OrderTraveler"> | number
    travelerType?: StringWithAggregatesFilter<"OrderTraveler"> | string
    title?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    firstNameTh?: StringWithAggregatesFilter<"OrderTraveler"> | string
    lastNameTh?: StringWithAggregatesFilter<"OrderTraveler"> | string
    firstNameEn?: StringWithAggregatesFilter<"OrderTraveler"> | string
    lastNameEn?: StringWithAggregatesFilter<"OrderTraveler"> | string
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"OrderTraveler"> | Date | string | null
    gender?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    phone?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    email?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    passportNumber?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    passportExpiry?: DateTimeNullableWithAggregatesFilter<"OrderTraveler"> | Date | string | null
    passportNationality?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    passportIssueCountry?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    seatPreference?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    mealPreference?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    specialNeeds?: StringNullableWithAggregatesFilter<"OrderTraveler"> | string | null
    price?: DecimalNullableWithAggregatesFilter<"OrderTraveler"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeWithAggregatesFilter<"OrderTraveler"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OrderTraveler"> | Date | string
  }

  export type OrderPaymentWhereInput = {
    AND?: OrderPaymentWhereInput | OrderPaymentWhereInput[]
    OR?: OrderPaymentWhereInput[]
    NOT?: OrderPaymentWhereInput | OrderPaymentWhereInput[]
    id?: IntFilter<"OrderPayment"> | number
    orderId?: IntFilter<"OrderPayment"> | number
    paymentType?: StringFilter<"OrderPayment"> | string
    paymentMethod?: StringFilter<"OrderPayment"> | string
    paymentProvider?: StringNullableFilter<"OrderPayment"> | string | null
    transactionId?: StringNullableFilter<"OrderPayment"> | string | null
    referenceNumber?: StringNullableFilter<"OrderPayment"> | string | null
    amount?: DecimalFilter<"OrderPayment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"OrderPayment"> | string
    exchangeRate?: DecimalNullableFilter<"OrderPayment"> | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFilter<"OrderPayment"> | string
    gatewayResponse?: StringNullableFilter<"OrderPayment"> | string | null
    bankResponse?: StringNullableFilter<"OrderPayment"> | string | null
    receiptNumber?: StringNullableFilter<"OrderPayment"> | string | null
    invoiceNumber?: StringNullableFilter<"OrderPayment"> | string | null
    requestedAt?: DateTimeFilter<"OrderPayment"> | Date | string
    processedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    failedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    refundedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    paymentNotes?: StringNullableFilter<"OrderPayment"> | string | null
    failureReason?: StringNullableFilter<"OrderPayment"> | string | null
    order?: XOR<TourOrderScalarRelationFilter, TourOrderWhereInput>
  }

  export type OrderPaymentOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    paymentType?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrderInput | SortOrder
    transactionId?: SortOrderInput | SortOrder
    referenceNumber?: SortOrderInput | SortOrder
    amount?: SortOrder
    currency?: SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    gatewayResponse?: SortOrderInput | SortOrder
    bankResponse?: SortOrderInput | SortOrder
    receiptNumber?: SortOrderInput | SortOrder
    invoiceNumber?: SortOrderInput | SortOrder
    requestedAt?: SortOrder
    processedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    failedAt?: SortOrderInput | SortOrder
    refundedAt?: SortOrderInput | SortOrder
    paymentNotes?: SortOrderInput | SortOrder
    failureReason?: SortOrderInput | SortOrder
    order?: TourOrderOrderByWithRelationInput
  }

  export type OrderPaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderPaymentWhereInput | OrderPaymentWhereInput[]
    OR?: OrderPaymentWhereInput[]
    NOT?: OrderPaymentWhereInput | OrderPaymentWhereInput[]
    orderId?: IntFilter<"OrderPayment"> | number
    paymentType?: StringFilter<"OrderPayment"> | string
    paymentMethod?: StringFilter<"OrderPayment"> | string
    paymentProvider?: StringNullableFilter<"OrderPayment"> | string | null
    transactionId?: StringNullableFilter<"OrderPayment"> | string | null
    referenceNumber?: StringNullableFilter<"OrderPayment"> | string | null
    amount?: DecimalFilter<"OrderPayment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"OrderPayment"> | string
    exchangeRate?: DecimalNullableFilter<"OrderPayment"> | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFilter<"OrderPayment"> | string
    gatewayResponse?: StringNullableFilter<"OrderPayment"> | string | null
    bankResponse?: StringNullableFilter<"OrderPayment"> | string | null
    receiptNumber?: StringNullableFilter<"OrderPayment"> | string | null
    invoiceNumber?: StringNullableFilter<"OrderPayment"> | string | null
    requestedAt?: DateTimeFilter<"OrderPayment"> | Date | string
    processedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    failedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    refundedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    paymentNotes?: StringNullableFilter<"OrderPayment"> | string | null
    failureReason?: StringNullableFilter<"OrderPayment"> | string | null
    order?: XOR<TourOrderScalarRelationFilter, TourOrderWhereInput>
  }, "id">

  export type OrderPaymentOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    paymentType?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrderInput | SortOrder
    transactionId?: SortOrderInput | SortOrder
    referenceNumber?: SortOrderInput | SortOrder
    amount?: SortOrder
    currency?: SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    gatewayResponse?: SortOrderInput | SortOrder
    bankResponse?: SortOrderInput | SortOrder
    receiptNumber?: SortOrderInput | SortOrder
    invoiceNumber?: SortOrderInput | SortOrder
    requestedAt?: SortOrder
    processedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    failedAt?: SortOrderInput | SortOrder
    refundedAt?: SortOrderInput | SortOrder
    paymentNotes?: SortOrderInput | SortOrder
    failureReason?: SortOrderInput | SortOrder
    _count?: OrderPaymentCountOrderByAggregateInput
    _avg?: OrderPaymentAvgOrderByAggregateInput
    _max?: OrderPaymentMaxOrderByAggregateInput
    _min?: OrderPaymentMinOrderByAggregateInput
    _sum?: OrderPaymentSumOrderByAggregateInput
  }

  export type OrderPaymentScalarWhereWithAggregatesInput = {
    AND?: OrderPaymentScalarWhereWithAggregatesInput | OrderPaymentScalarWhereWithAggregatesInput[]
    OR?: OrderPaymentScalarWhereWithAggregatesInput[]
    NOT?: OrderPaymentScalarWhereWithAggregatesInput | OrderPaymentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrderPayment"> | number
    orderId?: IntWithAggregatesFilter<"OrderPayment"> | number
    paymentType?: StringWithAggregatesFilter<"OrderPayment"> | string
    paymentMethod?: StringWithAggregatesFilter<"OrderPayment"> | string
    paymentProvider?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
    transactionId?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
    referenceNumber?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
    amount?: DecimalWithAggregatesFilter<"OrderPayment"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"OrderPayment"> | string
    exchangeRate?: DecimalNullableWithAggregatesFilter<"OrderPayment"> | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringWithAggregatesFilter<"OrderPayment"> | string
    gatewayResponse?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
    bankResponse?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
    receiptNumber?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
    invoiceNumber?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
    requestedAt?: DateTimeWithAggregatesFilter<"OrderPayment"> | Date | string
    processedAt?: DateTimeNullableWithAggregatesFilter<"OrderPayment"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"OrderPayment"> | Date | string | null
    failedAt?: DateTimeNullableWithAggregatesFilter<"OrderPayment"> | Date | string | null
    refundedAt?: DateTimeNullableWithAggregatesFilter<"OrderPayment"> | Date | string | null
    paymentNotes?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
    failureReason?: StringNullableWithAggregatesFilter<"OrderPayment"> | string | null
  }

  export type OrderDocumentWhereInput = {
    AND?: OrderDocumentWhereInput | OrderDocumentWhereInput[]
    OR?: OrderDocumentWhereInput[]
    NOT?: OrderDocumentWhereInput | OrderDocumentWhereInput[]
    id?: IntFilter<"OrderDocument"> | number
    orderId?: IntFilter<"OrderDocument"> | number
    documentType?: StringFilter<"OrderDocument"> | string
    documentTitle?: StringFilter<"OrderDocument"> | string
    documentDescription?: StringNullableFilter<"OrderDocument"> | string | null
    fileName?: StringFilter<"OrderDocument"> | string
    originalFileName?: StringFilter<"OrderDocument"> | string
    filePath?: StringFilter<"OrderDocument"> | string
    fileSize?: IntNullableFilter<"OrderDocument"> | number | null
    mimeType?: StringFilter<"OrderDocument"> | string
    isGenerated?: BoolFilter<"OrderDocument"> | boolean
    isActive?: BoolFilter<"OrderDocument"> | boolean
    createdAt?: DateTimeFilter<"OrderDocument"> | Date | string
    updatedAt?: DateTimeFilter<"OrderDocument"> | Date | string
    order?: XOR<TourOrderScalarRelationFilter, TourOrderWhereInput>
  }

  export type OrderDocumentOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    documentDescription?: SortOrderInput | SortOrder
    fileName?: SortOrder
    originalFileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrder
    isGenerated?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: TourOrderOrderByWithRelationInput
  }

  export type OrderDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderDocumentWhereInput | OrderDocumentWhereInput[]
    OR?: OrderDocumentWhereInput[]
    NOT?: OrderDocumentWhereInput | OrderDocumentWhereInput[]
    orderId?: IntFilter<"OrderDocument"> | number
    documentType?: StringFilter<"OrderDocument"> | string
    documentTitle?: StringFilter<"OrderDocument"> | string
    documentDescription?: StringNullableFilter<"OrderDocument"> | string | null
    fileName?: StringFilter<"OrderDocument"> | string
    originalFileName?: StringFilter<"OrderDocument"> | string
    filePath?: StringFilter<"OrderDocument"> | string
    fileSize?: IntNullableFilter<"OrderDocument"> | number | null
    mimeType?: StringFilter<"OrderDocument"> | string
    isGenerated?: BoolFilter<"OrderDocument"> | boolean
    isActive?: BoolFilter<"OrderDocument"> | boolean
    createdAt?: DateTimeFilter<"OrderDocument"> | Date | string
    updatedAt?: DateTimeFilter<"OrderDocument"> | Date | string
    order?: XOR<TourOrderScalarRelationFilter, TourOrderWhereInput>
  }, "id">

  export type OrderDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    documentDescription?: SortOrderInput | SortOrder
    fileName?: SortOrder
    originalFileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrder
    isGenerated?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderDocumentCountOrderByAggregateInput
    _avg?: OrderDocumentAvgOrderByAggregateInput
    _max?: OrderDocumentMaxOrderByAggregateInput
    _min?: OrderDocumentMinOrderByAggregateInput
    _sum?: OrderDocumentSumOrderByAggregateInput
  }

  export type OrderDocumentScalarWhereWithAggregatesInput = {
    AND?: OrderDocumentScalarWhereWithAggregatesInput | OrderDocumentScalarWhereWithAggregatesInput[]
    OR?: OrderDocumentScalarWhereWithAggregatesInput[]
    NOT?: OrderDocumentScalarWhereWithAggregatesInput | OrderDocumentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrderDocument"> | number
    orderId?: IntWithAggregatesFilter<"OrderDocument"> | number
    documentType?: StringWithAggregatesFilter<"OrderDocument"> | string
    documentTitle?: StringWithAggregatesFilter<"OrderDocument"> | string
    documentDescription?: StringNullableWithAggregatesFilter<"OrderDocument"> | string | null
    fileName?: StringWithAggregatesFilter<"OrderDocument"> | string
    originalFileName?: StringWithAggregatesFilter<"OrderDocument"> | string
    filePath?: StringWithAggregatesFilter<"OrderDocument"> | string
    fileSize?: IntNullableWithAggregatesFilter<"OrderDocument"> | number | null
    mimeType?: StringWithAggregatesFilter<"OrderDocument"> | string
    isGenerated?: BoolWithAggregatesFilter<"OrderDocument"> | boolean
    isActive?: BoolWithAggregatesFilter<"OrderDocument"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"OrderDocument"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OrderDocument"> | Date | string
  }

  export type OrderNoteWhereInput = {
    AND?: OrderNoteWhereInput | OrderNoteWhereInput[]
    OR?: OrderNoteWhereInput[]
    NOT?: OrderNoteWhereInput | OrderNoteWhereInput[]
    id?: IntFilter<"OrderNote"> | number
    orderId?: IntFilter<"OrderNote"> | number
    noteType?: StringFilter<"OrderNote"> | string
    subject?: StringNullableFilter<"OrderNote"> | string | null
    content?: StringFilter<"OrderNote"> | string
    isInternal?: BoolFilter<"OrderNote"> | boolean
    authorType?: StringFilter<"OrderNote"> | string
    authorName?: StringNullableFilter<"OrderNote"> | string | null
    authorId?: StringNullableFilter<"OrderNote"> | string | null
    createdAt?: DateTimeFilter<"OrderNote"> | Date | string
    updatedAt?: DateTimeFilter<"OrderNote"> | Date | string
    order?: XOR<TourOrderScalarRelationFilter, TourOrderWhereInput>
  }

  export type OrderNoteOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    noteType?: SortOrder
    subject?: SortOrderInput | SortOrder
    content?: SortOrder
    isInternal?: SortOrder
    authorType?: SortOrder
    authorName?: SortOrderInput | SortOrder
    authorId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: TourOrderOrderByWithRelationInput
  }

  export type OrderNoteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderNoteWhereInput | OrderNoteWhereInput[]
    OR?: OrderNoteWhereInput[]
    NOT?: OrderNoteWhereInput | OrderNoteWhereInput[]
    orderId?: IntFilter<"OrderNote"> | number
    noteType?: StringFilter<"OrderNote"> | string
    subject?: StringNullableFilter<"OrderNote"> | string | null
    content?: StringFilter<"OrderNote"> | string
    isInternal?: BoolFilter<"OrderNote"> | boolean
    authorType?: StringFilter<"OrderNote"> | string
    authorName?: StringNullableFilter<"OrderNote"> | string | null
    authorId?: StringNullableFilter<"OrderNote"> | string | null
    createdAt?: DateTimeFilter<"OrderNote"> | Date | string
    updatedAt?: DateTimeFilter<"OrderNote"> | Date | string
    order?: XOR<TourOrderScalarRelationFilter, TourOrderWhereInput>
  }, "id">

  export type OrderNoteOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    noteType?: SortOrder
    subject?: SortOrderInput | SortOrder
    content?: SortOrder
    isInternal?: SortOrder
    authorType?: SortOrder
    authorName?: SortOrderInput | SortOrder
    authorId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderNoteCountOrderByAggregateInput
    _avg?: OrderNoteAvgOrderByAggregateInput
    _max?: OrderNoteMaxOrderByAggregateInput
    _min?: OrderNoteMinOrderByAggregateInput
    _sum?: OrderNoteSumOrderByAggregateInput
  }

  export type OrderNoteScalarWhereWithAggregatesInput = {
    AND?: OrderNoteScalarWhereWithAggregatesInput | OrderNoteScalarWhereWithAggregatesInput[]
    OR?: OrderNoteScalarWhereWithAggregatesInput[]
    NOT?: OrderNoteScalarWhereWithAggregatesInput | OrderNoteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrderNote"> | number
    orderId?: IntWithAggregatesFilter<"OrderNote"> | number
    noteType?: StringWithAggregatesFilter<"OrderNote"> | string
    subject?: StringNullableWithAggregatesFilter<"OrderNote"> | string | null
    content?: StringWithAggregatesFilter<"OrderNote"> | string
    isInternal?: BoolWithAggregatesFilter<"OrderNote"> | boolean
    authorType?: StringWithAggregatesFilter<"OrderNote"> | string
    authorName?: StringNullableWithAggregatesFilter<"OrderNote"> | string | null
    authorId?: StringNullableWithAggregatesFilter<"OrderNote"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"OrderNote"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OrderNote"> | Date | string
  }

  export type TwOrderWhereInput = {
    AND?: TwOrderWhereInput | TwOrderWhereInput[]
    OR?: TwOrderWhereInput[]
    NOT?: TwOrderWhereInput | TwOrderWhereInput[]
    id?: BigIntFilter<"TwOrder"> | bigint | number
    periodId?: IntNullableFilter<"TwOrder"> | number | null
    departureDate?: DateTimeNullableFilter<"TwOrder"> | Date | string | null
    returnDate?: DateTimeNullableFilter<"TwOrder"> | Date | string | null
    pricePerPerson?: DecimalNullableFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    travelerCount?: IntNullableFilter<"TwOrder"> | number | null
    totalAmount?: DecimalNullableFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    depositAmount?: DecimalNullableFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"TwOrder"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"TwOrder"> | Date | string | null
    basePrice?: DecimalNullableFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    extraRooms?: IntNullableFilter<"TwOrder"> | number | null
    isEdited?: BoolNullableFilter<"TwOrder"> | boolean | null
    address?: StringNullableFilter<"TwOrder"> | string | null
    tourProgramId?: StringNullableFilter<"TwOrder"> | string | null
    tourName?: StringNullableFilter<"TwOrder"> | string | null
    subDistrict?: StringNullableFilter<"TwOrder"> | string | null
    district?: StringNullableFilter<"TwOrder"> | string | null
    province?: StringNullableFilter<"TwOrder"> | string | null
    postalCode?: StringNullableFilter<"TwOrder"> | string | null
    status?: StringNullableFilter<"TwOrder"> | string | null
    selectedPackage?: StringNullableFilter<"TwOrder"> | string | null
    customerName?: StringNullableFilter<"TwOrder"> | string | null
    customerPhone?: StringNullableFilter<"TwOrder"> | string | null
    customerEmail?: StringNullableFilter<"TwOrder"> | string | null
  }

  export type TwOrderOrderByWithRelationInput = {
    id?: SortOrder
    periodId?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    returnDate?: SortOrderInput | SortOrder
    pricePerPerson?: SortOrderInput | SortOrder
    travelerCount?: SortOrderInput | SortOrder
    totalAmount?: SortOrderInput | SortOrder
    depositAmount?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    basePrice?: SortOrderInput | SortOrder
    extraRooms?: SortOrderInput | SortOrder
    isEdited?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    tourProgramId?: SortOrderInput | SortOrder
    tourName?: SortOrderInput | SortOrder
    subDistrict?: SortOrderInput | SortOrder
    district?: SortOrderInput | SortOrder
    province?: SortOrderInput | SortOrder
    postalCode?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    selectedPackage?: SortOrderInput | SortOrder
    customerName?: SortOrderInput | SortOrder
    customerPhone?: SortOrderInput | SortOrder
    customerEmail?: SortOrderInput | SortOrder
  }

  export type TwOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: TwOrderWhereInput | TwOrderWhereInput[]
    OR?: TwOrderWhereInput[]
    NOT?: TwOrderWhereInput | TwOrderWhereInput[]
    periodId?: IntNullableFilter<"TwOrder"> | number | null
    departureDate?: DateTimeNullableFilter<"TwOrder"> | Date | string | null
    returnDate?: DateTimeNullableFilter<"TwOrder"> | Date | string | null
    pricePerPerson?: DecimalNullableFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    travelerCount?: IntNullableFilter<"TwOrder"> | number | null
    totalAmount?: DecimalNullableFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    depositAmount?: DecimalNullableFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableFilter<"TwOrder"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"TwOrder"> | Date | string | null
    basePrice?: DecimalNullableFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    extraRooms?: IntNullableFilter<"TwOrder"> | number | null
    isEdited?: BoolNullableFilter<"TwOrder"> | boolean | null
    address?: StringNullableFilter<"TwOrder"> | string | null
    tourProgramId?: StringNullableFilter<"TwOrder"> | string | null
    tourName?: StringNullableFilter<"TwOrder"> | string | null
    subDistrict?: StringNullableFilter<"TwOrder"> | string | null
    district?: StringNullableFilter<"TwOrder"> | string | null
    province?: StringNullableFilter<"TwOrder"> | string | null
    postalCode?: StringNullableFilter<"TwOrder"> | string | null
    status?: StringNullableFilter<"TwOrder"> | string | null
    selectedPackage?: StringNullableFilter<"TwOrder"> | string | null
    customerName?: StringNullableFilter<"TwOrder"> | string | null
    customerPhone?: StringNullableFilter<"TwOrder"> | string | null
    customerEmail?: StringNullableFilter<"TwOrder"> | string | null
  }, "id">

  export type TwOrderOrderByWithAggregationInput = {
    id?: SortOrder
    periodId?: SortOrderInput | SortOrder
    departureDate?: SortOrderInput | SortOrder
    returnDate?: SortOrderInput | SortOrder
    pricePerPerson?: SortOrderInput | SortOrder
    travelerCount?: SortOrderInput | SortOrder
    totalAmount?: SortOrderInput | SortOrder
    depositAmount?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    basePrice?: SortOrderInput | SortOrder
    extraRooms?: SortOrderInput | SortOrder
    isEdited?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    tourProgramId?: SortOrderInput | SortOrder
    tourName?: SortOrderInput | SortOrder
    subDistrict?: SortOrderInput | SortOrder
    district?: SortOrderInput | SortOrder
    province?: SortOrderInput | SortOrder
    postalCode?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    selectedPackage?: SortOrderInput | SortOrder
    customerName?: SortOrderInput | SortOrder
    customerPhone?: SortOrderInput | SortOrder
    customerEmail?: SortOrderInput | SortOrder
    _count?: TwOrderCountOrderByAggregateInput
    _avg?: TwOrderAvgOrderByAggregateInput
    _max?: TwOrderMaxOrderByAggregateInput
    _min?: TwOrderMinOrderByAggregateInput
    _sum?: TwOrderSumOrderByAggregateInput
  }

  export type TwOrderScalarWhereWithAggregatesInput = {
    AND?: TwOrderScalarWhereWithAggregatesInput | TwOrderScalarWhereWithAggregatesInput[]
    OR?: TwOrderScalarWhereWithAggregatesInput[]
    NOT?: TwOrderScalarWhereWithAggregatesInput | TwOrderScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"TwOrder"> | bigint | number
    periodId?: IntNullableWithAggregatesFilter<"TwOrder"> | number | null
    departureDate?: DateTimeNullableWithAggregatesFilter<"TwOrder"> | Date | string | null
    returnDate?: DateTimeNullableWithAggregatesFilter<"TwOrder"> | Date | string | null
    pricePerPerson?: DecimalNullableWithAggregatesFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    travelerCount?: IntNullableWithAggregatesFilter<"TwOrder"> | number | null
    totalAmount?: DecimalNullableWithAggregatesFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    depositAmount?: DecimalNullableWithAggregatesFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"TwOrder"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TwOrder"> | Date | string | null
    basePrice?: DecimalNullableWithAggregatesFilter<"TwOrder"> | Decimal | DecimalJsLike | number | string | null
    extraRooms?: IntNullableWithAggregatesFilter<"TwOrder"> | number | null
    isEdited?: BoolNullableWithAggregatesFilter<"TwOrder"> | boolean | null
    address?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    tourProgramId?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    tourName?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    subDistrict?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    district?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    province?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    postalCode?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    status?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    selectedPackage?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    customerName?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    customerPhone?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
    customerEmail?: StringNullableWithAggregatesFilter<"TwOrder"> | string | null
  }

  export type ProductPoolCreateInput = {
    supplierId: number
    productRunningId: number
    productId: number
    periodId: number
    productSubCategoryId: number
    productTourCode: string
    productTourwowCode: string
    productTwUrlPath: string
    productName: string
    productStartAt: Date | string
    productPrice: Decimal | DecimalJsLike | number | string
    productPriceCompare?: Decimal | DecimalJsLike | number | string | null
    productHasOneCountry: number
    productMainCountryId: number
    productMainCountryNameTh: string
    productMainCountryNameEn: string
    productCountries: string
    productCountrySubUnits: string
    productTags: string
    productTagsJson: string
    productDurationDay: number
    productDurationNight: number
    productDurationDayAndNight: string
    productFreeDay?: number | null
    productMealAmount: number
    productHotelStar: number
    productHasVisa: number
    productVisaPrice?: Decimal | DecimalJsLike | number | string | null
    productHilightDescription: string
    productSubCategoryLabel: string
    productBannerUrl: string
    productHasActivePeriods: number
    productIsRecommended: number
    periodGroupCode?: string | null
    periodStartAt: Date | string
    periodEndAt: Date | string
    periodIsChannelTwpOnlineBooking: number
    periodPriceAdultDouble: Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: Decimal | DecimalJsLike | number | string | null
    periodDeposit?: Decimal | DecimalJsLike | number | string | null
    periodCommission: Decimal | DecimalJsLike | number | string
    periodCommissionCompany: Decimal | DecimalJsLike | number | string
    periodCommissionSeller: Decimal | DecimalJsLike | number | string
    periodQuantity: number
    periodQuantityRemaining: number
    periodSellStatusCode: number
    periodIsActive: number
    periodDeal: number
    periodConfig: number
    periodInstallmentCount: number
    periodTransportationCategoryId: number
    periodTransportationCategoryName: string
    periodGoTransportationId: number
    periodGoTransportationNameEn: string
    periodGoTransportationCode: string
    periodGoAirportArrival?: string | null
    periodGoAirportDeparture?: string | null
    periodGoFlightNumberArrival?: string | null
    periodGoFlightNumberDeparture?: string | null
    periodGoFlightTimeArrival?: string | null
    periodGoFlightTimeDeparture?: string | null
    periodBackTransportationId: number
    periodBackTransportationNameEn: string
    periodBackTransportationCode: string
    periodBackAirportArrival?: string | null
    periodBackAirportDeparture?: string | null
    periodBackFlightNumberArrival?: string | null
    periodBackFlightNumberDeparture?: string | null
    periodBackFlightTimeArrival?: string | null
    periodBackFlightTimeDeparture?: string | null
    createdAt: Date | string
  }

  export type ProductPoolUncheckedCreateInput = {
    id?: number
    supplierId: number
    productRunningId: number
    productId: number
    periodId: number
    productSubCategoryId: number
    productTourCode: string
    productTourwowCode: string
    productTwUrlPath: string
    productName: string
    productStartAt: Date | string
    productPrice: Decimal | DecimalJsLike | number | string
    productPriceCompare?: Decimal | DecimalJsLike | number | string | null
    productHasOneCountry: number
    productMainCountryId: number
    productMainCountryNameTh: string
    productMainCountryNameEn: string
    productCountries: string
    productCountrySubUnits: string
    productTags: string
    productTagsJson: string
    productDurationDay: number
    productDurationNight: number
    productDurationDayAndNight: string
    productFreeDay?: number | null
    productMealAmount: number
    productHotelStar: number
    productHasVisa: number
    productVisaPrice?: Decimal | DecimalJsLike | number | string | null
    productHilightDescription: string
    productSubCategoryLabel: string
    productBannerUrl: string
    productHasActivePeriods: number
    productIsRecommended: number
    periodGroupCode?: string | null
    periodStartAt: Date | string
    periodEndAt: Date | string
    periodIsChannelTwpOnlineBooking: number
    periodPriceAdultDouble: Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: Decimal | DecimalJsLike | number | string | null
    periodDeposit?: Decimal | DecimalJsLike | number | string | null
    periodCommission: Decimal | DecimalJsLike | number | string
    periodCommissionCompany: Decimal | DecimalJsLike | number | string
    periodCommissionSeller: Decimal | DecimalJsLike | number | string
    periodQuantity: number
    periodQuantityRemaining: number
    periodSellStatusCode: number
    periodIsActive: number
    periodDeal: number
    periodConfig: number
    periodInstallmentCount: number
    periodTransportationCategoryId: number
    periodTransportationCategoryName: string
    periodGoTransportationId: number
    periodGoTransportationNameEn: string
    periodGoTransportationCode: string
    periodGoAirportArrival?: string | null
    periodGoAirportDeparture?: string | null
    periodGoFlightNumberArrival?: string | null
    periodGoFlightNumberDeparture?: string | null
    periodGoFlightTimeArrival?: string | null
    periodGoFlightTimeDeparture?: string | null
    periodBackTransportationId: number
    periodBackTransportationNameEn: string
    periodBackTransportationCode: string
    periodBackAirportArrival?: string | null
    periodBackAirportDeparture?: string | null
    periodBackFlightNumberArrival?: string | null
    periodBackFlightNumberDeparture?: string | null
    periodBackFlightTimeArrival?: string | null
    periodBackFlightTimeDeparture?: string | null
    createdAt: Date | string
  }

  export type ProductPoolUpdateInput = {
    supplierId?: IntFieldUpdateOperationsInput | number
    productRunningId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    productSubCategoryId?: IntFieldUpdateOperationsInput | number
    productTourCode?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTwUrlPath?: StringFieldUpdateOperationsInput | string
    productName?: StringFieldUpdateOperationsInput | string
    productStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productPriceCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productHasOneCountry?: IntFieldUpdateOperationsInput | number
    productMainCountryId?: IntFieldUpdateOperationsInput | number
    productMainCountryNameTh?: StringFieldUpdateOperationsInput | string
    productMainCountryNameEn?: StringFieldUpdateOperationsInput | string
    productCountries?: StringFieldUpdateOperationsInput | string
    productCountrySubUnits?: StringFieldUpdateOperationsInput | string
    productTags?: StringFieldUpdateOperationsInput | string
    productTagsJson?: StringFieldUpdateOperationsInput | string
    productDurationDay?: IntFieldUpdateOperationsInput | number
    productDurationNight?: IntFieldUpdateOperationsInput | number
    productDurationDayAndNight?: StringFieldUpdateOperationsInput | string
    productFreeDay?: NullableIntFieldUpdateOperationsInput | number | null
    productMealAmount?: IntFieldUpdateOperationsInput | number
    productHotelStar?: IntFieldUpdateOperationsInput | number
    productHasVisa?: IntFieldUpdateOperationsInput | number
    productVisaPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productHilightDescription?: StringFieldUpdateOperationsInput | string
    productSubCategoryLabel?: StringFieldUpdateOperationsInput | string
    productBannerUrl?: StringFieldUpdateOperationsInput | string
    productHasActivePeriods?: IntFieldUpdateOperationsInput | number
    productIsRecommended?: IntFieldUpdateOperationsInput | number
    periodGroupCode?: NullableStringFieldUpdateOperationsInput | string | null
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodIsChannelTwpOnlineBooking?: IntFieldUpdateOperationsInput | number
    periodPriceAdultDouble?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodDeposit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodCommission?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodCommissionCompany?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodCommissionSeller?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodQuantity?: IntFieldUpdateOperationsInput | number
    periodQuantityRemaining?: IntFieldUpdateOperationsInput | number
    periodSellStatusCode?: IntFieldUpdateOperationsInput | number
    periodIsActive?: IntFieldUpdateOperationsInput | number
    periodDeal?: IntFieldUpdateOperationsInput | number
    periodConfig?: IntFieldUpdateOperationsInput | number
    periodInstallmentCount?: IntFieldUpdateOperationsInput | number
    periodTransportationCategoryId?: IntFieldUpdateOperationsInput | number
    periodTransportationCategoryName?: StringFieldUpdateOperationsInput | string
    periodGoTransportationId?: IntFieldUpdateOperationsInput | number
    periodGoTransportationNameEn?: StringFieldUpdateOperationsInput | string
    periodGoTransportationCode?: StringFieldUpdateOperationsInput | string
    periodGoAirportArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoAirportDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightNumberArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightNumberDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightTimeArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightTimeDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackTransportationId?: IntFieldUpdateOperationsInput | number
    periodBackTransportationNameEn?: StringFieldUpdateOperationsInput | string
    periodBackTransportationCode?: StringFieldUpdateOperationsInput | string
    periodBackAirportArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackAirportDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightNumberArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightNumberDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightTimeArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightTimeDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductPoolUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    productRunningId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    productSubCategoryId?: IntFieldUpdateOperationsInput | number
    productTourCode?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTwUrlPath?: StringFieldUpdateOperationsInput | string
    productName?: StringFieldUpdateOperationsInput | string
    productStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productPriceCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productHasOneCountry?: IntFieldUpdateOperationsInput | number
    productMainCountryId?: IntFieldUpdateOperationsInput | number
    productMainCountryNameTh?: StringFieldUpdateOperationsInput | string
    productMainCountryNameEn?: StringFieldUpdateOperationsInput | string
    productCountries?: StringFieldUpdateOperationsInput | string
    productCountrySubUnits?: StringFieldUpdateOperationsInput | string
    productTags?: StringFieldUpdateOperationsInput | string
    productTagsJson?: StringFieldUpdateOperationsInput | string
    productDurationDay?: IntFieldUpdateOperationsInput | number
    productDurationNight?: IntFieldUpdateOperationsInput | number
    productDurationDayAndNight?: StringFieldUpdateOperationsInput | string
    productFreeDay?: NullableIntFieldUpdateOperationsInput | number | null
    productMealAmount?: IntFieldUpdateOperationsInput | number
    productHotelStar?: IntFieldUpdateOperationsInput | number
    productHasVisa?: IntFieldUpdateOperationsInput | number
    productVisaPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productHilightDescription?: StringFieldUpdateOperationsInput | string
    productSubCategoryLabel?: StringFieldUpdateOperationsInput | string
    productBannerUrl?: StringFieldUpdateOperationsInput | string
    productHasActivePeriods?: IntFieldUpdateOperationsInput | number
    productIsRecommended?: IntFieldUpdateOperationsInput | number
    periodGroupCode?: NullableStringFieldUpdateOperationsInput | string | null
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodIsChannelTwpOnlineBooking?: IntFieldUpdateOperationsInput | number
    periodPriceAdultDouble?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodDeposit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodCommission?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodCommissionCompany?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodCommissionSeller?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodQuantity?: IntFieldUpdateOperationsInput | number
    periodQuantityRemaining?: IntFieldUpdateOperationsInput | number
    periodSellStatusCode?: IntFieldUpdateOperationsInput | number
    periodIsActive?: IntFieldUpdateOperationsInput | number
    periodDeal?: IntFieldUpdateOperationsInput | number
    periodConfig?: IntFieldUpdateOperationsInput | number
    periodInstallmentCount?: IntFieldUpdateOperationsInput | number
    periodTransportationCategoryId?: IntFieldUpdateOperationsInput | number
    periodTransportationCategoryName?: StringFieldUpdateOperationsInput | string
    periodGoTransportationId?: IntFieldUpdateOperationsInput | number
    periodGoTransportationNameEn?: StringFieldUpdateOperationsInput | string
    periodGoTransportationCode?: StringFieldUpdateOperationsInput | string
    periodGoAirportArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoAirportDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightNumberArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightNumberDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightTimeArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightTimeDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackTransportationId?: IntFieldUpdateOperationsInput | number
    periodBackTransportationNameEn?: StringFieldUpdateOperationsInput | string
    periodBackTransportationCode?: StringFieldUpdateOperationsInput | string
    periodBackAirportArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackAirportDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightNumberArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightNumberDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightTimeArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightTimeDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductPoolCreateManyInput = {
    id?: number
    supplierId: number
    productRunningId: number
    productId: number
    periodId: number
    productSubCategoryId: number
    productTourCode: string
    productTourwowCode: string
    productTwUrlPath: string
    productName: string
    productStartAt: Date | string
    productPrice: Decimal | DecimalJsLike | number | string
    productPriceCompare?: Decimal | DecimalJsLike | number | string | null
    productHasOneCountry: number
    productMainCountryId: number
    productMainCountryNameTh: string
    productMainCountryNameEn: string
    productCountries: string
    productCountrySubUnits: string
    productTags: string
    productTagsJson: string
    productDurationDay: number
    productDurationNight: number
    productDurationDayAndNight: string
    productFreeDay?: number | null
    productMealAmount: number
    productHotelStar: number
    productHasVisa: number
    productVisaPrice?: Decimal | DecimalJsLike | number | string | null
    productHilightDescription: string
    productSubCategoryLabel: string
    productBannerUrl: string
    productHasActivePeriods: number
    productIsRecommended: number
    periodGroupCode?: string | null
    periodStartAt: Date | string
    periodEndAt: Date | string
    periodIsChannelTwpOnlineBooking: number
    periodPriceAdultDouble: Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: Decimal | DecimalJsLike | number | string | null
    periodDeposit?: Decimal | DecimalJsLike | number | string | null
    periodCommission: Decimal | DecimalJsLike | number | string
    periodCommissionCompany: Decimal | DecimalJsLike | number | string
    periodCommissionSeller: Decimal | DecimalJsLike | number | string
    periodQuantity: number
    periodQuantityRemaining: number
    periodSellStatusCode: number
    periodIsActive: number
    periodDeal: number
    periodConfig: number
    periodInstallmentCount: number
    periodTransportationCategoryId: number
    periodTransportationCategoryName: string
    periodGoTransportationId: number
    periodGoTransportationNameEn: string
    periodGoTransportationCode: string
    periodGoAirportArrival?: string | null
    periodGoAirportDeparture?: string | null
    periodGoFlightNumberArrival?: string | null
    periodGoFlightNumberDeparture?: string | null
    periodGoFlightTimeArrival?: string | null
    periodGoFlightTimeDeparture?: string | null
    periodBackTransportationId: number
    periodBackTransportationNameEn: string
    periodBackTransportationCode: string
    periodBackAirportArrival?: string | null
    periodBackAirportDeparture?: string | null
    periodBackFlightNumberArrival?: string | null
    periodBackFlightNumberDeparture?: string | null
    periodBackFlightTimeArrival?: string | null
    periodBackFlightTimeDeparture?: string | null
    createdAt: Date | string
  }

  export type ProductPoolUpdateManyMutationInput = {
    supplierId?: IntFieldUpdateOperationsInput | number
    productRunningId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    productSubCategoryId?: IntFieldUpdateOperationsInput | number
    productTourCode?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTwUrlPath?: StringFieldUpdateOperationsInput | string
    productName?: StringFieldUpdateOperationsInput | string
    productStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productPriceCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productHasOneCountry?: IntFieldUpdateOperationsInput | number
    productMainCountryId?: IntFieldUpdateOperationsInput | number
    productMainCountryNameTh?: StringFieldUpdateOperationsInput | string
    productMainCountryNameEn?: StringFieldUpdateOperationsInput | string
    productCountries?: StringFieldUpdateOperationsInput | string
    productCountrySubUnits?: StringFieldUpdateOperationsInput | string
    productTags?: StringFieldUpdateOperationsInput | string
    productTagsJson?: StringFieldUpdateOperationsInput | string
    productDurationDay?: IntFieldUpdateOperationsInput | number
    productDurationNight?: IntFieldUpdateOperationsInput | number
    productDurationDayAndNight?: StringFieldUpdateOperationsInput | string
    productFreeDay?: NullableIntFieldUpdateOperationsInput | number | null
    productMealAmount?: IntFieldUpdateOperationsInput | number
    productHotelStar?: IntFieldUpdateOperationsInput | number
    productHasVisa?: IntFieldUpdateOperationsInput | number
    productVisaPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productHilightDescription?: StringFieldUpdateOperationsInput | string
    productSubCategoryLabel?: StringFieldUpdateOperationsInput | string
    productBannerUrl?: StringFieldUpdateOperationsInput | string
    productHasActivePeriods?: IntFieldUpdateOperationsInput | number
    productIsRecommended?: IntFieldUpdateOperationsInput | number
    periodGroupCode?: NullableStringFieldUpdateOperationsInput | string | null
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodIsChannelTwpOnlineBooking?: IntFieldUpdateOperationsInput | number
    periodPriceAdultDouble?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodDeposit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodCommission?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodCommissionCompany?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodCommissionSeller?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodQuantity?: IntFieldUpdateOperationsInput | number
    periodQuantityRemaining?: IntFieldUpdateOperationsInput | number
    periodSellStatusCode?: IntFieldUpdateOperationsInput | number
    periodIsActive?: IntFieldUpdateOperationsInput | number
    periodDeal?: IntFieldUpdateOperationsInput | number
    periodConfig?: IntFieldUpdateOperationsInput | number
    periodInstallmentCount?: IntFieldUpdateOperationsInput | number
    periodTransportationCategoryId?: IntFieldUpdateOperationsInput | number
    periodTransportationCategoryName?: StringFieldUpdateOperationsInput | string
    periodGoTransportationId?: IntFieldUpdateOperationsInput | number
    periodGoTransportationNameEn?: StringFieldUpdateOperationsInput | string
    periodGoTransportationCode?: StringFieldUpdateOperationsInput | string
    periodGoAirportArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoAirportDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightNumberArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightNumberDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightTimeArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightTimeDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackTransportationId?: IntFieldUpdateOperationsInput | number
    periodBackTransportationNameEn?: StringFieldUpdateOperationsInput | string
    periodBackTransportationCode?: StringFieldUpdateOperationsInput | string
    periodBackAirportArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackAirportDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightNumberArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightNumberDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightTimeArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightTimeDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductPoolUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    productRunningId?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    productSubCategoryId?: IntFieldUpdateOperationsInput | number
    productTourCode?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTwUrlPath?: StringFieldUpdateOperationsInput | string
    productName?: StringFieldUpdateOperationsInput | string
    productStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productPriceCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productHasOneCountry?: IntFieldUpdateOperationsInput | number
    productMainCountryId?: IntFieldUpdateOperationsInput | number
    productMainCountryNameTh?: StringFieldUpdateOperationsInput | string
    productMainCountryNameEn?: StringFieldUpdateOperationsInput | string
    productCountries?: StringFieldUpdateOperationsInput | string
    productCountrySubUnits?: StringFieldUpdateOperationsInput | string
    productTags?: StringFieldUpdateOperationsInput | string
    productTagsJson?: StringFieldUpdateOperationsInput | string
    productDurationDay?: IntFieldUpdateOperationsInput | number
    productDurationNight?: IntFieldUpdateOperationsInput | number
    productDurationDayAndNight?: StringFieldUpdateOperationsInput | string
    productFreeDay?: NullableIntFieldUpdateOperationsInput | number | null
    productMealAmount?: IntFieldUpdateOperationsInput | number
    productHotelStar?: IntFieldUpdateOperationsInput | number
    productHasVisa?: IntFieldUpdateOperationsInput | number
    productVisaPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productHilightDescription?: StringFieldUpdateOperationsInput | string
    productSubCategoryLabel?: StringFieldUpdateOperationsInput | string
    productBannerUrl?: StringFieldUpdateOperationsInput | string
    productHasActivePeriods?: IntFieldUpdateOperationsInput | number
    productIsRecommended?: IntFieldUpdateOperationsInput | number
    periodGroupCode?: NullableStringFieldUpdateOperationsInput | string | null
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodIsChannelTwpOnlineBooking?: IntFieldUpdateOperationsInput | number
    periodPriceAdultDouble?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodPriceAdultSingle?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTripple?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBed?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceInfant?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLand?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultDoubleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultSingleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceAdultTrippleCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildNoBedCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceChildBedCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceInfantCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodPriceJoinLandCompare?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodDeposit?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    periodCommission?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodCommissionCompany?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodCommissionSeller?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    periodQuantity?: IntFieldUpdateOperationsInput | number
    periodQuantityRemaining?: IntFieldUpdateOperationsInput | number
    periodSellStatusCode?: IntFieldUpdateOperationsInput | number
    periodIsActive?: IntFieldUpdateOperationsInput | number
    periodDeal?: IntFieldUpdateOperationsInput | number
    periodConfig?: IntFieldUpdateOperationsInput | number
    periodInstallmentCount?: IntFieldUpdateOperationsInput | number
    periodTransportationCategoryId?: IntFieldUpdateOperationsInput | number
    periodTransportationCategoryName?: StringFieldUpdateOperationsInput | string
    periodGoTransportationId?: IntFieldUpdateOperationsInput | number
    periodGoTransportationNameEn?: StringFieldUpdateOperationsInput | string
    periodGoTransportationCode?: StringFieldUpdateOperationsInput | string
    periodGoAirportArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoAirportDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightNumberArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightNumberDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightTimeArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodGoFlightTimeDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackTransportationId?: IntFieldUpdateOperationsInput | number
    periodBackTransportationNameEn?: StringFieldUpdateOperationsInput | string
    periodBackTransportationCode?: StringFieldUpdateOperationsInput | string
    periodBackAirportArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackAirportDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightNumberArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightNumberDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightTimeArrival?: NullableStringFieldUpdateOperationsInput | string | null
    periodBackFlightTimeDeparture?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyBlogCreateInput = {
    agencyId: number
    title: string
    tags: string
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
    deletedAt?: Date | string | null
    deletedByAgencyMemberId?: number | null
  }

  export type AgencyBlogUncheckedCreateInput = {
    id?: number
    agencyId: number
    title: string
    tags: string
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
    deletedAt?: Date | string | null
    deletedByAgencyMemberId?: number | null
  }

  export type AgencyBlogUpdateInput = {
    agencyId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    tags?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedByAgencyMemberId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AgencyBlogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    agencyId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    tags?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedByAgencyMemberId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AgencyBlogCreateManyInput = {
    id?: number
    agencyId: number
    title: string
    tags: string
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
    deletedAt?: Date | string | null
    deletedByAgencyMemberId?: number | null
  }

  export type AgencyBlogUpdateManyMutationInput = {
    agencyId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    tags?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedByAgencyMemberId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AgencyBlogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    agencyId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    tags?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedByAgencyMemberId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SeoArticleCreateInput = {
    agencyId: number
    parentArticleId?: number | null
    isChildOfHomePage: number
    isActive: number
    seoArticleTypeId: number
    seoTargetPageTypeId?: number | null
    seoSpecialPageId?: number | null
    countryId?: number | null
    provinceId?: number | null
    countrySubUnitId?: number | null
    proCategorySubProductId?: number | null
    code: string
    name: string
    urlPath: string
    trimmedUrlPath: string
    realUrlPath: string
    metaTitle?: string | null
    metaDescription?: string | null
    primaryKeyword?: string | null
    secondaryKeyword?: string | null
    relatedKeyword?: string | null
    note?: string | null
    desktopCoverImageFileName?: string | null
    desktopCoverImageFileSize?: number | null
    desktopCoverImageContentType?: string | null
    desktopCoverImageUpdatedAt?: Date | string | null
    mobileCoverImageFileName?: string | null
    mobileCoverImageFileSize?: number | null
    mobileCoverImageContentType?: string | null
    mobileCoverImageUpdatedAt?: Date | string | null
    coverImageAltText?: string | null
    content?: string | null
    hasContent: number
    tags?: string | null
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
  }

  export type SeoArticleUncheckedCreateInput = {
    id?: number
    agencyId: number
    parentArticleId?: number | null
    isChildOfHomePage: number
    isActive: number
    seoArticleTypeId: number
    seoTargetPageTypeId?: number | null
    seoSpecialPageId?: number | null
    countryId?: number | null
    provinceId?: number | null
    countrySubUnitId?: number | null
    proCategorySubProductId?: number | null
    code: string
    name: string
    urlPath: string
    trimmedUrlPath: string
    realUrlPath: string
    metaTitle?: string | null
    metaDescription?: string | null
    primaryKeyword?: string | null
    secondaryKeyword?: string | null
    relatedKeyword?: string | null
    note?: string | null
    desktopCoverImageFileName?: string | null
    desktopCoverImageFileSize?: number | null
    desktopCoverImageContentType?: string | null
    desktopCoverImageUpdatedAt?: Date | string | null
    mobileCoverImageFileName?: string | null
    mobileCoverImageFileSize?: number | null
    mobileCoverImageContentType?: string | null
    mobileCoverImageUpdatedAt?: Date | string | null
    coverImageAltText?: string | null
    content?: string | null
    hasContent: number
    tags?: string | null
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
  }

  export type SeoArticleUpdateInput = {
    agencyId?: IntFieldUpdateOperationsInput | number
    parentArticleId?: NullableIntFieldUpdateOperationsInput | number | null
    isChildOfHomePage?: IntFieldUpdateOperationsInput | number
    isActive?: IntFieldUpdateOperationsInput | number
    seoArticleTypeId?: IntFieldUpdateOperationsInput | number
    seoTargetPageTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    seoSpecialPageId?: NullableIntFieldUpdateOperationsInput | number | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    provinceId?: NullableIntFieldUpdateOperationsInput | number | null
    countrySubUnitId?: NullableIntFieldUpdateOperationsInput | number | null
    proCategorySubProductId?: NullableIntFieldUpdateOperationsInput | number | null
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    urlPath?: StringFieldUpdateOperationsInput | string
    trimmedUrlPath?: StringFieldUpdateOperationsInput | string
    realUrlPath?: StringFieldUpdateOperationsInput | string
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    primaryKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    relatedKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageFileSize?: NullableIntFieldUpdateOperationsInput | number | null
    desktopCoverImageContentType?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mobileCoverImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    mobileCoverImageFileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mobileCoverImageContentType?: NullableStringFieldUpdateOperationsInput | string | null
    mobileCoverImageUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    coverImageAltText?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    hasContent?: IntFieldUpdateOperationsInput | number
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
  }

  export type SeoArticleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    agencyId?: IntFieldUpdateOperationsInput | number
    parentArticleId?: NullableIntFieldUpdateOperationsInput | number | null
    isChildOfHomePage?: IntFieldUpdateOperationsInput | number
    isActive?: IntFieldUpdateOperationsInput | number
    seoArticleTypeId?: IntFieldUpdateOperationsInput | number
    seoTargetPageTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    seoSpecialPageId?: NullableIntFieldUpdateOperationsInput | number | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    provinceId?: NullableIntFieldUpdateOperationsInput | number | null
    countrySubUnitId?: NullableIntFieldUpdateOperationsInput | number | null
    proCategorySubProductId?: NullableIntFieldUpdateOperationsInput | number | null
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    urlPath?: StringFieldUpdateOperationsInput | string
    trimmedUrlPath?: StringFieldUpdateOperationsInput | string
    realUrlPath?: StringFieldUpdateOperationsInput | string
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    primaryKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    relatedKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageFileSize?: NullableIntFieldUpdateOperationsInput | number | null
    desktopCoverImageContentType?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mobileCoverImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    mobileCoverImageFileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mobileCoverImageContentType?: NullableStringFieldUpdateOperationsInput | string | null
    mobileCoverImageUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    coverImageAltText?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    hasContent?: IntFieldUpdateOperationsInput | number
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
  }

  export type SeoArticleCreateManyInput = {
    id?: number
    agencyId: number
    parentArticleId?: number | null
    isChildOfHomePage: number
    isActive: number
    seoArticleTypeId: number
    seoTargetPageTypeId?: number | null
    seoSpecialPageId?: number | null
    countryId?: number | null
    provinceId?: number | null
    countrySubUnitId?: number | null
    proCategorySubProductId?: number | null
    code: string
    name: string
    urlPath: string
    trimmedUrlPath: string
    realUrlPath: string
    metaTitle?: string | null
    metaDescription?: string | null
    primaryKeyword?: string | null
    secondaryKeyword?: string | null
    relatedKeyword?: string | null
    note?: string | null
    desktopCoverImageFileName?: string | null
    desktopCoverImageFileSize?: number | null
    desktopCoverImageContentType?: string | null
    desktopCoverImageUpdatedAt?: Date | string | null
    mobileCoverImageFileName?: string | null
    mobileCoverImageFileSize?: number | null
    mobileCoverImageContentType?: string | null
    mobileCoverImageUpdatedAt?: Date | string | null
    coverImageAltText?: string | null
    content?: string | null
    hasContent: number
    tags?: string | null
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
  }

  export type SeoArticleUpdateManyMutationInput = {
    agencyId?: IntFieldUpdateOperationsInput | number
    parentArticleId?: NullableIntFieldUpdateOperationsInput | number | null
    isChildOfHomePage?: IntFieldUpdateOperationsInput | number
    isActive?: IntFieldUpdateOperationsInput | number
    seoArticleTypeId?: IntFieldUpdateOperationsInput | number
    seoTargetPageTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    seoSpecialPageId?: NullableIntFieldUpdateOperationsInput | number | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    provinceId?: NullableIntFieldUpdateOperationsInput | number | null
    countrySubUnitId?: NullableIntFieldUpdateOperationsInput | number | null
    proCategorySubProductId?: NullableIntFieldUpdateOperationsInput | number | null
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    urlPath?: StringFieldUpdateOperationsInput | string
    trimmedUrlPath?: StringFieldUpdateOperationsInput | string
    realUrlPath?: StringFieldUpdateOperationsInput | string
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    primaryKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    relatedKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageFileSize?: NullableIntFieldUpdateOperationsInput | number | null
    desktopCoverImageContentType?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mobileCoverImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    mobileCoverImageFileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mobileCoverImageContentType?: NullableStringFieldUpdateOperationsInput | string | null
    mobileCoverImageUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    coverImageAltText?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    hasContent?: IntFieldUpdateOperationsInput | number
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
  }

  export type SeoArticleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    agencyId?: IntFieldUpdateOperationsInput | number
    parentArticleId?: NullableIntFieldUpdateOperationsInput | number | null
    isChildOfHomePage?: IntFieldUpdateOperationsInput | number
    isActive?: IntFieldUpdateOperationsInput | number
    seoArticleTypeId?: IntFieldUpdateOperationsInput | number
    seoTargetPageTypeId?: NullableIntFieldUpdateOperationsInput | number | null
    seoSpecialPageId?: NullableIntFieldUpdateOperationsInput | number | null
    countryId?: NullableIntFieldUpdateOperationsInput | number | null
    provinceId?: NullableIntFieldUpdateOperationsInput | number | null
    countrySubUnitId?: NullableIntFieldUpdateOperationsInput | number | null
    proCategorySubProductId?: NullableIntFieldUpdateOperationsInput | number | null
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    urlPath?: StringFieldUpdateOperationsInput | string
    trimmedUrlPath?: StringFieldUpdateOperationsInput | string
    realUrlPath?: StringFieldUpdateOperationsInput | string
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    primaryKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    secondaryKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    relatedKeyword?: NullableStringFieldUpdateOperationsInput | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageFileSize?: NullableIntFieldUpdateOperationsInput | number | null
    desktopCoverImageContentType?: NullableStringFieldUpdateOperationsInput | string | null
    desktopCoverImageUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mobileCoverImageFileName?: NullableStringFieldUpdateOperationsInput | string | null
    mobileCoverImageFileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mobileCoverImageContentType?: NullableStringFieldUpdateOperationsInput | string | null
    mobileCoverImageUpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    coverImageAltText?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    hasContent?: IntFieldUpdateOperationsInput | number
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
  }

  export type TwPageCreateInput = {
    agencyId?: number | null
    urlPath: string
    redirectToUrlPath?: string | null
    twPageTypeId: number
    twPageArgument: string
    lastmod: string
    priority: number
    visitedCount: number
    isActive: number
    createdAt: Date | string
    updatedAt: Date | string
    visitedAt?: Date | string | null
  }

  export type TwPageUncheckedCreateInput = {
    id?: number
    agencyId?: number | null
    urlPath: string
    redirectToUrlPath?: string | null
    twPageTypeId: number
    twPageArgument: string
    lastmod: string
    priority: number
    visitedCount: number
    isActive: number
    createdAt: Date | string
    updatedAt: Date | string
    visitedAt?: Date | string | null
  }

  export type TwPageUpdateInput = {
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: StringFieldUpdateOperationsInput | string
    redirectToUrlPath?: NullableStringFieldUpdateOperationsInput | string | null
    twPageTypeId?: IntFieldUpdateOperationsInput | number
    twPageArgument?: StringFieldUpdateOperationsInput | string
    lastmod?: StringFieldUpdateOperationsInput | string
    priority?: FloatFieldUpdateOperationsInput | number
    visitedCount?: IntFieldUpdateOperationsInput | number
    isActive?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TwPageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: StringFieldUpdateOperationsInput | string
    redirectToUrlPath?: NullableStringFieldUpdateOperationsInput | string | null
    twPageTypeId?: IntFieldUpdateOperationsInput | number
    twPageArgument?: StringFieldUpdateOperationsInput | string
    lastmod?: StringFieldUpdateOperationsInput | string
    priority?: FloatFieldUpdateOperationsInput | number
    visitedCount?: IntFieldUpdateOperationsInput | number
    isActive?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TwPageCreateManyInput = {
    id?: number
    agencyId?: number | null
    urlPath: string
    redirectToUrlPath?: string | null
    twPageTypeId: number
    twPageArgument: string
    lastmod: string
    priority: number
    visitedCount: number
    isActive: number
    createdAt: Date | string
    updatedAt: Date | string
    visitedAt?: Date | string | null
  }

  export type TwPageUpdateManyMutationInput = {
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: StringFieldUpdateOperationsInput | string
    redirectToUrlPath?: NullableStringFieldUpdateOperationsInput | string | null
    twPageTypeId?: IntFieldUpdateOperationsInput | number
    twPageArgument?: StringFieldUpdateOperationsInput | string
    lastmod?: StringFieldUpdateOperationsInput | string
    priority?: FloatFieldUpdateOperationsInput | number
    visitedCount?: IntFieldUpdateOperationsInput | number
    isActive?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TwPageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    agencyId?: NullableIntFieldUpdateOperationsInput | number | null
    urlPath?: StringFieldUpdateOperationsInput | string
    redirectToUrlPath?: NullableStringFieldUpdateOperationsInput | string | null
    twPageTypeId?: IntFieldUpdateOperationsInput | number
    twPageArgument?: StringFieldUpdateOperationsInput | string
    lastmod?: StringFieldUpdateOperationsInput | string
    priority?: FloatFieldUpdateOperationsInput | number
    visitedCount?: IntFieldUpdateOperationsInput | number
    isActive?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TwPageTypeCreateInput = {
    slug: string
    priority: number
  }

  export type TwPageTypeUncheckedCreateInput = {
    id?: number
    slug: string
    priority: number
  }

  export type TwPageTypeUpdateInput = {
    slug?: StringFieldUpdateOperationsInput | string
    priority?: FloatFieldUpdateOperationsInput | number
  }

  export type TwPageTypeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    slug?: StringFieldUpdateOperationsInput | string
    priority?: FloatFieldUpdateOperationsInput | number
  }

  export type TwPageTypeCreateManyInput = {
    id?: number
    slug: string
    priority: number
  }

  export type TwPageTypeUpdateManyMutationInput = {
    slug?: StringFieldUpdateOperationsInput | string
    priority?: FloatFieldUpdateOperationsInput | number
  }

  export type TwPageTypeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    slug?: StringFieldUpdateOperationsInput | string
    priority?: FloatFieldUpdateOperationsInput | number
  }

  export type SeoArticleTypeCreateInput = {
    name: string
    slug: string
  }

  export type SeoArticleTypeUncheckedCreateInput = {
    id?: number
    name: string
    slug: string
  }

  export type SeoArticleTypeUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type SeoArticleTypeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type SeoArticleTypeCreateManyInput = {
    id?: number
    name: string
    slug: string
  }

  export type SeoArticleTypeUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type SeoArticleTypeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type BlogDescriptionCreateInput = {
    agcyBlogsId: number
    agcyGalleriesId?: number | null
    typeSlug: string
    ordinal: number
    description?: string | null
    imageDescription?: string | null
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
    deletedAt?: Date | string | null
    deletedByAgencyMemberId?: number | null
  }

  export type BlogDescriptionUncheckedCreateInput = {
    id?: number
    agcyBlogsId: number
    agcyGalleriesId?: number | null
    typeSlug: string
    ordinal: number
    description?: string | null
    imageDescription?: string | null
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
    deletedAt?: Date | string | null
    deletedByAgencyMemberId?: number | null
  }

  export type BlogDescriptionUpdateInput = {
    agcyBlogsId?: IntFieldUpdateOperationsInput | number
    agcyGalleriesId?: NullableIntFieldUpdateOperationsInput | number | null
    typeSlug?: StringFieldUpdateOperationsInput | string
    ordinal?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageDescription?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedByAgencyMemberId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type BlogDescriptionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    agcyBlogsId?: IntFieldUpdateOperationsInput | number
    agcyGalleriesId?: NullableIntFieldUpdateOperationsInput | number | null
    typeSlug?: StringFieldUpdateOperationsInput | string
    ordinal?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageDescription?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedByAgencyMemberId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type BlogDescriptionCreateManyInput = {
    id?: number
    agcyBlogsId: number
    agcyGalleriesId?: number | null
    typeSlug: string
    ordinal: number
    description?: string | null
    imageDescription?: string | null
    createdAt: Date | string
    createdByAgencyMemberId: number
    updatedAt: Date | string
    updatedByAgencyMemberId: number
    deletedAt?: Date | string | null
    deletedByAgencyMemberId?: number | null
  }

  export type BlogDescriptionUpdateManyMutationInput = {
    agcyBlogsId?: IntFieldUpdateOperationsInput | number
    agcyGalleriesId?: NullableIntFieldUpdateOperationsInput | number | null
    typeSlug?: StringFieldUpdateOperationsInput | string
    ordinal?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageDescription?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedByAgencyMemberId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type BlogDescriptionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    agcyBlogsId?: IntFieldUpdateOperationsInput | number
    agcyGalleriesId?: NullableIntFieldUpdateOperationsInput | number | null
    typeSlug?: StringFieldUpdateOperationsInput | string
    ordinal?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageDescription?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedByAgencyMemberId?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedByAgencyMemberId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UserCreateInput = {
    name: string
    email: string
    phone?: string | null
    passwordHash: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: TourOrderCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    passwordHash: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: TourOrderUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: TourOrderUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: TourOrderUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    passwordHash: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TourOrderCreateInput = {
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    user?: UserCreateNestedOneWithoutOrdersInput
    travelers?: OrderTravelerCreateNestedManyWithoutOrderInput
    payments?: OrderPaymentCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentCreateNestedManyWithoutOrderInput
    notes?: OrderNoteCreateNestedManyWithoutOrderInput
  }

  export type TourOrderUncheckedCreateInput = {
    id?: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    userId?: number | null
    travelers?: OrderTravelerUncheckedCreateNestedManyWithoutOrderInput
    payments?: OrderPaymentUncheckedCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentUncheckedCreateNestedManyWithoutOrderInput
    notes?: OrderNoteUncheckedCreateNestedManyWithoutOrderInput
  }

  export type TourOrderUpdateInput = {
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneWithoutOrdersNestedInput
    travelers?: OrderTravelerUpdateManyWithoutOrderNestedInput
    payments?: OrderPaymentUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    travelers?: OrderTravelerUncheckedUpdateManyWithoutOrderNestedInput
    payments?: OrderPaymentUncheckedUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUncheckedUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderCreateManyInput = {
    id?: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    userId?: number | null
  }

  export type TourOrderUpdateManyMutationInput = {
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TourOrderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderTravelerCreateInput = {
    travelerType: string
    title?: string | null
    firstNameTh: string
    lastNameTh: string
    firstNameEn: string
    lastNameEn: string
    dateOfBirth?: Date | string | null
    gender?: string | null
    phone?: string | null
    email?: string | null
    passportNumber?: string | null
    passportExpiry?: Date | string | null
    passportNationality?: string | null
    passportIssueCountry?: string | null
    seatPreference?: string | null
    mealPreference?: string | null
    specialNeeds?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: TourOrderCreateNestedOneWithoutTravelersInput
  }

  export type OrderTravelerUncheckedCreateInput = {
    id?: number
    orderId: number
    travelerType: string
    title?: string | null
    firstNameTh: string
    lastNameTh: string
    firstNameEn: string
    lastNameEn: string
    dateOfBirth?: Date | string | null
    gender?: string | null
    phone?: string | null
    email?: string | null
    passportNumber?: string | null
    passportExpiry?: Date | string | null
    passportNationality?: string | null
    passportIssueCountry?: string | null
    seatPreference?: string | null
    mealPreference?: string | null
    specialNeeds?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderTravelerUpdateInput = {
    travelerType?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    firstNameTh?: StringFieldUpdateOperationsInput | string
    lastNameTh?: StringFieldUpdateOperationsInput | string
    firstNameEn?: StringFieldUpdateOperationsInput | string
    lastNameEn?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    passportNumber?: NullableStringFieldUpdateOperationsInput | string | null
    passportExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passportNationality?: NullableStringFieldUpdateOperationsInput | string | null
    passportIssueCountry?: NullableStringFieldUpdateOperationsInput | string | null
    seatPreference?: NullableStringFieldUpdateOperationsInput | string | null
    mealPreference?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: TourOrderUpdateOneRequiredWithoutTravelersNestedInput
  }

  export type OrderTravelerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    travelerType?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    firstNameTh?: StringFieldUpdateOperationsInput | string
    lastNameTh?: StringFieldUpdateOperationsInput | string
    firstNameEn?: StringFieldUpdateOperationsInput | string
    lastNameEn?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    passportNumber?: NullableStringFieldUpdateOperationsInput | string | null
    passportExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passportNationality?: NullableStringFieldUpdateOperationsInput | string | null
    passportIssueCountry?: NullableStringFieldUpdateOperationsInput | string | null
    seatPreference?: NullableStringFieldUpdateOperationsInput | string | null
    mealPreference?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderTravelerCreateManyInput = {
    id?: number
    orderId: number
    travelerType: string
    title?: string | null
    firstNameTh: string
    lastNameTh: string
    firstNameEn: string
    lastNameEn: string
    dateOfBirth?: Date | string | null
    gender?: string | null
    phone?: string | null
    email?: string | null
    passportNumber?: string | null
    passportExpiry?: Date | string | null
    passportNationality?: string | null
    passportIssueCountry?: string | null
    seatPreference?: string | null
    mealPreference?: string | null
    specialNeeds?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderTravelerUpdateManyMutationInput = {
    travelerType?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    firstNameTh?: StringFieldUpdateOperationsInput | string
    lastNameTh?: StringFieldUpdateOperationsInput | string
    firstNameEn?: StringFieldUpdateOperationsInput | string
    lastNameEn?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    passportNumber?: NullableStringFieldUpdateOperationsInput | string | null
    passportExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passportNationality?: NullableStringFieldUpdateOperationsInput | string | null
    passportIssueCountry?: NullableStringFieldUpdateOperationsInput | string | null
    seatPreference?: NullableStringFieldUpdateOperationsInput | string | null
    mealPreference?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderTravelerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    travelerType?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    firstNameTh?: StringFieldUpdateOperationsInput | string
    lastNameTh?: StringFieldUpdateOperationsInput | string
    firstNameEn?: StringFieldUpdateOperationsInput | string
    lastNameEn?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    passportNumber?: NullableStringFieldUpdateOperationsInput | string | null
    passportExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passportNationality?: NullableStringFieldUpdateOperationsInput | string | null
    passportIssueCountry?: NullableStringFieldUpdateOperationsInput | string | null
    seatPreference?: NullableStringFieldUpdateOperationsInput | string | null
    mealPreference?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderPaymentCreateInput = {
    paymentType: string
    paymentMethod: string
    paymentProvider?: string | null
    transactionId?: string | null
    referenceNumber?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    paymentStatus?: string
    gatewayResponse?: string | null
    bankResponse?: string | null
    receiptNumber?: string | null
    invoiceNumber?: string | null
    requestedAt?: Date | string
    processedAt?: Date | string | null
    completedAt?: Date | string | null
    failedAt?: Date | string | null
    refundedAt?: Date | string | null
    paymentNotes?: string | null
    failureReason?: string | null
    order: TourOrderCreateNestedOneWithoutPaymentsInput
  }

  export type OrderPaymentUncheckedCreateInput = {
    id?: number
    orderId: number
    paymentType: string
    paymentMethod: string
    paymentProvider?: string | null
    transactionId?: string | null
    referenceNumber?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    paymentStatus?: string
    gatewayResponse?: string | null
    bankResponse?: string | null
    receiptNumber?: string | null
    invoiceNumber?: string | null
    requestedAt?: Date | string
    processedAt?: Date | string | null
    completedAt?: Date | string | null
    failedAt?: Date | string | null
    refundedAt?: Date | string | null
    paymentNotes?: string | null
    failureReason?: string | null
  }

  export type OrderPaymentUpdateInput = {
    paymentType?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    gatewayResponse?: NullableStringFieldUpdateOperationsInput | string | null
    bankResponse?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentNotes?: NullableStringFieldUpdateOperationsInput | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    order?: TourOrderUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type OrderPaymentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    paymentType?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    gatewayResponse?: NullableStringFieldUpdateOperationsInput | string | null
    bankResponse?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentNotes?: NullableStringFieldUpdateOperationsInput | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderPaymentCreateManyInput = {
    id?: number
    orderId: number
    paymentType: string
    paymentMethod: string
    paymentProvider?: string | null
    transactionId?: string | null
    referenceNumber?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    paymentStatus?: string
    gatewayResponse?: string | null
    bankResponse?: string | null
    receiptNumber?: string | null
    invoiceNumber?: string | null
    requestedAt?: Date | string
    processedAt?: Date | string | null
    completedAt?: Date | string | null
    failedAt?: Date | string | null
    refundedAt?: Date | string | null
    paymentNotes?: string | null
    failureReason?: string | null
  }

  export type OrderPaymentUpdateManyMutationInput = {
    paymentType?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    gatewayResponse?: NullableStringFieldUpdateOperationsInput | string | null
    bankResponse?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentNotes?: NullableStringFieldUpdateOperationsInput | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderPaymentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    paymentType?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    gatewayResponse?: NullableStringFieldUpdateOperationsInput | string | null
    bankResponse?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentNotes?: NullableStringFieldUpdateOperationsInput | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderDocumentCreateInput = {
    documentType: string
    documentTitle: string
    documentDescription?: string | null
    fileName: string
    originalFileName: string
    filePath: string
    fileSize?: number | null
    mimeType: string
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    order: TourOrderCreateNestedOneWithoutDocumentsInput
  }

  export type OrderDocumentUncheckedCreateInput = {
    id?: number
    orderId: number
    documentType: string
    documentTitle: string
    documentDescription?: string | null
    fileName: string
    originalFileName: string
    filePath: string
    fileSize?: number | null
    mimeType: string
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderDocumentUpdateInput = {
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    documentDescription?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    originalFileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: StringFieldUpdateOperationsInput | string
    isGenerated?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: TourOrderUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type OrderDocumentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    documentDescription?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    originalFileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: StringFieldUpdateOperationsInput | string
    isGenerated?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderDocumentCreateManyInput = {
    id?: number
    orderId: number
    documentType: string
    documentTitle: string
    documentDescription?: string | null
    fileName: string
    originalFileName: string
    filePath: string
    fileSize?: number | null
    mimeType: string
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderDocumentUpdateManyMutationInput = {
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    documentDescription?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    originalFileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: StringFieldUpdateOperationsInput | string
    isGenerated?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderDocumentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    documentDescription?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    originalFileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: StringFieldUpdateOperationsInput | string
    isGenerated?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderNoteCreateInput = {
    noteType: string
    subject?: string | null
    content: string
    isInternal?: boolean
    authorType: string
    authorName?: string | null
    authorId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: TourOrderCreateNestedOneWithoutNotesInput
  }

  export type OrderNoteUncheckedCreateInput = {
    id?: number
    orderId: number
    noteType: string
    subject?: string | null
    content: string
    isInternal?: boolean
    authorType: string
    authorName?: string | null
    authorId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderNoteUpdateInput = {
    noteType?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    isInternal?: BoolFieldUpdateOperationsInput | boolean
    authorType?: StringFieldUpdateOperationsInput | string
    authorName?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: TourOrderUpdateOneRequiredWithoutNotesNestedInput
  }

  export type OrderNoteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    noteType?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    isInternal?: BoolFieldUpdateOperationsInput | boolean
    authorType?: StringFieldUpdateOperationsInput | string
    authorName?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderNoteCreateManyInput = {
    id?: number
    orderId: number
    noteType: string
    subject?: string | null
    content: string
    isInternal?: boolean
    authorType: string
    authorName?: string | null
    authorId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderNoteUpdateManyMutationInput = {
    noteType?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    isInternal?: BoolFieldUpdateOperationsInput | boolean
    authorType?: StringFieldUpdateOperationsInput | string
    authorName?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderNoteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: IntFieldUpdateOperationsInput | number
    noteType?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    isInternal?: BoolFieldUpdateOperationsInput | boolean
    authorType?: StringFieldUpdateOperationsInput | string
    authorName?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TwOrderCreateInput = {
    id?: bigint | number
    periodId?: number | null
    departureDate?: Date | string | null
    returnDate?: Date | string | null
    pricePerPerson?: Decimal | DecimalJsLike | number | string | null
    travelerCount?: number | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    basePrice?: Decimal | DecimalJsLike | number | string | null
    extraRooms?: number | null
    isEdited?: boolean | null
    address?: string | null
    tourProgramId?: string | null
    tourName?: string | null
    subDistrict?: string | null
    district?: string | null
    province?: string | null
    postalCode?: string | null
    status?: string | null
    selectedPackage?: string | null
    customerName?: string | null
    customerPhone?: string | null
    customerEmail?: string | null
  }

  export type TwOrderUncheckedCreateInput = {
    id?: bigint | number
    periodId?: number | null
    departureDate?: Date | string | null
    returnDate?: Date | string | null
    pricePerPerson?: Decimal | DecimalJsLike | number | string | null
    travelerCount?: number | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    basePrice?: Decimal | DecimalJsLike | number | string | null
    extraRooms?: number | null
    isEdited?: boolean | null
    address?: string | null
    tourProgramId?: string | null
    tourName?: string | null
    subDistrict?: string | null
    district?: string | null
    province?: string | null
    postalCode?: string | null
    status?: string | null
    selectedPackage?: string | null
    customerName?: string | null
    customerPhone?: string | null
    customerEmail?: string | null
  }

  export type TwOrderUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    periodId?: NullableIntFieldUpdateOperationsInput | number | null
    departureDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    returnDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pricePerPerson?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    travelerCount?: NullableIntFieldUpdateOperationsInput | number | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    basePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    extraRooms?: NullableIntFieldUpdateOperationsInput | number | null
    isEdited?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    tourProgramId?: NullableStringFieldUpdateOperationsInput | string | null
    tourName?: NullableStringFieldUpdateOperationsInput | string | null
    subDistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    selectedPackage?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TwOrderUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    periodId?: NullableIntFieldUpdateOperationsInput | number | null
    departureDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    returnDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pricePerPerson?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    travelerCount?: NullableIntFieldUpdateOperationsInput | number | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    basePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    extraRooms?: NullableIntFieldUpdateOperationsInput | number | null
    isEdited?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    tourProgramId?: NullableStringFieldUpdateOperationsInput | string | null
    tourName?: NullableStringFieldUpdateOperationsInput | string | null
    subDistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    selectedPackage?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TwOrderCreateManyInput = {
    id?: bigint | number
    periodId?: number | null
    departureDate?: Date | string | null
    returnDate?: Date | string | null
    pricePerPerson?: Decimal | DecimalJsLike | number | string | null
    travelerCount?: number | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    basePrice?: Decimal | DecimalJsLike | number | string | null
    extraRooms?: number | null
    isEdited?: boolean | null
    address?: string | null
    tourProgramId?: string | null
    tourName?: string | null
    subDistrict?: string | null
    district?: string | null
    province?: string | null
    postalCode?: string | null
    status?: string | null
    selectedPackage?: string | null
    customerName?: string | null
    customerPhone?: string | null
    customerEmail?: string | null
  }

  export type TwOrderUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    periodId?: NullableIntFieldUpdateOperationsInput | number | null
    departureDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    returnDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pricePerPerson?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    travelerCount?: NullableIntFieldUpdateOperationsInput | number | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    basePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    extraRooms?: NullableIntFieldUpdateOperationsInput | number | null
    isEdited?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    tourProgramId?: NullableStringFieldUpdateOperationsInput | string | null
    tourName?: NullableStringFieldUpdateOperationsInput | string | null
    subDistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    selectedPackage?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TwOrderUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    periodId?: NullableIntFieldUpdateOperationsInput | number | null
    departureDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    returnDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pricePerPerson?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    travelerCount?: NullableIntFieldUpdateOperationsInput | number | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    basePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    extraRooms?: NullableIntFieldUpdateOperationsInput | number | null
    isEdited?: NullableBoolFieldUpdateOperationsInput | boolean | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    tourProgramId?: NullableStringFieldUpdateOperationsInput | string | null
    tourName?: NullableStringFieldUpdateOperationsInput | string | null
    subDistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    selectedPackage?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ProductPoolCountOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    productRunningId?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    productSubCategoryId?: SortOrder
    productTourCode?: SortOrder
    productTourwowCode?: SortOrder
    productTwUrlPath?: SortOrder
    productName?: SortOrder
    productStartAt?: SortOrder
    productPrice?: SortOrder
    productPriceCompare?: SortOrder
    productHasOneCountry?: SortOrder
    productMainCountryId?: SortOrder
    productMainCountryNameTh?: SortOrder
    productMainCountryNameEn?: SortOrder
    productCountries?: SortOrder
    productCountrySubUnits?: SortOrder
    productTags?: SortOrder
    productTagsJson?: SortOrder
    productDurationDay?: SortOrder
    productDurationNight?: SortOrder
    productDurationDayAndNight?: SortOrder
    productFreeDay?: SortOrder
    productMealAmount?: SortOrder
    productHotelStar?: SortOrder
    productHasVisa?: SortOrder
    productVisaPrice?: SortOrder
    productHilightDescription?: SortOrder
    productSubCategoryLabel?: SortOrder
    productBannerUrl?: SortOrder
    productHasActivePeriods?: SortOrder
    productIsRecommended?: SortOrder
    periodGroupCode?: SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    periodIsChannelTwpOnlineBooking?: SortOrder
    periodPriceAdultDouble?: SortOrder
    periodPriceAdultSingle?: SortOrder
    periodPriceAdultTripple?: SortOrder
    periodPriceChildNoBed?: SortOrder
    periodPriceChildBed?: SortOrder
    periodPriceInfant?: SortOrder
    periodPriceJoinLand?: SortOrder
    periodPriceAdultDoubleCompare?: SortOrder
    periodPriceAdultSingleCompare?: SortOrder
    periodPriceAdultTrippleCompare?: SortOrder
    periodPriceChildNoBedCompare?: SortOrder
    periodPriceChildBedCompare?: SortOrder
    periodPriceInfantCompare?: SortOrder
    periodPriceJoinLandCompare?: SortOrder
    periodDeposit?: SortOrder
    periodCommission?: SortOrder
    periodCommissionCompany?: SortOrder
    periodCommissionSeller?: SortOrder
    periodQuantity?: SortOrder
    periodQuantityRemaining?: SortOrder
    periodSellStatusCode?: SortOrder
    periodIsActive?: SortOrder
    periodDeal?: SortOrder
    periodConfig?: SortOrder
    periodInstallmentCount?: SortOrder
    periodTransportationCategoryId?: SortOrder
    periodTransportationCategoryName?: SortOrder
    periodGoTransportationId?: SortOrder
    periodGoTransportationNameEn?: SortOrder
    periodGoTransportationCode?: SortOrder
    periodGoAirportArrival?: SortOrder
    periodGoAirportDeparture?: SortOrder
    periodGoFlightNumberArrival?: SortOrder
    periodGoFlightNumberDeparture?: SortOrder
    periodGoFlightTimeArrival?: SortOrder
    periodGoFlightTimeDeparture?: SortOrder
    periodBackTransportationId?: SortOrder
    periodBackTransportationNameEn?: SortOrder
    periodBackTransportationCode?: SortOrder
    periodBackAirportArrival?: SortOrder
    periodBackAirportDeparture?: SortOrder
    periodBackFlightNumberArrival?: SortOrder
    periodBackFlightNumberDeparture?: SortOrder
    periodBackFlightTimeArrival?: SortOrder
    periodBackFlightTimeDeparture?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductPoolAvgOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    productRunningId?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    productSubCategoryId?: SortOrder
    productPrice?: SortOrder
    productPriceCompare?: SortOrder
    productHasOneCountry?: SortOrder
    productMainCountryId?: SortOrder
    productDurationDay?: SortOrder
    productDurationNight?: SortOrder
    productFreeDay?: SortOrder
    productMealAmount?: SortOrder
    productHotelStar?: SortOrder
    productHasVisa?: SortOrder
    productVisaPrice?: SortOrder
    productHasActivePeriods?: SortOrder
    productIsRecommended?: SortOrder
    periodIsChannelTwpOnlineBooking?: SortOrder
    periodPriceAdultDouble?: SortOrder
    periodPriceAdultSingle?: SortOrder
    periodPriceAdultTripple?: SortOrder
    periodPriceChildNoBed?: SortOrder
    periodPriceChildBed?: SortOrder
    periodPriceInfant?: SortOrder
    periodPriceJoinLand?: SortOrder
    periodPriceAdultDoubleCompare?: SortOrder
    periodPriceAdultSingleCompare?: SortOrder
    periodPriceAdultTrippleCompare?: SortOrder
    periodPriceChildNoBedCompare?: SortOrder
    periodPriceChildBedCompare?: SortOrder
    periodPriceInfantCompare?: SortOrder
    periodPriceJoinLandCompare?: SortOrder
    periodDeposit?: SortOrder
    periodCommission?: SortOrder
    periodCommissionCompany?: SortOrder
    periodCommissionSeller?: SortOrder
    periodQuantity?: SortOrder
    periodQuantityRemaining?: SortOrder
    periodSellStatusCode?: SortOrder
    periodIsActive?: SortOrder
    periodDeal?: SortOrder
    periodConfig?: SortOrder
    periodInstallmentCount?: SortOrder
    periodTransportationCategoryId?: SortOrder
    periodGoTransportationId?: SortOrder
    periodBackTransportationId?: SortOrder
  }

  export type ProductPoolMaxOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    productRunningId?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    productSubCategoryId?: SortOrder
    productTourCode?: SortOrder
    productTourwowCode?: SortOrder
    productTwUrlPath?: SortOrder
    productName?: SortOrder
    productStartAt?: SortOrder
    productPrice?: SortOrder
    productPriceCompare?: SortOrder
    productHasOneCountry?: SortOrder
    productMainCountryId?: SortOrder
    productMainCountryNameTh?: SortOrder
    productMainCountryNameEn?: SortOrder
    productCountries?: SortOrder
    productCountrySubUnits?: SortOrder
    productTags?: SortOrder
    productTagsJson?: SortOrder
    productDurationDay?: SortOrder
    productDurationNight?: SortOrder
    productDurationDayAndNight?: SortOrder
    productFreeDay?: SortOrder
    productMealAmount?: SortOrder
    productHotelStar?: SortOrder
    productHasVisa?: SortOrder
    productVisaPrice?: SortOrder
    productHilightDescription?: SortOrder
    productSubCategoryLabel?: SortOrder
    productBannerUrl?: SortOrder
    productHasActivePeriods?: SortOrder
    productIsRecommended?: SortOrder
    periodGroupCode?: SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    periodIsChannelTwpOnlineBooking?: SortOrder
    periodPriceAdultDouble?: SortOrder
    periodPriceAdultSingle?: SortOrder
    periodPriceAdultTripple?: SortOrder
    periodPriceChildNoBed?: SortOrder
    periodPriceChildBed?: SortOrder
    periodPriceInfant?: SortOrder
    periodPriceJoinLand?: SortOrder
    periodPriceAdultDoubleCompare?: SortOrder
    periodPriceAdultSingleCompare?: SortOrder
    periodPriceAdultTrippleCompare?: SortOrder
    periodPriceChildNoBedCompare?: SortOrder
    periodPriceChildBedCompare?: SortOrder
    periodPriceInfantCompare?: SortOrder
    periodPriceJoinLandCompare?: SortOrder
    periodDeposit?: SortOrder
    periodCommission?: SortOrder
    periodCommissionCompany?: SortOrder
    periodCommissionSeller?: SortOrder
    periodQuantity?: SortOrder
    periodQuantityRemaining?: SortOrder
    periodSellStatusCode?: SortOrder
    periodIsActive?: SortOrder
    periodDeal?: SortOrder
    periodConfig?: SortOrder
    periodInstallmentCount?: SortOrder
    periodTransportationCategoryId?: SortOrder
    periodTransportationCategoryName?: SortOrder
    periodGoTransportationId?: SortOrder
    periodGoTransportationNameEn?: SortOrder
    periodGoTransportationCode?: SortOrder
    periodGoAirportArrival?: SortOrder
    periodGoAirportDeparture?: SortOrder
    periodGoFlightNumberArrival?: SortOrder
    periodGoFlightNumberDeparture?: SortOrder
    periodGoFlightTimeArrival?: SortOrder
    periodGoFlightTimeDeparture?: SortOrder
    periodBackTransportationId?: SortOrder
    periodBackTransportationNameEn?: SortOrder
    periodBackTransportationCode?: SortOrder
    periodBackAirportArrival?: SortOrder
    periodBackAirportDeparture?: SortOrder
    periodBackFlightNumberArrival?: SortOrder
    periodBackFlightNumberDeparture?: SortOrder
    periodBackFlightTimeArrival?: SortOrder
    periodBackFlightTimeDeparture?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductPoolMinOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    productRunningId?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    productSubCategoryId?: SortOrder
    productTourCode?: SortOrder
    productTourwowCode?: SortOrder
    productTwUrlPath?: SortOrder
    productName?: SortOrder
    productStartAt?: SortOrder
    productPrice?: SortOrder
    productPriceCompare?: SortOrder
    productHasOneCountry?: SortOrder
    productMainCountryId?: SortOrder
    productMainCountryNameTh?: SortOrder
    productMainCountryNameEn?: SortOrder
    productCountries?: SortOrder
    productCountrySubUnits?: SortOrder
    productTags?: SortOrder
    productTagsJson?: SortOrder
    productDurationDay?: SortOrder
    productDurationNight?: SortOrder
    productDurationDayAndNight?: SortOrder
    productFreeDay?: SortOrder
    productMealAmount?: SortOrder
    productHotelStar?: SortOrder
    productHasVisa?: SortOrder
    productVisaPrice?: SortOrder
    productHilightDescription?: SortOrder
    productSubCategoryLabel?: SortOrder
    productBannerUrl?: SortOrder
    productHasActivePeriods?: SortOrder
    productIsRecommended?: SortOrder
    periodGroupCode?: SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    periodIsChannelTwpOnlineBooking?: SortOrder
    periodPriceAdultDouble?: SortOrder
    periodPriceAdultSingle?: SortOrder
    periodPriceAdultTripple?: SortOrder
    periodPriceChildNoBed?: SortOrder
    periodPriceChildBed?: SortOrder
    periodPriceInfant?: SortOrder
    periodPriceJoinLand?: SortOrder
    periodPriceAdultDoubleCompare?: SortOrder
    periodPriceAdultSingleCompare?: SortOrder
    periodPriceAdultTrippleCompare?: SortOrder
    periodPriceChildNoBedCompare?: SortOrder
    periodPriceChildBedCompare?: SortOrder
    periodPriceInfantCompare?: SortOrder
    periodPriceJoinLandCompare?: SortOrder
    periodDeposit?: SortOrder
    periodCommission?: SortOrder
    periodCommissionCompany?: SortOrder
    periodCommissionSeller?: SortOrder
    periodQuantity?: SortOrder
    periodQuantityRemaining?: SortOrder
    periodSellStatusCode?: SortOrder
    periodIsActive?: SortOrder
    periodDeal?: SortOrder
    periodConfig?: SortOrder
    periodInstallmentCount?: SortOrder
    periodTransportationCategoryId?: SortOrder
    periodTransportationCategoryName?: SortOrder
    periodGoTransportationId?: SortOrder
    periodGoTransportationNameEn?: SortOrder
    periodGoTransportationCode?: SortOrder
    periodGoAirportArrival?: SortOrder
    periodGoAirportDeparture?: SortOrder
    periodGoFlightNumberArrival?: SortOrder
    periodGoFlightNumberDeparture?: SortOrder
    periodGoFlightTimeArrival?: SortOrder
    periodGoFlightTimeDeparture?: SortOrder
    periodBackTransportationId?: SortOrder
    periodBackTransportationNameEn?: SortOrder
    periodBackTransportationCode?: SortOrder
    periodBackAirportArrival?: SortOrder
    periodBackAirportDeparture?: SortOrder
    periodBackFlightNumberArrival?: SortOrder
    periodBackFlightNumberDeparture?: SortOrder
    periodBackFlightTimeArrival?: SortOrder
    periodBackFlightTimeDeparture?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductPoolSumOrderByAggregateInput = {
    id?: SortOrder
    supplierId?: SortOrder
    productRunningId?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    productSubCategoryId?: SortOrder
    productPrice?: SortOrder
    productPriceCompare?: SortOrder
    productHasOneCountry?: SortOrder
    productMainCountryId?: SortOrder
    productDurationDay?: SortOrder
    productDurationNight?: SortOrder
    productFreeDay?: SortOrder
    productMealAmount?: SortOrder
    productHotelStar?: SortOrder
    productHasVisa?: SortOrder
    productVisaPrice?: SortOrder
    productHasActivePeriods?: SortOrder
    productIsRecommended?: SortOrder
    periodIsChannelTwpOnlineBooking?: SortOrder
    periodPriceAdultDouble?: SortOrder
    periodPriceAdultSingle?: SortOrder
    periodPriceAdultTripple?: SortOrder
    periodPriceChildNoBed?: SortOrder
    periodPriceChildBed?: SortOrder
    periodPriceInfant?: SortOrder
    periodPriceJoinLand?: SortOrder
    periodPriceAdultDoubleCompare?: SortOrder
    periodPriceAdultSingleCompare?: SortOrder
    periodPriceAdultTrippleCompare?: SortOrder
    periodPriceChildNoBedCompare?: SortOrder
    periodPriceChildBedCompare?: SortOrder
    periodPriceInfantCompare?: SortOrder
    periodPriceJoinLandCompare?: SortOrder
    periodDeposit?: SortOrder
    periodCommission?: SortOrder
    periodCommissionCompany?: SortOrder
    periodCommissionSeller?: SortOrder
    periodQuantity?: SortOrder
    periodQuantityRemaining?: SortOrder
    periodSellStatusCode?: SortOrder
    periodIsActive?: SortOrder
    periodDeal?: SortOrder
    periodConfig?: SortOrder
    periodInstallmentCount?: SortOrder
    periodTransportationCategoryId?: SortOrder
    periodGoTransportationId?: SortOrder
    periodBackTransportationId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type AgencyBlogCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    title?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type AgencyBlogAvgOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type AgencyBlogMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    title?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type AgencyBlogMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    title?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type AgencyBlogSumOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type SeoArticleCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    parentArticleId?: SortOrder
    isChildOfHomePage?: SortOrder
    isActive?: SortOrder
    seoArticleTypeId?: SortOrder
    seoTargetPageTypeId?: SortOrder
    seoSpecialPageId?: SortOrder
    countryId?: SortOrder
    provinceId?: SortOrder
    countrySubUnitId?: SortOrder
    proCategorySubProductId?: SortOrder
    code?: SortOrder
    name?: SortOrder
    urlPath?: SortOrder
    trimmedUrlPath?: SortOrder
    realUrlPath?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    primaryKeyword?: SortOrder
    secondaryKeyword?: SortOrder
    relatedKeyword?: SortOrder
    note?: SortOrder
    desktopCoverImageFileName?: SortOrder
    desktopCoverImageFileSize?: SortOrder
    desktopCoverImageContentType?: SortOrder
    desktopCoverImageUpdatedAt?: SortOrder
    mobileCoverImageFileName?: SortOrder
    mobileCoverImageFileSize?: SortOrder
    mobileCoverImageContentType?: SortOrder
    mobileCoverImageUpdatedAt?: SortOrder
    coverImageAltText?: SortOrder
    content?: SortOrder
    hasContent?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
  }

  export type SeoArticleAvgOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    parentArticleId?: SortOrder
    isChildOfHomePage?: SortOrder
    isActive?: SortOrder
    seoArticleTypeId?: SortOrder
    seoTargetPageTypeId?: SortOrder
    seoSpecialPageId?: SortOrder
    countryId?: SortOrder
    provinceId?: SortOrder
    countrySubUnitId?: SortOrder
    proCategorySubProductId?: SortOrder
    desktopCoverImageFileSize?: SortOrder
    mobileCoverImageFileSize?: SortOrder
    hasContent?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedByAgencyMemberId?: SortOrder
  }

  export type SeoArticleMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    parentArticleId?: SortOrder
    isChildOfHomePage?: SortOrder
    isActive?: SortOrder
    seoArticleTypeId?: SortOrder
    seoTargetPageTypeId?: SortOrder
    seoSpecialPageId?: SortOrder
    countryId?: SortOrder
    provinceId?: SortOrder
    countrySubUnitId?: SortOrder
    proCategorySubProductId?: SortOrder
    code?: SortOrder
    name?: SortOrder
    urlPath?: SortOrder
    trimmedUrlPath?: SortOrder
    realUrlPath?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    primaryKeyword?: SortOrder
    secondaryKeyword?: SortOrder
    relatedKeyword?: SortOrder
    note?: SortOrder
    desktopCoverImageFileName?: SortOrder
    desktopCoverImageFileSize?: SortOrder
    desktopCoverImageContentType?: SortOrder
    desktopCoverImageUpdatedAt?: SortOrder
    mobileCoverImageFileName?: SortOrder
    mobileCoverImageFileSize?: SortOrder
    mobileCoverImageContentType?: SortOrder
    mobileCoverImageUpdatedAt?: SortOrder
    coverImageAltText?: SortOrder
    content?: SortOrder
    hasContent?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
  }

  export type SeoArticleMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    parentArticleId?: SortOrder
    isChildOfHomePage?: SortOrder
    isActive?: SortOrder
    seoArticleTypeId?: SortOrder
    seoTargetPageTypeId?: SortOrder
    seoSpecialPageId?: SortOrder
    countryId?: SortOrder
    provinceId?: SortOrder
    countrySubUnitId?: SortOrder
    proCategorySubProductId?: SortOrder
    code?: SortOrder
    name?: SortOrder
    urlPath?: SortOrder
    trimmedUrlPath?: SortOrder
    realUrlPath?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    primaryKeyword?: SortOrder
    secondaryKeyword?: SortOrder
    relatedKeyword?: SortOrder
    note?: SortOrder
    desktopCoverImageFileName?: SortOrder
    desktopCoverImageFileSize?: SortOrder
    desktopCoverImageContentType?: SortOrder
    desktopCoverImageUpdatedAt?: SortOrder
    mobileCoverImageFileName?: SortOrder
    mobileCoverImageFileSize?: SortOrder
    mobileCoverImageContentType?: SortOrder
    mobileCoverImageUpdatedAt?: SortOrder
    coverImageAltText?: SortOrder
    content?: SortOrder
    hasContent?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
  }

  export type SeoArticleSumOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    parentArticleId?: SortOrder
    isChildOfHomePage?: SortOrder
    isActive?: SortOrder
    seoArticleTypeId?: SortOrder
    seoTargetPageTypeId?: SortOrder
    seoSpecialPageId?: SortOrder
    countryId?: SortOrder
    provinceId?: SortOrder
    countrySubUnitId?: SortOrder
    proCategorySubProductId?: SortOrder
    desktopCoverImageFileSize?: SortOrder
    mobileCoverImageFileSize?: SortOrder
    hasContent?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedByAgencyMemberId?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type TwPageCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    urlPath?: SortOrder
    redirectToUrlPath?: SortOrder
    twPageTypeId?: SortOrder
    twPageArgument?: SortOrder
    lastmod?: SortOrder
    priority?: SortOrder
    visitedCount?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitedAt?: SortOrder
  }

  export type TwPageAvgOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    twPageTypeId?: SortOrder
    priority?: SortOrder
    visitedCount?: SortOrder
    isActive?: SortOrder
  }

  export type TwPageMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    urlPath?: SortOrder
    redirectToUrlPath?: SortOrder
    twPageTypeId?: SortOrder
    twPageArgument?: SortOrder
    lastmod?: SortOrder
    priority?: SortOrder
    visitedCount?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitedAt?: SortOrder
  }

  export type TwPageMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    urlPath?: SortOrder
    redirectToUrlPath?: SortOrder
    twPageTypeId?: SortOrder
    twPageArgument?: SortOrder
    lastmod?: SortOrder
    priority?: SortOrder
    visitedCount?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitedAt?: SortOrder
  }

  export type TwPageSumOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    twPageTypeId?: SortOrder
    priority?: SortOrder
    visitedCount?: SortOrder
    isActive?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type TwPageTypeCountOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    priority?: SortOrder
  }

  export type TwPageTypeAvgOrderByAggregateInput = {
    id?: SortOrder
    priority?: SortOrder
  }

  export type TwPageTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    priority?: SortOrder
  }

  export type TwPageTypeMinOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    priority?: SortOrder
  }

  export type TwPageTypeSumOrderByAggregateInput = {
    id?: SortOrder
    priority?: SortOrder
  }

  export type SeoArticleTypeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
  }

  export type SeoArticleTypeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SeoArticleTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
  }

  export type SeoArticleTypeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
  }

  export type SeoArticleTypeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BlogDescriptionCountOrderByAggregateInput = {
    id?: SortOrder
    agcyBlogsId?: SortOrder
    agcyGalleriesId?: SortOrder
    typeSlug?: SortOrder
    ordinal?: SortOrder
    description?: SortOrder
    imageDescription?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type BlogDescriptionAvgOrderByAggregateInput = {
    id?: SortOrder
    agcyBlogsId?: SortOrder
    agcyGalleriesId?: SortOrder
    ordinal?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type BlogDescriptionMaxOrderByAggregateInput = {
    id?: SortOrder
    agcyBlogsId?: SortOrder
    agcyGalleriesId?: SortOrder
    typeSlug?: SortOrder
    ordinal?: SortOrder
    description?: SortOrder
    imageDescription?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type BlogDescriptionMinOrderByAggregateInput = {
    id?: SortOrder
    agcyBlogsId?: SortOrder
    agcyGalleriesId?: SortOrder
    typeSlug?: SortOrder
    ordinal?: SortOrder
    description?: SortOrder
    imageDescription?: SortOrder
    createdAt?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedAt?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedAt?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type BlogDescriptionSumOrderByAggregateInput = {
    id?: SortOrder
    agcyBlogsId?: SortOrder
    agcyGalleriesId?: SortOrder
    ordinal?: SortOrder
    createdByAgencyMemberId?: SortOrder
    updatedByAgencyMemberId?: SortOrder
    deletedByAgencyMemberId?: SortOrder
  }

  export type TourOrderListRelationFilter = {
    every?: TourOrderWhereInput
    some?: TourOrderWhereInput
    none?: TourOrderWhereInput
  }

  export type TourOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type OrderTravelerListRelationFilter = {
    every?: OrderTravelerWhereInput
    some?: OrderTravelerWhereInput
    none?: OrderTravelerWhereInput
  }

  export type OrderPaymentListRelationFilter = {
    every?: OrderPaymentWhereInput
    some?: OrderPaymentWhereInput
    none?: OrderPaymentWhereInput
  }

  export type OrderDocumentListRelationFilter = {
    every?: OrderDocumentWhereInput
    some?: OrderDocumentWhereInput
    none?: OrderDocumentWhereInput
  }

  export type OrderNoteListRelationFilter = {
    every?: OrderNoteWhereInput
    some?: OrderNoteWhereInput
    none?: OrderNoteWhereInput
  }

  export type OrderTravelerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderPaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderNoteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TourOrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderReference?: SortOrder
    productTourwowCode?: SortOrder
    productTourCode?: SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    supplierId?: SortOrder
    tourName?: SortOrder
    tourCountry?: SortOrder
    tourDurationDays?: SortOrder
    tourDurationNights?: SortOrder
    basePrice?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    remainingAmount?: SortOrder
    currency?: SortOrder
    adultCount?: SortOrder
    childWithBedCount?: SortOrder
    childNoBedCount?: SortOrder
    infantCount?: SortOrder
    singleRoomCount?: SortOrder
    extraRoomCount?: SortOrder
    bookerTitle?: SortOrder
    bookerFirstNameTh?: SortOrder
    bookerLastNameTh?: SortOrder
    bookerFirstNameEn?: SortOrder
    bookerLastNameEn?: SortOrder
    bookerPhone?: SortOrder
    bookerEmail?: SortOrder
    bookerDateOfBirth?: SortOrder
    bookerAddress?: SortOrder
    bookerProvince?: SortOrder
    bookerPostalCode?: SortOrder
    specialRequests?: SortOrder
    dietaryRequirements?: SortOrder
    medicalConditions?: SortOrder
    orderStatus?: SortOrder
    paymentStatus?: SortOrder
    paymentDeadline?: SortOrder
    documentDeadline?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    confirmedAt?: SortOrder
    cancelledAt?: SortOrder
    completedAt?: SortOrder
    userId?: SortOrder
  }

  export type TourOrderAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    supplierId?: SortOrder
    tourDurationDays?: SortOrder
    tourDurationNights?: SortOrder
    basePrice?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    remainingAmount?: SortOrder
    adultCount?: SortOrder
    childWithBedCount?: SortOrder
    childNoBedCount?: SortOrder
    infantCount?: SortOrder
    singleRoomCount?: SortOrder
    extraRoomCount?: SortOrder
    userId?: SortOrder
  }

  export type TourOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderReference?: SortOrder
    productTourwowCode?: SortOrder
    productTourCode?: SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    supplierId?: SortOrder
    tourName?: SortOrder
    tourCountry?: SortOrder
    tourDurationDays?: SortOrder
    tourDurationNights?: SortOrder
    basePrice?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    remainingAmount?: SortOrder
    currency?: SortOrder
    adultCount?: SortOrder
    childWithBedCount?: SortOrder
    childNoBedCount?: SortOrder
    infantCount?: SortOrder
    singleRoomCount?: SortOrder
    extraRoomCount?: SortOrder
    bookerTitle?: SortOrder
    bookerFirstNameTh?: SortOrder
    bookerLastNameTh?: SortOrder
    bookerFirstNameEn?: SortOrder
    bookerLastNameEn?: SortOrder
    bookerPhone?: SortOrder
    bookerEmail?: SortOrder
    bookerDateOfBirth?: SortOrder
    bookerAddress?: SortOrder
    bookerProvince?: SortOrder
    bookerPostalCode?: SortOrder
    specialRequests?: SortOrder
    dietaryRequirements?: SortOrder
    medicalConditions?: SortOrder
    orderStatus?: SortOrder
    paymentStatus?: SortOrder
    paymentDeadline?: SortOrder
    documentDeadline?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    confirmedAt?: SortOrder
    cancelledAt?: SortOrder
    completedAt?: SortOrder
    userId?: SortOrder
  }

  export type TourOrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderReference?: SortOrder
    productTourwowCode?: SortOrder
    productTourCode?: SortOrder
    periodStartAt?: SortOrder
    periodEndAt?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    supplierId?: SortOrder
    tourName?: SortOrder
    tourCountry?: SortOrder
    tourDurationDays?: SortOrder
    tourDurationNights?: SortOrder
    basePrice?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    remainingAmount?: SortOrder
    currency?: SortOrder
    adultCount?: SortOrder
    childWithBedCount?: SortOrder
    childNoBedCount?: SortOrder
    infantCount?: SortOrder
    singleRoomCount?: SortOrder
    extraRoomCount?: SortOrder
    bookerTitle?: SortOrder
    bookerFirstNameTh?: SortOrder
    bookerLastNameTh?: SortOrder
    bookerFirstNameEn?: SortOrder
    bookerLastNameEn?: SortOrder
    bookerPhone?: SortOrder
    bookerEmail?: SortOrder
    bookerDateOfBirth?: SortOrder
    bookerAddress?: SortOrder
    bookerProvince?: SortOrder
    bookerPostalCode?: SortOrder
    specialRequests?: SortOrder
    dietaryRequirements?: SortOrder
    medicalConditions?: SortOrder
    orderStatus?: SortOrder
    paymentStatus?: SortOrder
    paymentDeadline?: SortOrder
    documentDeadline?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    confirmedAt?: SortOrder
    cancelledAt?: SortOrder
    completedAt?: SortOrder
    userId?: SortOrder
  }

  export type TourOrderSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    periodId?: SortOrder
    supplierId?: SortOrder
    tourDurationDays?: SortOrder
    tourDurationNights?: SortOrder
    basePrice?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    remainingAmount?: SortOrder
    adultCount?: SortOrder
    childWithBedCount?: SortOrder
    childNoBedCount?: SortOrder
    infantCount?: SortOrder
    singleRoomCount?: SortOrder
    extraRoomCount?: SortOrder
    userId?: SortOrder
  }

  export type TourOrderScalarRelationFilter = {
    is?: TourOrderWhereInput
    isNot?: TourOrderWhereInput
  }

  export type OrderTravelerCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    travelerType?: SortOrder
    title?: SortOrder
    firstNameTh?: SortOrder
    lastNameTh?: SortOrder
    firstNameEn?: SortOrder
    lastNameEn?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    passportNumber?: SortOrder
    passportExpiry?: SortOrder
    passportNationality?: SortOrder
    passportIssueCountry?: SortOrder
    seatPreference?: SortOrder
    mealPreference?: SortOrder
    specialNeeds?: SortOrder
    price?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderTravelerAvgOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    price?: SortOrder
  }

  export type OrderTravelerMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    travelerType?: SortOrder
    title?: SortOrder
    firstNameTh?: SortOrder
    lastNameTh?: SortOrder
    firstNameEn?: SortOrder
    lastNameEn?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    passportNumber?: SortOrder
    passportExpiry?: SortOrder
    passportNationality?: SortOrder
    passportIssueCountry?: SortOrder
    seatPreference?: SortOrder
    mealPreference?: SortOrder
    specialNeeds?: SortOrder
    price?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderTravelerMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    travelerType?: SortOrder
    title?: SortOrder
    firstNameTh?: SortOrder
    lastNameTh?: SortOrder
    firstNameEn?: SortOrder
    lastNameEn?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    passportNumber?: SortOrder
    passportExpiry?: SortOrder
    passportNationality?: SortOrder
    passportIssueCountry?: SortOrder
    seatPreference?: SortOrder
    mealPreference?: SortOrder
    specialNeeds?: SortOrder
    price?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderTravelerSumOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    price?: SortOrder
  }

  export type OrderPaymentCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    paymentType?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrder
    transactionId?: SortOrder
    referenceNumber?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    exchangeRate?: SortOrder
    paymentStatus?: SortOrder
    gatewayResponse?: SortOrder
    bankResponse?: SortOrder
    receiptNumber?: SortOrder
    invoiceNumber?: SortOrder
    requestedAt?: SortOrder
    processedAt?: SortOrder
    completedAt?: SortOrder
    failedAt?: SortOrder
    refundedAt?: SortOrder
    paymentNotes?: SortOrder
    failureReason?: SortOrder
  }

  export type OrderPaymentAvgOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    amount?: SortOrder
    exchangeRate?: SortOrder
  }

  export type OrderPaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    paymentType?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrder
    transactionId?: SortOrder
    referenceNumber?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    exchangeRate?: SortOrder
    paymentStatus?: SortOrder
    gatewayResponse?: SortOrder
    bankResponse?: SortOrder
    receiptNumber?: SortOrder
    invoiceNumber?: SortOrder
    requestedAt?: SortOrder
    processedAt?: SortOrder
    completedAt?: SortOrder
    failedAt?: SortOrder
    refundedAt?: SortOrder
    paymentNotes?: SortOrder
    failureReason?: SortOrder
  }

  export type OrderPaymentMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    paymentType?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrder
    transactionId?: SortOrder
    referenceNumber?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    exchangeRate?: SortOrder
    paymentStatus?: SortOrder
    gatewayResponse?: SortOrder
    bankResponse?: SortOrder
    receiptNumber?: SortOrder
    invoiceNumber?: SortOrder
    requestedAt?: SortOrder
    processedAt?: SortOrder
    completedAt?: SortOrder
    failedAt?: SortOrder
    refundedAt?: SortOrder
    paymentNotes?: SortOrder
    failureReason?: SortOrder
  }

  export type OrderPaymentSumOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    amount?: SortOrder
    exchangeRate?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type OrderDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    documentDescription?: SortOrder
    fileName?: SortOrder
    originalFileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isGenerated?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderDocumentAvgOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    fileSize?: SortOrder
  }

  export type OrderDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    documentDescription?: SortOrder
    fileName?: SortOrder
    originalFileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isGenerated?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    documentDescription?: SortOrder
    fileName?: SortOrder
    originalFileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isGenerated?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderDocumentSumOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    fileSize?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type OrderNoteCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    noteType?: SortOrder
    subject?: SortOrder
    content?: SortOrder
    isInternal?: SortOrder
    authorType?: SortOrder
    authorName?: SortOrder
    authorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderNoteAvgOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
  }

  export type OrderNoteMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    noteType?: SortOrder
    subject?: SortOrder
    content?: SortOrder
    isInternal?: SortOrder
    authorType?: SortOrder
    authorName?: SortOrder
    authorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderNoteMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    noteType?: SortOrder
    subject?: SortOrder
    content?: SortOrder
    isInternal?: SortOrder
    authorType?: SortOrder
    authorName?: SortOrder
    authorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderNoteSumOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type TwOrderCountOrderByAggregateInput = {
    id?: SortOrder
    periodId?: SortOrder
    departureDate?: SortOrder
    returnDate?: SortOrder
    pricePerPerson?: SortOrder
    travelerCount?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    basePrice?: SortOrder
    extraRooms?: SortOrder
    isEdited?: SortOrder
    address?: SortOrder
    tourProgramId?: SortOrder
    tourName?: SortOrder
    subDistrict?: SortOrder
    district?: SortOrder
    province?: SortOrder
    postalCode?: SortOrder
    status?: SortOrder
    selectedPackage?: SortOrder
    customerName?: SortOrder
    customerPhone?: SortOrder
    customerEmail?: SortOrder
  }

  export type TwOrderAvgOrderByAggregateInput = {
    id?: SortOrder
    periodId?: SortOrder
    pricePerPerson?: SortOrder
    travelerCount?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    basePrice?: SortOrder
    extraRooms?: SortOrder
  }

  export type TwOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    periodId?: SortOrder
    departureDate?: SortOrder
    returnDate?: SortOrder
    pricePerPerson?: SortOrder
    travelerCount?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    basePrice?: SortOrder
    extraRooms?: SortOrder
    isEdited?: SortOrder
    address?: SortOrder
    tourProgramId?: SortOrder
    tourName?: SortOrder
    subDistrict?: SortOrder
    district?: SortOrder
    province?: SortOrder
    postalCode?: SortOrder
    status?: SortOrder
    selectedPackage?: SortOrder
    customerName?: SortOrder
    customerPhone?: SortOrder
    customerEmail?: SortOrder
  }

  export type TwOrderMinOrderByAggregateInput = {
    id?: SortOrder
    periodId?: SortOrder
    departureDate?: SortOrder
    returnDate?: SortOrder
    pricePerPerson?: SortOrder
    travelerCount?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    basePrice?: SortOrder
    extraRooms?: SortOrder
    isEdited?: SortOrder
    address?: SortOrder
    tourProgramId?: SortOrder
    tourName?: SortOrder
    subDistrict?: SortOrder
    district?: SortOrder
    province?: SortOrder
    postalCode?: SortOrder
    status?: SortOrder
    selectedPackage?: SortOrder
    customerName?: SortOrder
    customerPhone?: SortOrder
    customerEmail?: SortOrder
  }

  export type TwOrderSumOrderByAggregateInput = {
    id?: SortOrder
    periodId?: SortOrder
    pricePerPerson?: SortOrder
    travelerCount?: SortOrder
    totalAmount?: SortOrder
    depositAmount?: SortOrder
    basePrice?: SortOrder
    extraRooms?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type TourOrderCreateNestedManyWithoutUserInput = {
    create?: XOR<TourOrderCreateWithoutUserInput, TourOrderUncheckedCreateWithoutUserInput> | TourOrderCreateWithoutUserInput[] | TourOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TourOrderCreateOrConnectWithoutUserInput | TourOrderCreateOrConnectWithoutUserInput[]
    createMany?: TourOrderCreateManyUserInputEnvelope
    connect?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
  }

  export type TourOrderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<TourOrderCreateWithoutUserInput, TourOrderUncheckedCreateWithoutUserInput> | TourOrderCreateWithoutUserInput[] | TourOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TourOrderCreateOrConnectWithoutUserInput | TourOrderCreateOrConnectWithoutUserInput[]
    createMany?: TourOrderCreateManyUserInputEnvelope
    connect?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
  }

  export type TourOrderUpdateManyWithoutUserNestedInput = {
    create?: XOR<TourOrderCreateWithoutUserInput, TourOrderUncheckedCreateWithoutUserInput> | TourOrderCreateWithoutUserInput[] | TourOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TourOrderCreateOrConnectWithoutUserInput | TourOrderCreateOrConnectWithoutUserInput[]
    upsert?: TourOrderUpsertWithWhereUniqueWithoutUserInput | TourOrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TourOrderCreateManyUserInputEnvelope
    set?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
    disconnect?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
    delete?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
    connect?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
    update?: TourOrderUpdateWithWhereUniqueWithoutUserInput | TourOrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TourOrderUpdateManyWithWhereWithoutUserInput | TourOrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TourOrderScalarWhereInput | TourOrderScalarWhereInput[]
  }

  export type TourOrderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<TourOrderCreateWithoutUserInput, TourOrderUncheckedCreateWithoutUserInput> | TourOrderCreateWithoutUserInput[] | TourOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TourOrderCreateOrConnectWithoutUserInput | TourOrderCreateOrConnectWithoutUserInput[]
    upsert?: TourOrderUpsertWithWhereUniqueWithoutUserInput | TourOrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TourOrderCreateManyUserInputEnvelope
    set?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
    disconnect?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
    delete?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
    connect?: TourOrderWhereUniqueInput | TourOrderWhereUniqueInput[]
    update?: TourOrderUpdateWithWhereUniqueWithoutUserInput | TourOrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TourOrderUpdateManyWithWhereWithoutUserInput | TourOrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TourOrderScalarWhereInput | TourOrderScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutOrdersInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type OrderTravelerCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderTravelerCreateWithoutOrderInput, OrderTravelerUncheckedCreateWithoutOrderInput> | OrderTravelerCreateWithoutOrderInput[] | OrderTravelerUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderTravelerCreateOrConnectWithoutOrderInput | OrderTravelerCreateOrConnectWithoutOrderInput[]
    createMany?: OrderTravelerCreateManyOrderInputEnvelope
    connect?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
  }

  export type OrderPaymentCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderPaymentCreateWithoutOrderInput, OrderPaymentUncheckedCreateWithoutOrderInput> | OrderPaymentCreateWithoutOrderInput[] | OrderPaymentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderPaymentCreateOrConnectWithoutOrderInput | OrderPaymentCreateOrConnectWithoutOrderInput[]
    createMany?: OrderPaymentCreateManyOrderInputEnvelope
    connect?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
  }

  export type OrderDocumentCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderDocumentCreateWithoutOrderInput, OrderDocumentUncheckedCreateWithoutOrderInput> | OrderDocumentCreateWithoutOrderInput[] | OrderDocumentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderDocumentCreateOrConnectWithoutOrderInput | OrderDocumentCreateOrConnectWithoutOrderInput[]
    createMany?: OrderDocumentCreateManyOrderInputEnvelope
    connect?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
  }

  export type OrderNoteCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderNoteCreateWithoutOrderInput, OrderNoteUncheckedCreateWithoutOrderInput> | OrderNoteCreateWithoutOrderInput[] | OrderNoteUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderNoteCreateOrConnectWithoutOrderInput | OrderNoteCreateOrConnectWithoutOrderInput[]
    createMany?: OrderNoteCreateManyOrderInputEnvelope
    connect?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
  }

  export type OrderTravelerUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderTravelerCreateWithoutOrderInput, OrderTravelerUncheckedCreateWithoutOrderInput> | OrderTravelerCreateWithoutOrderInput[] | OrderTravelerUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderTravelerCreateOrConnectWithoutOrderInput | OrderTravelerCreateOrConnectWithoutOrderInput[]
    createMany?: OrderTravelerCreateManyOrderInputEnvelope
    connect?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
  }

  export type OrderPaymentUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderPaymentCreateWithoutOrderInput, OrderPaymentUncheckedCreateWithoutOrderInput> | OrderPaymentCreateWithoutOrderInput[] | OrderPaymentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderPaymentCreateOrConnectWithoutOrderInput | OrderPaymentCreateOrConnectWithoutOrderInput[]
    createMany?: OrderPaymentCreateManyOrderInputEnvelope
    connect?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
  }

  export type OrderDocumentUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderDocumentCreateWithoutOrderInput, OrderDocumentUncheckedCreateWithoutOrderInput> | OrderDocumentCreateWithoutOrderInput[] | OrderDocumentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderDocumentCreateOrConnectWithoutOrderInput | OrderDocumentCreateOrConnectWithoutOrderInput[]
    createMany?: OrderDocumentCreateManyOrderInputEnvelope
    connect?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
  }

  export type OrderNoteUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderNoteCreateWithoutOrderInput, OrderNoteUncheckedCreateWithoutOrderInput> | OrderNoteCreateWithoutOrderInput[] | OrderNoteUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderNoteCreateOrConnectWithoutOrderInput | OrderNoteCreateOrConnectWithoutOrderInput[]
    createMany?: OrderNoteCreateManyOrderInputEnvelope
    connect?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    upsert?: UserUpsertWithoutOrdersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersInput, UserUpdateWithoutOrdersInput>, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type OrderTravelerUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderTravelerCreateWithoutOrderInput, OrderTravelerUncheckedCreateWithoutOrderInput> | OrderTravelerCreateWithoutOrderInput[] | OrderTravelerUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderTravelerCreateOrConnectWithoutOrderInput | OrderTravelerCreateOrConnectWithoutOrderInput[]
    upsert?: OrderTravelerUpsertWithWhereUniqueWithoutOrderInput | OrderTravelerUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderTravelerCreateManyOrderInputEnvelope
    set?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
    disconnect?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
    delete?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
    connect?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
    update?: OrderTravelerUpdateWithWhereUniqueWithoutOrderInput | OrderTravelerUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderTravelerUpdateManyWithWhereWithoutOrderInput | OrderTravelerUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderTravelerScalarWhereInput | OrderTravelerScalarWhereInput[]
  }

  export type OrderPaymentUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderPaymentCreateWithoutOrderInput, OrderPaymentUncheckedCreateWithoutOrderInput> | OrderPaymentCreateWithoutOrderInput[] | OrderPaymentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderPaymentCreateOrConnectWithoutOrderInput | OrderPaymentCreateOrConnectWithoutOrderInput[]
    upsert?: OrderPaymentUpsertWithWhereUniqueWithoutOrderInput | OrderPaymentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderPaymentCreateManyOrderInputEnvelope
    set?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
    disconnect?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
    delete?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
    connect?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
    update?: OrderPaymentUpdateWithWhereUniqueWithoutOrderInput | OrderPaymentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderPaymentUpdateManyWithWhereWithoutOrderInput | OrderPaymentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderPaymentScalarWhereInput | OrderPaymentScalarWhereInput[]
  }

  export type OrderDocumentUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderDocumentCreateWithoutOrderInput, OrderDocumentUncheckedCreateWithoutOrderInput> | OrderDocumentCreateWithoutOrderInput[] | OrderDocumentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderDocumentCreateOrConnectWithoutOrderInput | OrderDocumentCreateOrConnectWithoutOrderInput[]
    upsert?: OrderDocumentUpsertWithWhereUniqueWithoutOrderInput | OrderDocumentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderDocumentCreateManyOrderInputEnvelope
    set?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
    disconnect?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
    delete?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
    connect?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
    update?: OrderDocumentUpdateWithWhereUniqueWithoutOrderInput | OrderDocumentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderDocumentUpdateManyWithWhereWithoutOrderInput | OrderDocumentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderDocumentScalarWhereInput | OrderDocumentScalarWhereInput[]
  }

  export type OrderNoteUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderNoteCreateWithoutOrderInput, OrderNoteUncheckedCreateWithoutOrderInput> | OrderNoteCreateWithoutOrderInput[] | OrderNoteUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderNoteCreateOrConnectWithoutOrderInput | OrderNoteCreateOrConnectWithoutOrderInput[]
    upsert?: OrderNoteUpsertWithWhereUniqueWithoutOrderInput | OrderNoteUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderNoteCreateManyOrderInputEnvelope
    set?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
    disconnect?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
    delete?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
    connect?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
    update?: OrderNoteUpdateWithWhereUniqueWithoutOrderInput | OrderNoteUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderNoteUpdateManyWithWhereWithoutOrderInput | OrderNoteUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderNoteScalarWhereInput | OrderNoteScalarWhereInput[]
  }

  export type OrderTravelerUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderTravelerCreateWithoutOrderInput, OrderTravelerUncheckedCreateWithoutOrderInput> | OrderTravelerCreateWithoutOrderInput[] | OrderTravelerUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderTravelerCreateOrConnectWithoutOrderInput | OrderTravelerCreateOrConnectWithoutOrderInput[]
    upsert?: OrderTravelerUpsertWithWhereUniqueWithoutOrderInput | OrderTravelerUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderTravelerCreateManyOrderInputEnvelope
    set?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
    disconnect?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
    delete?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
    connect?: OrderTravelerWhereUniqueInput | OrderTravelerWhereUniqueInput[]
    update?: OrderTravelerUpdateWithWhereUniqueWithoutOrderInput | OrderTravelerUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderTravelerUpdateManyWithWhereWithoutOrderInput | OrderTravelerUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderTravelerScalarWhereInput | OrderTravelerScalarWhereInput[]
  }

  export type OrderPaymentUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderPaymentCreateWithoutOrderInput, OrderPaymentUncheckedCreateWithoutOrderInput> | OrderPaymentCreateWithoutOrderInput[] | OrderPaymentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderPaymentCreateOrConnectWithoutOrderInput | OrderPaymentCreateOrConnectWithoutOrderInput[]
    upsert?: OrderPaymentUpsertWithWhereUniqueWithoutOrderInput | OrderPaymentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderPaymentCreateManyOrderInputEnvelope
    set?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
    disconnect?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
    delete?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
    connect?: OrderPaymentWhereUniqueInput | OrderPaymentWhereUniqueInput[]
    update?: OrderPaymentUpdateWithWhereUniqueWithoutOrderInput | OrderPaymentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderPaymentUpdateManyWithWhereWithoutOrderInput | OrderPaymentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderPaymentScalarWhereInput | OrderPaymentScalarWhereInput[]
  }

  export type OrderDocumentUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderDocumentCreateWithoutOrderInput, OrderDocumentUncheckedCreateWithoutOrderInput> | OrderDocumentCreateWithoutOrderInput[] | OrderDocumentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderDocumentCreateOrConnectWithoutOrderInput | OrderDocumentCreateOrConnectWithoutOrderInput[]
    upsert?: OrderDocumentUpsertWithWhereUniqueWithoutOrderInput | OrderDocumentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderDocumentCreateManyOrderInputEnvelope
    set?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
    disconnect?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
    delete?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
    connect?: OrderDocumentWhereUniqueInput | OrderDocumentWhereUniqueInput[]
    update?: OrderDocumentUpdateWithWhereUniqueWithoutOrderInput | OrderDocumentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderDocumentUpdateManyWithWhereWithoutOrderInput | OrderDocumentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderDocumentScalarWhereInput | OrderDocumentScalarWhereInput[]
  }

  export type OrderNoteUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderNoteCreateWithoutOrderInput, OrderNoteUncheckedCreateWithoutOrderInput> | OrderNoteCreateWithoutOrderInput[] | OrderNoteUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderNoteCreateOrConnectWithoutOrderInput | OrderNoteCreateOrConnectWithoutOrderInput[]
    upsert?: OrderNoteUpsertWithWhereUniqueWithoutOrderInput | OrderNoteUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderNoteCreateManyOrderInputEnvelope
    set?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
    disconnect?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
    delete?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
    connect?: OrderNoteWhereUniqueInput | OrderNoteWhereUniqueInput[]
    update?: OrderNoteUpdateWithWhereUniqueWithoutOrderInput | OrderNoteUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderNoteUpdateManyWithWhereWithoutOrderInput | OrderNoteUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderNoteScalarWhereInput | OrderNoteScalarWhereInput[]
  }

  export type TourOrderCreateNestedOneWithoutTravelersInput = {
    create?: XOR<TourOrderCreateWithoutTravelersInput, TourOrderUncheckedCreateWithoutTravelersInput>
    connectOrCreate?: TourOrderCreateOrConnectWithoutTravelersInput
    connect?: TourOrderWhereUniqueInput
  }

  export type TourOrderUpdateOneRequiredWithoutTravelersNestedInput = {
    create?: XOR<TourOrderCreateWithoutTravelersInput, TourOrderUncheckedCreateWithoutTravelersInput>
    connectOrCreate?: TourOrderCreateOrConnectWithoutTravelersInput
    upsert?: TourOrderUpsertWithoutTravelersInput
    connect?: TourOrderWhereUniqueInput
    update?: XOR<XOR<TourOrderUpdateToOneWithWhereWithoutTravelersInput, TourOrderUpdateWithoutTravelersInput>, TourOrderUncheckedUpdateWithoutTravelersInput>
  }

  export type TourOrderCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<TourOrderCreateWithoutPaymentsInput, TourOrderUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: TourOrderCreateOrConnectWithoutPaymentsInput
    connect?: TourOrderWhereUniqueInput
  }

  export type TourOrderUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<TourOrderCreateWithoutPaymentsInput, TourOrderUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: TourOrderCreateOrConnectWithoutPaymentsInput
    upsert?: TourOrderUpsertWithoutPaymentsInput
    connect?: TourOrderWhereUniqueInput
    update?: XOR<XOR<TourOrderUpdateToOneWithWhereWithoutPaymentsInput, TourOrderUpdateWithoutPaymentsInput>, TourOrderUncheckedUpdateWithoutPaymentsInput>
  }

  export type TourOrderCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<TourOrderCreateWithoutDocumentsInput, TourOrderUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: TourOrderCreateOrConnectWithoutDocumentsInput
    connect?: TourOrderWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type TourOrderUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<TourOrderCreateWithoutDocumentsInput, TourOrderUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: TourOrderCreateOrConnectWithoutDocumentsInput
    upsert?: TourOrderUpsertWithoutDocumentsInput
    connect?: TourOrderWhereUniqueInput
    update?: XOR<XOR<TourOrderUpdateToOneWithWhereWithoutDocumentsInput, TourOrderUpdateWithoutDocumentsInput>, TourOrderUncheckedUpdateWithoutDocumentsInput>
  }

  export type TourOrderCreateNestedOneWithoutNotesInput = {
    create?: XOR<TourOrderCreateWithoutNotesInput, TourOrderUncheckedCreateWithoutNotesInput>
    connectOrCreate?: TourOrderCreateOrConnectWithoutNotesInput
    connect?: TourOrderWhereUniqueInput
  }

  export type TourOrderUpdateOneRequiredWithoutNotesNestedInput = {
    create?: XOR<TourOrderCreateWithoutNotesInput, TourOrderUncheckedCreateWithoutNotesInput>
    connectOrCreate?: TourOrderCreateOrConnectWithoutNotesInput
    upsert?: TourOrderUpsertWithoutNotesInput
    connect?: TourOrderWhereUniqueInput
    update?: XOR<XOR<TourOrderUpdateToOneWithWhereWithoutNotesInput, TourOrderUpdateWithoutNotesInput>, TourOrderUncheckedUpdateWithoutNotesInput>
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type TourOrderCreateWithoutUserInput = {
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    travelers?: OrderTravelerCreateNestedManyWithoutOrderInput
    payments?: OrderPaymentCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentCreateNestedManyWithoutOrderInput
    notes?: OrderNoteCreateNestedManyWithoutOrderInput
  }

  export type TourOrderUncheckedCreateWithoutUserInput = {
    id?: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    travelers?: OrderTravelerUncheckedCreateNestedManyWithoutOrderInput
    payments?: OrderPaymentUncheckedCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentUncheckedCreateNestedManyWithoutOrderInput
    notes?: OrderNoteUncheckedCreateNestedManyWithoutOrderInput
  }

  export type TourOrderCreateOrConnectWithoutUserInput = {
    where: TourOrderWhereUniqueInput
    create: XOR<TourOrderCreateWithoutUserInput, TourOrderUncheckedCreateWithoutUserInput>
  }

  export type TourOrderCreateManyUserInputEnvelope = {
    data: TourOrderCreateManyUserInput | TourOrderCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type TourOrderUpsertWithWhereUniqueWithoutUserInput = {
    where: TourOrderWhereUniqueInput
    update: XOR<TourOrderUpdateWithoutUserInput, TourOrderUncheckedUpdateWithoutUserInput>
    create: XOR<TourOrderCreateWithoutUserInput, TourOrderUncheckedCreateWithoutUserInput>
  }

  export type TourOrderUpdateWithWhereUniqueWithoutUserInput = {
    where: TourOrderWhereUniqueInput
    data: XOR<TourOrderUpdateWithoutUserInput, TourOrderUncheckedUpdateWithoutUserInput>
  }

  export type TourOrderUpdateManyWithWhereWithoutUserInput = {
    where: TourOrderScalarWhereInput
    data: XOR<TourOrderUpdateManyMutationInput, TourOrderUncheckedUpdateManyWithoutUserInput>
  }

  export type TourOrderScalarWhereInput = {
    AND?: TourOrderScalarWhereInput | TourOrderScalarWhereInput[]
    OR?: TourOrderScalarWhereInput[]
    NOT?: TourOrderScalarWhereInput | TourOrderScalarWhereInput[]
    id?: IntFilter<"TourOrder"> | number
    orderReference?: StringFilter<"TourOrder"> | string
    productTourwowCode?: StringFilter<"TourOrder"> | string
    productTourCode?: StringFilter<"TourOrder"> | string
    periodStartAt?: DateTimeFilter<"TourOrder"> | Date | string
    periodEndAt?: DateTimeFilter<"TourOrder"> | Date | string
    productId?: IntFilter<"TourOrder"> | number
    periodId?: IntFilter<"TourOrder"> | number
    supplierId?: IntFilter<"TourOrder"> | number
    tourName?: StringFilter<"TourOrder"> | string
    tourCountry?: StringFilter<"TourOrder"> | string
    tourDurationDays?: IntFilter<"TourOrder"> | number
    tourDurationNights?: IntFilter<"TourOrder"> | number
    basePrice?: DecimalFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string
    depositAmount?: DecimalNullableFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: DecimalNullableFilter<"TourOrder"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringFilter<"TourOrder"> | string
    adultCount?: IntFilter<"TourOrder"> | number
    childWithBedCount?: IntFilter<"TourOrder"> | number
    childNoBedCount?: IntFilter<"TourOrder"> | number
    infantCount?: IntFilter<"TourOrder"> | number
    singleRoomCount?: IntFilter<"TourOrder"> | number
    extraRoomCount?: IntFilter<"TourOrder"> | number
    bookerTitle?: StringNullableFilter<"TourOrder"> | string | null
    bookerFirstNameTh?: StringFilter<"TourOrder"> | string
    bookerLastNameTh?: StringFilter<"TourOrder"> | string
    bookerFirstNameEn?: StringFilter<"TourOrder"> | string
    bookerLastNameEn?: StringFilter<"TourOrder"> | string
    bookerPhone?: StringFilter<"TourOrder"> | string
    bookerEmail?: StringFilter<"TourOrder"> | string
    bookerDateOfBirth?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    bookerAddress?: StringNullableFilter<"TourOrder"> | string | null
    bookerProvince?: StringNullableFilter<"TourOrder"> | string | null
    bookerPostalCode?: StringNullableFilter<"TourOrder"> | string | null
    specialRequests?: StringNullableFilter<"TourOrder"> | string | null
    dietaryRequirements?: StringNullableFilter<"TourOrder"> | string | null
    medicalConditions?: StringNullableFilter<"TourOrder"> | string | null
    orderStatus?: StringFilter<"TourOrder"> | string
    paymentStatus?: StringFilter<"TourOrder"> | string
    paymentDeadline?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    documentDeadline?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    createdAt?: DateTimeFilter<"TourOrder"> | Date | string
    updatedAt?: DateTimeFilter<"TourOrder"> | Date | string
    confirmedAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"TourOrder"> | Date | string | null
    userId?: IntNullableFilter<"TourOrder"> | number | null
  }

  export type UserCreateWithoutOrdersInput = {
    name: string
    email: string
    phone?: string | null
    passwordHash: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUncheckedCreateWithoutOrdersInput = {
    id?: number
    name: string
    email: string
    phone?: string | null
    passwordHash: string
    role?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCreateOrConnectWithoutOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
  }

  export type OrderTravelerCreateWithoutOrderInput = {
    travelerType: string
    title?: string | null
    firstNameTh: string
    lastNameTh: string
    firstNameEn: string
    lastNameEn: string
    dateOfBirth?: Date | string | null
    gender?: string | null
    phone?: string | null
    email?: string | null
    passportNumber?: string | null
    passportExpiry?: Date | string | null
    passportNationality?: string | null
    passportIssueCountry?: string | null
    seatPreference?: string | null
    mealPreference?: string | null
    specialNeeds?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderTravelerUncheckedCreateWithoutOrderInput = {
    id?: number
    travelerType: string
    title?: string | null
    firstNameTh: string
    lastNameTh: string
    firstNameEn: string
    lastNameEn: string
    dateOfBirth?: Date | string | null
    gender?: string | null
    phone?: string | null
    email?: string | null
    passportNumber?: string | null
    passportExpiry?: Date | string | null
    passportNationality?: string | null
    passportIssueCountry?: string | null
    seatPreference?: string | null
    mealPreference?: string | null
    specialNeeds?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderTravelerCreateOrConnectWithoutOrderInput = {
    where: OrderTravelerWhereUniqueInput
    create: XOR<OrderTravelerCreateWithoutOrderInput, OrderTravelerUncheckedCreateWithoutOrderInput>
  }

  export type OrderTravelerCreateManyOrderInputEnvelope = {
    data: OrderTravelerCreateManyOrderInput | OrderTravelerCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderPaymentCreateWithoutOrderInput = {
    paymentType: string
    paymentMethod: string
    paymentProvider?: string | null
    transactionId?: string | null
    referenceNumber?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    paymentStatus?: string
    gatewayResponse?: string | null
    bankResponse?: string | null
    receiptNumber?: string | null
    invoiceNumber?: string | null
    requestedAt?: Date | string
    processedAt?: Date | string | null
    completedAt?: Date | string | null
    failedAt?: Date | string | null
    refundedAt?: Date | string | null
    paymentNotes?: string | null
    failureReason?: string | null
  }

  export type OrderPaymentUncheckedCreateWithoutOrderInput = {
    id?: number
    paymentType: string
    paymentMethod: string
    paymentProvider?: string | null
    transactionId?: string | null
    referenceNumber?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    paymentStatus?: string
    gatewayResponse?: string | null
    bankResponse?: string | null
    receiptNumber?: string | null
    invoiceNumber?: string | null
    requestedAt?: Date | string
    processedAt?: Date | string | null
    completedAt?: Date | string | null
    failedAt?: Date | string | null
    refundedAt?: Date | string | null
    paymentNotes?: string | null
    failureReason?: string | null
  }

  export type OrderPaymentCreateOrConnectWithoutOrderInput = {
    where: OrderPaymentWhereUniqueInput
    create: XOR<OrderPaymentCreateWithoutOrderInput, OrderPaymentUncheckedCreateWithoutOrderInput>
  }

  export type OrderPaymentCreateManyOrderInputEnvelope = {
    data: OrderPaymentCreateManyOrderInput | OrderPaymentCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderDocumentCreateWithoutOrderInput = {
    documentType: string
    documentTitle: string
    documentDescription?: string | null
    fileName: string
    originalFileName: string
    filePath: string
    fileSize?: number | null
    mimeType: string
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderDocumentUncheckedCreateWithoutOrderInput = {
    id?: number
    documentType: string
    documentTitle: string
    documentDescription?: string | null
    fileName: string
    originalFileName: string
    filePath: string
    fileSize?: number | null
    mimeType: string
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderDocumentCreateOrConnectWithoutOrderInput = {
    where: OrderDocumentWhereUniqueInput
    create: XOR<OrderDocumentCreateWithoutOrderInput, OrderDocumentUncheckedCreateWithoutOrderInput>
  }

  export type OrderDocumentCreateManyOrderInputEnvelope = {
    data: OrderDocumentCreateManyOrderInput | OrderDocumentCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderNoteCreateWithoutOrderInput = {
    noteType: string
    subject?: string | null
    content: string
    isInternal?: boolean
    authorType: string
    authorName?: string | null
    authorId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderNoteUncheckedCreateWithoutOrderInput = {
    id?: number
    noteType: string
    subject?: string | null
    content: string
    isInternal?: boolean
    authorType: string
    authorName?: string | null
    authorId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderNoteCreateOrConnectWithoutOrderInput = {
    where: OrderNoteWhereUniqueInput
    create: XOR<OrderNoteCreateWithoutOrderInput, OrderNoteUncheckedCreateWithoutOrderInput>
  }

  export type OrderNoteCreateManyOrderInputEnvelope = {
    data: OrderNoteCreateManyOrderInput | OrderNoteCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOrdersInput = {
    update: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type UserUpdateWithoutOrdersInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderTravelerUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderTravelerWhereUniqueInput
    update: XOR<OrderTravelerUpdateWithoutOrderInput, OrderTravelerUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderTravelerCreateWithoutOrderInput, OrderTravelerUncheckedCreateWithoutOrderInput>
  }

  export type OrderTravelerUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderTravelerWhereUniqueInput
    data: XOR<OrderTravelerUpdateWithoutOrderInput, OrderTravelerUncheckedUpdateWithoutOrderInput>
  }

  export type OrderTravelerUpdateManyWithWhereWithoutOrderInput = {
    where: OrderTravelerScalarWhereInput
    data: XOR<OrderTravelerUpdateManyMutationInput, OrderTravelerUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderTravelerScalarWhereInput = {
    AND?: OrderTravelerScalarWhereInput | OrderTravelerScalarWhereInput[]
    OR?: OrderTravelerScalarWhereInput[]
    NOT?: OrderTravelerScalarWhereInput | OrderTravelerScalarWhereInput[]
    id?: IntFilter<"OrderTraveler"> | number
    orderId?: IntFilter<"OrderTraveler"> | number
    travelerType?: StringFilter<"OrderTraveler"> | string
    title?: StringNullableFilter<"OrderTraveler"> | string | null
    firstNameTh?: StringFilter<"OrderTraveler"> | string
    lastNameTh?: StringFilter<"OrderTraveler"> | string
    firstNameEn?: StringFilter<"OrderTraveler"> | string
    lastNameEn?: StringFilter<"OrderTraveler"> | string
    dateOfBirth?: DateTimeNullableFilter<"OrderTraveler"> | Date | string | null
    gender?: StringNullableFilter<"OrderTraveler"> | string | null
    phone?: StringNullableFilter<"OrderTraveler"> | string | null
    email?: StringNullableFilter<"OrderTraveler"> | string | null
    passportNumber?: StringNullableFilter<"OrderTraveler"> | string | null
    passportExpiry?: DateTimeNullableFilter<"OrderTraveler"> | Date | string | null
    passportNationality?: StringNullableFilter<"OrderTraveler"> | string | null
    passportIssueCountry?: StringNullableFilter<"OrderTraveler"> | string | null
    seatPreference?: StringNullableFilter<"OrderTraveler"> | string | null
    mealPreference?: StringNullableFilter<"OrderTraveler"> | string | null
    specialNeeds?: StringNullableFilter<"OrderTraveler"> | string | null
    price?: DecimalNullableFilter<"OrderTraveler"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"OrderTraveler"> | Date | string
    updatedAt?: DateTimeFilter<"OrderTraveler"> | Date | string
  }

  export type OrderPaymentUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderPaymentWhereUniqueInput
    update: XOR<OrderPaymentUpdateWithoutOrderInput, OrderPaymentUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderPaymentCreateWithoutOrderInput, OrderPaymentUncheckedCreateWithoutOrderInput>
  }

  export type OrderPaymentUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderPaymentWhereUniqueInput
    data: XOR<OrderPaymentUpdateWithoutOrderInput, OrderPaymentUncheckedUpdateWithoutOrderInput>
  }

  export type OrderPaymentUpdateManyWithWhereWithoutOrderInput = {
    where: OrderPaymentScalarWhereInput
    data: XOR<OrderPaymentUpdateManyMutationInput, OrderPaymentUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderPaymentScalarWhereInput = {
    AND?: OrderPaymentScalarWhereInput | OrderPaymentScalarWhereInput[]
    OR?: OrderPaymentScalarWhereInput[]
    NOT?: OrderPaymentScalarWhereInput | OrderPaymentScalarWhereInput[]
    id?: IntFilter<"OrderPayment"> | number
    orderId?: IntFilter<"OrderPayment"> | number
    paymentType?: StringFilter<"OrderPayment"> | string
    paymentMethod?: StringFilter<"OrderPayment"> | string
    paymentProvider?: StringNullableFilter<"OrderPayment"> | string | null
    transactionId?: StringNullableFilter<"OrderPayment"> | string | null
    referenceNumber?: StringNullableFilter<"OrderPayment"> | string | null
    amount?: DecimalFilter<"OrderPayment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"OrderPayment"> | string
    exchangeRate?: DecimalNullableFilter<"OrderPayment"> | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFilter<"OrderPayment"> | string
    gatewayResponse?: StringNullableFilter<"OrderPayment"> | string | null
    bankResponse?: StringNullableFilter<"OrderPayment"> | string | null
    receiptNumber?: StringNullableFilter<"OrderPayment"> | string | null
    invoiceNumber?: StringNullableFilter<"OrderPayment"> | string | null
    requestedAt?: DateTimeFilter<"OrderPayment"> | Date | string
    processedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    failedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    refundedAt?: DateTimeNullableFilter<"OrderPayment"> | Date | string | null
    paymentNotes?: StringNullableFilter<"OrderPayment"> | string | null
    failureReason?: StringNullableFilter<"OrderPayment"> | string | null
  }

  export type OrderDocumentUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderDocumentWhereUniqueInput
    update: XOR<OrderDocumentUpdateWithoutOrderInput, OrderDocumentUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderDocumentCreateWithoutOrderInput, OrderDocumentUncheckedCreateWithoutOrderInput>
  }

  export type OrderDocumentUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderDocumentWhereUniqueInput
    data: XOR<OrderDocumentUpdateWithoutOrderInput, OrderDocumentUncheckedUpdateWithoutOrderInput>
  }

  export type OrderDocumentUpdateManyWithWhereWithoutOrderInput = {
    where: OrderDocumentScalarWhereInput
    data: XOR<OrderDocumentUpdateManyMutationInput, OrderDocumentUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderDocumentScalarWhereInput = {
    AND?: OrderDocumentScalarWhereInput | OrderDocumentScalarWhereInput[]
    OR?: OrderDocumentScalarWhereInput[]
    NOT?: OrderDocumentScalarWhereInput | OrderDocumentScalarWhereInput[]
    id?: IntFilter<"OrderDocument"> | number
    orderId?: IntFilter<"OrderDocument"> | number
    documentType?: StringFilter<"OrderDocument"> | string
    documentTitle?: StringFilter<"OrderDocument"> | string
    documentDescription?: StringNullableFilter<"OrderDocument"> | string | null
    fileName?: StringFilter<"OrderDocument"> | string
    originalFileName?: StringFilter<"OrderDocument"> | string
    filePath?: StringFilter<"OrderDocument"> | string
    fileSize?: IntNullableFilter<"OrderDocument"> | number | null
    mimeType?: StringFilter<"OrderDocument"> | string
    isGenerated?: BoolFilter<"OrderDocument"> | boolean
    isActive?: BoolFilter<"OrderDocument"> | boolean
    createdAt?: DateTimeFilter<"OrderDocument"> | Date | string
    updatedAt?: DateTimeFilter<"OrderDocument"> | Date | string
  }

  export type OrderNoteUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderNoteWhereUniqueInput
    update: XOR<OrderNoteUpdateWithoutOrderInput, OrderNoteUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderNoteCreateWithoutOrderInput, OrderNoteUncheckedCreateWithoutOrderInput>
  }

  export type OrderNoteUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderNoteWhereUniqueInput
    data: XOR<OrderNoteUpdateWithoutOrderInput, OrderNoteUncheckedUpdateWithoutOrderInput>
  }

  export type OrderNoteUpdateManyWithWhereWithoutOrderInput = {
    where: OrderNoteScalarWhereInput
    data: XOR<OrderNoteUpdateManyMutationInput, OrderNoteUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderNoteScalarWhereInput = {
    AND?: OrderNoteScalarWhereInput | OrderNoteScalarWhereInput[]
    OR?: OrderNoteScalarWhereInput[]
    NOT?: OrderNoteScalarWhereInput | OrderNoteScalarWhereInput[]
    id?: IntFilter<"OrderNote"> | number
    orderId?: IntFilter<"OrderNote"> | number
    noteType?: StringFilter<"OrderNote"> | string
    subject?: StringNullableFilter<"OrderNote"> | string | null
    content?: StringFilter<"OrderNote"> | string
    isInternal?: BoolFilter<"OrderNote"> | boolean
    authorType?: StringFilter<"OrderNote"> | string
    authorName?: StringNullableFilter<"OrderNote"> | string | null
    authorId?: StringNullableFilter<"OrderNote"> | string | null
    createdAt?: DateTimeFilter<"OrderNote"> | Date | string
    updatedAt?: DateTimeFilter<"OrderNote"> | Date | string
  }

  export type TourOrderCreateWithoutTravelersInput = {
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    user?: UserCreateNestedOneWithoutOrdersInput
    payments?: OrderPaymentCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentCreateNestedManyWithoutOrderInput
    notes?: OrderNoteCreateNestedManyWithoutOrderInput
  }

  export type TourOrderUncheckedCreateWithoutTravelersInput = {
    id?: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    userId?: number | null
    payments?: OrderPaymentUncheckedCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentUncheckedCreateNestedManyWithoutOrderInput
    notes?: OrderNoteUncheckedCreateNestedManyWithoutOrderInput
  }

  export type TourOrderCreateOrConnectWithoutTravelersInput = {
    where: TourOrderWhereUniqueInput
    create: XOR<TourOrderCreateWithoutTravelersInput, TourOrderUncheckedCreateWithoutTravelersInput>
  }

  export type TourOrderUpsertWithoutTravelersInput = {
    update: XOR<TourOrderUpdateWithoutTravelersInput, TourOrderUncheckedUpdateWithoutTravelersInput>
    create: XOR<TourOrderCreateWithoutTravelersInput, TourOrderUncheckedCreateWithoutTravelersInput>
    where?: TourOrderWhereInput
  }

  export type TourOrderUpdateToOneWithWhereWithoutTravelersInput = {
    where?: TourOrderWhereInput
    data: XOR<TourOrderUpdateWithoutTravelersInput, TourOrderUncheckedUpdateWithoutTravelersInput>
  }

  export type TourOrderUpdateWithoutTravelersInput = {
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneWithoutOrdersNestedInput
    payments?: OrderPaymentUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderUncheckedUpdateWithoutTravelersInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    payments?: OrderPaymentUncheckedUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUncheckedUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderCreateWithoutPaymentsInput = {
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    user?: UserCreateNestedOneWithoutOrdersInput
    travelers?: OrderTravelerCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentCreateNestedManyWithoutOrderInput
    notes?: OrderNoteCreateNestedManyWithoutOrderInput
  }

  export type TourOrderUncheckedCreateWithoutPaymentsInput = {
    id?: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    userId?: number | null
    travelers?: OrderTravelerUncheckedCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentUncheckedCreateNestedManyWithoutOrderInput
    notes?: OrderNoteUncheckedCreateNestedManyWithoutOrderInput
  }

  export type TourOrderCreateOrConnectWithoutPaymentsInput = {
    where: TourOrderWhereUniqueInput
    create: XOR<TourOrderCreateWithoutPaymentsInput, TourOrderUncheckedCreateWithoutPaymentsInput>
  }

  export type TourOrderUpsertWithoutPaymentsInput = {
    update: XOR<TourOrderUpdateWithoutPaymentsInput, TourOrderUncheckedUpdateWithoutPaymentsInput>
    create: XOR<TourOrderCreateWithoutPaymentsInput, TourOrderUncheckedCreateWithoutPaymentsInput>
    where?: TourOrderWhereInput
  }

  export type TourOrderUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: TourOrderWhereInput
    data: XOR<TourOrderUpdateWithoutPaymentsInput, TourOrderUncheckedUpdateWithoutPaymentsInput>
  }

  export type TourOrderUpdateWithoutPaymentsInput = {
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneWithoutOrdersNestedInput
    travelers?: OrderTravelerUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderUncheckedUpdateWithoutPaymentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    travelers?: OrderTravelerUncheckedUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUncheckedUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderCreateWithoutDocumentsInput = {
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    user?: UserCreateNestedOneWithoutOrdersInput
    travelers?: OrderTravelerCreateNestedManyWithoutOrderInput
    payments?: OrderPaymentCreateNestedManyWithoutOrderInput
    notes?: OrderNoteCreateNestedManyWithoutOrderInput
  }

  export type TourOrderUncheckedCreateWithoutDocumentsInput = {
    id?: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    userId?: number | null
    travelers?: OrderTravelerUncheckedCreateNestedManyWithoutOrderInput
    payments?: OrderPaymentUncheckedCreateNestedManyWithoutOrderInput
    notes?: OrderNoteUncheckedCreateNestedManyWithoutOrderInput
  }

  export type TourOrderCreateOrConnectWithoutDocumentsInput = {
    where: TourOrderWhereUniqueInput
    create: XOR<TourOrderCreateWithoutDocumentsInput, TourOrderUncheckedCreateWithoutDocumentsInput>
  }

  export type TourOrderUpsertWithoutDocumentsInput = {
    update: XOR<TourOrderUpdateWithoutDocumentsInput, TourOrderUncheckedUpdateWithoutDocumentsInput>
    create: XOR<TourOrderCreateWithoutDocumentsInput, TourOrderUncheckedCreateWithoutDocumentsInput>
    where?: TourOrderWhereInput
  }

  export type TourOrderUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: TourOrderWhereInput
    data: XOR<TourOrderUpdateWithoutDocumentsInput, TourOrderUncheckedUpdateWithoutDocumentsInput>
  }

  export type TourOrderUpdateWithoutDocumentsInput = {
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneWithoutOrdersNestedInput
    travelers?: OrderTravelerUpdateManyWithoutOrderNestedInput
    payments?: OrderPaymentUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderUncheckedUpdateWithoutDocumentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    travelers?: OrderTravelerUncheckedUpdateManyWithoutOrderNestedInput
    payments?: OrderPaymentUncheckedUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderCreateWithoutNotesInput = {
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    user?: UserCreateNestedOneWithoutOrdersInput
    travelers?: OrderTravelerCreateNestedManyWithoutOrderInput
    payments?: OrderPaymentCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentCreateNestedManyWithoutOrderInput
  }

  export type TourOrderUncheckedCreateWithoutNotesInput = {
    id?: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
    userId?: number | null
    travelers?: OrderTravelerUncheckedCreateNestedManyWithoutOrderInput
    payments?: OrderPaymentUncheckedCreateNestedManyWithoutOrderInput
    documents?: OrderDocumentUncheckedCreateNestedManyWithoutOrderInput
  }

  export type TourOrderCreateOrConnectWithoutNotesInput = {
    where: TourOrderWhereUniqueInput
    create: XOR<TourOrderCreateWithoutNotesInput, TourOrderUncheckedCreateWithoutNotesInput>
  }

  export type TourOrderUpsertWithoutNotesInput = {
    update: XOR<TourOrderUpdateWithoutNotesInput, TourOrderUncheckedUpdateWithoutNotesInput>
    create: XOR<TourOrderCreateWithoutNotesInput, TourOrderUncheckedCreateWithoutNotesInput>
    where?: TourOrderWhereInput
  }

  export type TourOrderUpdateToOneWithWhereWithoutNotesInput = {
    where?: TourOrderWhereInput
    data: XOR<TourOrderUpdateWithoutNotesInput, TourOrderUncheckedUpdateWithoutNotesInput>
  }

  export type TourOrderUpdateWithoutNotesInput = {
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneWithoutOrdersNestedInput
    travelers?: OrderTravelerUpdateManyWithoutOrderNestedInput
    payments?: OrderPaymentUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderUncheckedUpdateWithoutNotesInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    travelers?: OrderTravelerUncheckedUpdateManyWithoutOrderNestedInput
    payments?: OrderPaymentUncheckedUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderCreateManyUserInput = {
    id?: number
    orderReference: string
    productTourwowCode: string
    productTourCode: string
    periodStartAt: Date | string
    periodEndAt: Date | string
    productId: number
    periodId: number
    supplierId: number
    tourName: string
    tourCountry: string
    tourDurationDays: number
    tourDurationNights: number
    basePrice: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    depositAmount?: Decimal | DecimalJsLike | number | string | null
    remainingAmount?: Decimal | DecimalJsLike | number | string | null
    currency?: string
    adultCount?: number
    childWithBedCount?: number
    childNoBedCount?: number
    infantCount?: number
    singleRoomCount?: number
    extraRoomCount?: number
    bookerTitle?: string | null
    bookerFirstNameTh: string
    bookerLastNameTh: string
    bookerFirstNameEn: string
    bookerLastNameEn: string
    bookerPhone: string
    bookerEmail: string
    bookerDateOfBirth?: Date | string | null
    bookerAddress?: string | null
    bookerProvince?: string | null
    bookerPostalCode?: string | null
    specialRequests?: string | null
    dietaryRequirements?: string | null
    medicalConditions?: string | null
    orderStatus?: string
    paymentStatus?: string
    paymentDeadline?: Date | string | null
    documentDeadline?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    confirmedAt?: Date | string | null
    cancelledAt?: Date | string | null
    completedAt?: Date | string | null
  }

  export type TourOrderUpdateWithoutUserInput = {
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    travelers?: OrderTravelerUpdateManyWithoutOrderNestedInput
    payments?: OrderPaymentUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    travelers?: OrderTravelerUncheckedUpdateManyWithoutOrderNestedInput
    payments?: OrderPaymentUncheckedUpdateManyWithoutOrderNestedInput
    documents?: OrderDocumentUncheckedUpdateManyWithoutOrderNestedInput
    notes?: OrderNoteUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type TourOrderUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderReference?: StringFieldUpdateOperationsInput | string
    productTourwowCode?: StringFieldUpdateOperationsInput | string
    productTourCode?: StringFieldUpdateOperationsInput | string
    periodStartAt?: DateTimeFieldUpdateOperationsInput | Date | string
    periodEndAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: IntFieldUpdateOperationsInput | number
    periodId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    tourName?: StringFieldUpdateOperationsInput | string
    tourCountry?: StringFieldUpdateOperationsInput | string
    tourDurationDays?: IntFieldUpdateOperationsInput | number
    tourDurationNights?: IntFieldUpdateOperationsInput | number
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    depositAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remainingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: StringFieldUpdateOperationsInput | string
    adultCount?: IntFieldUpdateOperationsInput | number
    childWithBedCount?: IntFieldUpdateOperationsInput | number
    childNoBedCount?: IntFieldUpdateOperationsInput | number
    infantCount?: IntFieldUpdateOperationsInput | number
    singleRoomCount?: IntFieldUpdateOperationsInput | number
    extraRoomCount?: IntFieldUpdateOperationsInput | number
    bookerTitle?: NullableStringFieldUpdateOperationsInput | string | null
    bookerFirstNameTh?: StringFieldUpdateOperationsInput | string
    bookerLastNameTh?: StringFieldUpdateOperationsInput | string
    bookerFirstNameEn?: StringFieldUpdateOperationsInput | string
    bookerLastNameEn?: StringFieldUpdateOperationsInput | string
    bookerPhone?: StringFieldUpdateOperationsInput | string
    bookerEmail?: StringFieldUpdateOperationsInput | string
    bookerDateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    bookerProvince?: NullableStringFieldUpdateOperationsInput | string | null
    bookerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    specialRequests?: NullableStringFieldUpdateOperationsInput | string | null
    dietaryRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConditions?: NullableStringFieldUpdateOperationsInput | string | null
    orderStatus?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderTravelerCreateManyOrderInput = {
    id?: number
    travelerType: string
    title?: string | null
    firstNameTh: string
    lastNameTh: string
    firstNameEn: string
    lastNameEn: string
    dateOfBirth?: Date | string | null
    gender?: string | null
    phone?: string | null
    email?: string | null
    passportNumber?: string | null
    passportExpiry?: Date | string | null
    passportNationality?: string | null
    passportIssueCountry?: string | null
    seatPreference?: string | null
    mealPreference?: string | null
    specialNeeds?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderPaymentCreateManyOrderInput = {
    id?: number
    paymentType: string
    paymentMethod: string
    paymentProvider?: string | null
    transactionId?: string | null
    referenceNumber?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    paymentStatus?: string
    gatewayResponse?: string | null
    bankResponse?: string | null
    receiptNumber?: string | null
    invoiceNumber?: string | null
    requestedAt?: Date | string
    processedAt?: Date | string | null
    completedAt?: Date | string | null
    failedAt?: Date | string | null
    refundedAt?: Date | string | null
    paymentNotes?: string | null
    failureReason?: string | null
  }

  export type OrderDocumentCreateManyOrderInput = {
    id?: number
    documentType: string
    documentTitle: string
    documentDescription?: string | null
    fileName: string
    originalFileName: string
    filePath: string
    fileSize?: number | null
    mimeType: string
    isGenerated?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderNoteCreateManyOrderInput = {
    id?: number
    noteType: string
    subject?: string | null
    content: string
    isInternal?: boolean
    authorType: string
    authorName?: string | null
    authorId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderTravelerUpdateWithoutOrderInput = {
    travelerType?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    firstNameTh?: StringFieldUpdateOperationsInput | string
    lastNameTh?: StringFieldUpdateOperationsInput | string
    firstNameEn?: StringFieldUpdateOperationsInput | string
    lastNameEn?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    passportNumber?: NullableStringFieldUpdateOperationsInput | string | null
    passportExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passportNationality?: NullableStringFieldUpdateOperationsInput | string | null
    passportIssueCountry?: NullableStringFieldUpdateOperationsInput | string | null
    seatPreference?: NullableStringFieldUpdateOperationsInput | string | null
    mealPreference?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderTravelerUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    travelerType?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    firstNameTh?: StringFieldUpdateOperationsInput | string
    lastNameTh?: StringFieldUpdateOperationsInput | string
    firstNameEn?: StringFieldUpdateOperationsInput | string
    lastNameEn?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    passportNumber?: NullableStringFieldUpdateOperationsInput | string | null
    passportExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passportNationality?: NullableStringFieldUpdateOperationsInput | string | null
    passportIssueCountry?: NullableStringFieldUpdateOperationsInput | string | null
    seatPreference?: NullableStringFieldUpdateOperationsInput | string | null
    mealPreference?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderTravelerUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    travelerType?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    firstNameTh?: StringFieldUpdateOperationsInput | string
    lastNameTh?: StringFieldUpdateOperationsInput | string
    firstNameEn?: StringFieldUpdateOperationsInput | string
    lastNameEn?: StringFieldUpdateOperationsInput | string
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    passportNumber?: NullableStringFieldUpdateOperationsInput | string | null
    passportExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    passportNationality?: NullableStringFieldUpdateOperationsInput | string | null
    passportIssueCountry?: NullableStringFieldUpdateOperationsInput | string | null
    seatPreference?: NullableStringFieldUpdateOperationsInput | string | null
    mealPreference?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderPaymentUpdateWithoutOrderInput = {
    paymentType?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    gatewayResponse?: NullableStringFieldUpdateOperationsInput | string | null
    bankResponse?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentNotes?: NullableStringFieldUpdateOperationsInput | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderPaymentUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    paymentType?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    gatewayResponse?: NullableStringFieldUpdateOperationsInput | string | null
    bankResponse?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentNotes?: NullableStringFieldUpdateOperationsInput | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderPaymentUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    paymentType?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    paymentStatus?: StringFieldUpdateOperationsInput | string
    gatewayResponse?: NullableStringFieldUpdateOperationsInput | string | null
    bankResponse?: NullableStringFieldUpdateOperationsInput | string | null
    receiptNumber?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    requestedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentNotes?: NullableStringFieldUpdateOperationsInput | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderDocumentUpdateWithoutOrderInput = {
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    documentDescription?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    originalFileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: StringFieldUpdateOperationsInput | string
    isGenerated?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderDocumentUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    documentDescription?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    originalFileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: StringFieldUpdateOperationsInput | string
    isGenerated?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderDocumentUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    documentDescription?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    originalFileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: StringFieldUpdateOperationsInput | string
    isGenerated?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderNoteUpdateWithoutOrderInput = {
    noteType?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    isInternal?: BoolFieldUpdateOperationsInput | boolean
    authorType?: StringFieldUpdateOperationsInput | string
    authorName?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderNoteUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    noteType?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    isInternal?: BoolFieldUpdateOperationsInput | boolean
    authorType?: StringFieldUpdateOperationsInput | string
    authorName?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderNoteUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    noteType?: StringFieldUpdateOperationsInput | string
    subject?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    isInternal?: BoolFieldUpdateOperationsInput | boolean
    authorType?: StringFieldUpdateOperationsInput | string
    authorName?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}