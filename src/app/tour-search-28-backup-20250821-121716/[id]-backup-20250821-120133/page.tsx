'use client'

import React, { useState, useEffect, use, useRef } from 'react'
import { useSearchParams } from 'next/navigation'
import Image from 'next/image'
import Link from 'next/link'
import { notFound } from 'next/navigation'
import {
  ArrowLeft, Star, Heart, Share2, MapPin, Clock, Users, Calendar, 
  Phone, MessageCircle, Zap, Flame, Timer, ChevronRight, Eye, 
  Shield, Award, Check, X, ChevronDown, ChevronUp, Play, Camera, 
  CreditCard, CheckCircle, AlertCircle, TrendingUp, Sparkles,
  Navigation, Globe, Wifi, Coffee, Utensils, Car, Plane, Hotel,
  ThumbsUp, BookOpen, Send, Bookmark
} from 'lucide-react'

// Extended tour data for tour-search-28 specific detail pages
const tourData = [
  {
    id: 'tour-jp-001',
    title: '‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô ‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß ‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï ‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏ö‡∏π‡∏°',
    subtitle: '‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡πÉ‡∏ô‡∏§‡∏î‡∏π‡πÉ‡∏ö‡πÑ‡∏°‡πâ‡∏ú‡∏•‡∏¥',
    destination: '‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô',
    cities: ['‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß', '‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï', '‡πÇ‡∏≠‡∏ã‡∏≤‡∏Å‡πâ‡∏≤'],
    duration: '5 ‡∏ß‡∏±‡∏ô 4 ‡∏Ñ‡∏∑‡∏ô',
    price: 45900,
    originalPrice: 52900,
    rating: 4.8,
    reviewCount: 156,
    bookingCount: 342,
    lastBookedAt: '3 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
    viewingNow: 28,
    heroImage: 'https://images.unsplash.com/photo-1493976040374-85c8e12f0c0e?w=1200&h=800&fit=crop',
    gallery: [
      'https://images.unsplash.com/photo-1493976040374-85c8e12f0c0e?w=800&h=600&fit=crop',
      'https://images.unsplash.com/photo-1528164344705-47542687000d?w=800&h=600&fit=crop',
      'https://images.unsplash.com/photo-1545569341-9eb8b30979d9?w=800&h=600&fit=crop',
      'https://images.unsplash.com/photo-1480796927426-f609979314bd?w=800&h=600&fit=crop',
      'https://images.unsplash.com/photo-1490806843957-31f4c9a91c65?w=800&h=600&fit=crop',
      'https://images.unsplash.com/photo-1464207687429-7505649dae38?w=800&h=600&fit=crop'
    ],
    highlights: [
      { icon: 'üå∏', title: '‡∏ä‡∏°‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞', description: '‡∏§‡∏î‡∏π‡∏Å‡∏≤‡∏•‡∏î‡∏≠‡∏Å‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏ö‡∏≤‡∏ô ‡∏°‡∏µ.‡∏Ñ.-‡πÄ‡∏°.‡∏¢.' },
      { icon: '‚õ©Ô∏è', title: '‡∏ß‡∏±‡∏î‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏Å‡πà', description: '‡∏ß‡∏±‡∏î‡πÄ‡∏ã‡πá‡∏ô‡πÇ‡∏ã‡∏à‡∏¥ ‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏ß‡πà‡∏≤ 1,400 ‡∏õ‡∏µ' },
      { icon: 'üöÑ', title: '‡∏£‡∏ñ‡πÑ‡∏ü‡∏ä‡∏¥‡∏ô‡∏Ñ‡∏±‡∏ô‡πÄ‡∏ã‡∏ô', description: '‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏£‡∏ñ‡πÑ‡∏ü‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á 320 ‡∏Å‡∏°./‡∏ä‡∏°.' },
      { icon: 'üóæ', title: '‡∏ü‡∏π‡∏à‡∏¥‡∏ã‡∏±‡∏á', description: '‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡πÑ‡∏ü‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏™‡∏π‡∏á 3,776 ‡πÄ‡∏°‡∏ï‡∏£' }
    ],
    available: true,
    availableSeats: 8,
    features: ['‡πÑ‡∏Å‡∏î‡πå‡πÑ‡∏ó‡∏¢', '‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£ 3 ‡∏°‡∏∑‡πâ‡∏≠', '‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏° 4 ‡∏î‡∏≤‡∏ß', '‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á'],
    departures: [
      { 
        id: 1, 
        date: '2025-03-15', 
        dateLabel: '15 ‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏° 2568', 
        price: 45900, 
        seats: 8, 
        status: 'available',
        specialNote: '‡∏ä‡πà‡∏ß‡∏á‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏ö‡∏≤‡∏ô' 
      },
      { 
        id: 2, 
        date: '2025-03-22', 
        dateLabel: '22 ‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏° 2568', 
        price: 47900, 
        seats: 12, 
        status: 'available',
        specialNote: '‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏¢‡∏≤‡∏ß' 
      },
      { 
        id: 3, 
        date: '2025-04-05', 
        dateLabel: '5 ‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô 2568', 
        price: 49900, 
        seats: 3, 
        status: 'limited',
        specialNote: '‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡πÄ‡∏ï‡πá‡∏°‡∏ö‡∏≤‡∏ô' 
      }
    ],
    itinerary: [
      {
        day: 1,
        title: '‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ñ‡∏∂‡∏á‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß',
        location: '‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß',
        highlight: '‡∏¢‡πà‡∏≤‡∏ô‡∏ä‡∏¥‡∏ö‡∏π‡∏¢‡∏≤',
        activities: [
          '‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏∏‡∏ß‡∏£‡∏£‡∏ì‡∏†‡∏π‡∏°‡∏¥',
          '‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ñ‡∏∂‡∏á‡∏ô‡∏≤‡∏£‡∏¥‡∏ï‡∏∞',
          '‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°',
          '‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏¢‡πà‡∏≤‡∏ô‡∏ä‡∏¥‡∏ö‡∏π‡∏¢‡∏≤'
        ],
        meals: ['‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡πà‡∏≥'],
        accommodation: 'Shinagawa Prince Hotel 4‚≠ê'
      },
      {
        day: 2,
        title: '‡∏ä‡∏°‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞ ‡∏≠‡∏∏‡πÄ‡∏≠‡πÇ‡∏ô‡∏∞',
        location: '‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß',
        highlight: '‡∏™‡∏ß‡∏ô‡∏≠‡∏∏‡πÄ‡∏≠‡πÇ‡∏ô‡∏∞',
        activities: [
          '‡∏ä‡∏°‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏™‡∏ß‡∏ô‡∏≠‡∏∏‡πÄ‡∏≠‡πÇ‡∏ô‡∏∞',
          '‡∏ß‡∏±‡∏î‡πÄ‡∏ã‡πá‡∏ô‡πÇ‡∏ã‡∏à‡∏¥ ‡∏≠‡∏≤‡∏ã‡∏≤‡∏Å‡∏∏‡∏™‡∏∞',
          '‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏ñ‡∏ô‡∏ô‡∏ô‡∏≤‡∏Å‡∏≤‡∏°‡∏¥‡πÄ‡∏™‡∏∞',
          '‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥‡∏™‡∏∏‡∏°‡∏¥‡∏î‡∏∞'
        ],
        meals: ['‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡πà‡∏≥'],
        accommodation: 'Shinagawa Prince Hotel 4‚≠ê'
      },
      {
        day: 3,
        title: '‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡πÑ‡∏ü‡∏ü‡∏π‡∏à‡∏¥',
        location: '‡∏ü‡∏π‡∏à‡∏¥-‡∏Ñ‡∏≤‡∏ß‡∏≤‡∏Å‡∏∏‡∏à‡∏¥',
        highlight: '‡∏ó‡∏∞‡πÄ‡∏•‡∏™‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏ß‡∏≤‡∏Å‡∏∏‡∏à‡∏¥',
        activities: [
          '‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏π‡πà‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡πÑ‡∏ü‡∏ü‡∏π‡∏à‡∏¥',
          '‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏ä‡πâ‡∏≤‡πÑ‡∏ü‡∏ü‡∏π‡∏à‡∏¥',
          '‡∏ä‡∏°‡∏ó‡∏∞‡πÄ‡∏•‡∏™‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏ß‡∏≤‡∏Å‡∏∏‡∏à‡∏¥',
          '‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏Å‡∏±‡∏ö‡∏ü‡∏π‡∏à‡∏¥‡∏ã‡∏±‡∏á'
        ],
        meals: ['‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô'],
        accommodation: 'Kyoto Tower Hotel 4‚≠ê'
      },
      {
        day: 4,
        title: '‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï ‡πÇ‡∏ö‡∏£‡∏≤‡∏ì',
        location: '‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï',
        highlight: '‡∏ß‡∏±‡∏î‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥',
        activities: [
          '‡∏ß‡∏±‡∏î‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥ ‡∏Ñ‡∏¥‡∏ô‡∏Ñ‡∏∞‡∏Ñ‡∏∏‡∏à‡∏¥',
          '‡∏™‡∏ß‡∏ô‡πÑ‡∏ú‡πà‡∏≠‡∏≤‡∏£‡∏ä‡∏¥‡∏¢‡∏≤‡∏°‡∏∞',
          '‡∏¢‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡πã‡∏≠‡∏¥‡∏ä‡∏∞ ‡∏Å‡∏¥‡∏≠‡∏≠‡∏ô',
          '‡∏ß‡∏±‡∏î‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏ß‡∏°‡∏¥‡∏ã‡∏∏‡πÄ‡∏î‡∏£‡∏∞'
        ],
        meals: ['‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡πà‡∏≥'],
        accommodation: 'Kyoto Tower Hotel 4‚≠ê'
      },
      {
        day: 5,
        title: '‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏•‡∏±‡∏ö',
        location: '‡∏Å‡∏•‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢',
        highlight: '‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô',
        activities: [
          '‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏ù‡∏≤‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î',
          '‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏π‡πà‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô',
          '‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢'
        ],
        meals: ['‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô'],
        accommodation: '-'
      }
    ],
    included: [
      '‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô ‡πÑ‡∏õ-‡∏Å‡∏•‡∏±‡∏ö (Thai Airways)',
      '‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏° 4 ‡∏î‡∏≤‡∏ß (2 ‡∏Ñ‡∏∑‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á)',
      '‡∏≠‡∏≤‡∏´‡∏≤‡∏£ 3 ‡∏°‡∏∑‡πâ‡∏≠‡∏ï‡∏≤‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
      '‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®',
      '‡πÑ‡∏Å‡∏î‡πå‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡∏û‡∏π‡∏î‡πÑ‡∏ó‡∏¢‡πÑ‡∏î‡πâ',
      '‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏Å‡πÅ‡∏´‡πà‡∏á',
      '‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô',
      '‡∏†‡∏≤‡∏©‡∏µ‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡∏ó‡∏∏‡∏Å‡πÅ‡∏´‡πà‡∏á'
    ],
    excluded: [
      '‡∏Ñ‡πà‡∏≤‡∏ó‡∏¥‡∏õ‡πÑ‡∏Å‡∏î‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö (1,500 ‡∏ö‡∏≤‡∏ó/‡∏ó‡πà‡∏≤‡∏ô)',
      '‡∏Ñ‡πà‡∏≤‡∏ß‡∏µ‡∏ã‡πà‡∏≤‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô (‡∏´‡∏≤‡∏Å‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)',
      '‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
      '‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
      '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏ô‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°',
      '‡∏Ñ‡πà‡∏≤‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÅ‡∏•‡∏∞‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï',
      '‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°'
    ],
    policies: {
      deposit: 10000,
      cancellation: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ü‡∏£‡∏µ 30 ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á',
      payment: ['‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î', '‡πÇ‡∏≠‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£', '‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï'],
      documents: ['‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á (‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏´‡∏•‡∏∑‡∏≠ > 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)', '‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢ 2x2 ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 2 ‡πÉ‡∏ö']
    },
    reviews: [
      {
        id: 1,
        name: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡πÉ‡∏à ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏î‡∏µ',
        rating: 5,
        date: '2025-01-15',
        review: '‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡πÑ‡∏Å‡∏î‡πå‡∏î‡∏π‡πÅ‡∏•‡∏î‡∏µ ‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏™‡∏ß‡∏¢‡∏°‡∏≤‡∏Å ‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÉ‡∏à‡∏™‡∏∏‡∏î‡πÜ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏•‡∏¢!',
        images: ['https://images.unsplash.com/photo-1493976040374-85c8e12f0c0e?w=300&h=200&fit=crop'],
        verified: true
      },
      {
        id: 2,
        name: '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏£‡∏±‡∏Å‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß',
        rating: 4,
        date: '2025-01-10',
        review: '‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°‡∏î‡∏µ ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏£‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏á‡∏¥‡∏ô',
        verified: true
      }
    ],
    faqs: [
      {
        q: '‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á?',
        a: '‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢ 2x2 ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 2 ‡πÉ‡∏ö ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏ß‡∏µ‡∏ã‡πà‡∏≤ (‡∏´‡∏≤‡∏Å‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)'
      },
      {
        q: '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
        a: '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡∏ü‡∏£‡∏µ 30 ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç'
      },
      {
        q: '‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
        a: '‡∏£‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ã‡∏∑‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°'
      },
      {
        q: '‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÉ‡∏ô‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?',
        a: '‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 15-22 ‡∏≠‡∏á‡∏®‡∏≤ ‡πÄ‡∏ã‡∏•‡πÄ‡∏ã‡∏µ‡∏¢‡∏™ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÅ‡∏Ç‡∏ô‡∏¢‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡∏≤‡∏ß'
      }
    ],
    seo: {
      title: '‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô ‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß ‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï ‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏ö‡∏π‡∏° 5‡∏ß‡∏±‡∏ô4‡∏Ñ‡∏∑‡∏ô',
      description: '‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏ö‡∏π‡∏° ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß ‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï ‡∏ä‡∏°‡∏ß‡∏±‡∏î‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏Å‡πà ‡∏Ç‡∏∂‡πâ‡∏ô‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡πÑ‡∏ü‡∏ü‡∏π‡∏à‡∏¥ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏Å‡∏î‡πå‡πÑ‡∏ó‡∏¢ ‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏° 4 ‡∏î‡∏≤‡∏ß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 45,900 ‡∏ö‡∏≤‡∏ó',
      keywords: ['‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô', '‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞', '‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß', '‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï', '‡∏ü‡∏π‡∏à‡∏¥‡∏ã‡∏±‡∏á', '‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®']
    }
  }
  // Add more tours as needed
]

interface TourDetailPageProps {
  params: Promise<{ id: string }>
}

export default function TourDetailPage({ params }: TourDetailPageProps) {
  const resolvedParams = use(params)
  const searchParams = useSearchParams()
  const source = searchParams.get('src')
  
  // State management
  const [activeImage, setActiveImage] = useState(0)
  const [showGallery, setShowGallery] = useState(false)
  const [selectedDeparture, setSelectedDeparture] = useState(0)
  const [showBookingSheet, setShowBookingSheet] = useState(false)
  const [bookingStep, setBookingStep] = useState(1)
  const [expandedFAQ, setExpandedFAQ] = useState<number | null>(null)
  const [viewingCount, setViewingCount] = useState(28)
  const [recentBooking, setRecentBooking] = useState('‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡πÉ‡∏à ‡∏à‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ 3 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß')
  const [showStickyBar, setShowStickyBar] = useState(false)
  const [isBookmarked, setIsBookmarked] = useState(false)
  
  // Refs
  const heroRef = useRef<HTMLDivElement>(null)
  const galleryRef = useRef<HTMLDivElement>(null)
  
  // Find tour
  const tour = tourData.find(t => t.id === resolvedParams.id)
  
  if (!tour) {
    notFound()
  }

  // Check source parameter
  useEffect(() => {
    if (source !== 'search28') {
      console.warn('Direct access detected - missing src=search28 parameter')
    }
  }, [source])

  // Dynamic viewing count
  useEffect(() => {
    const interval = setInterval(() => {
      setViewingCount(prev => Math.max(15, Math.min(45, prev + Math.floor(Math.random() * 5) - 2)))
    }, 8000)
    
    return () => clearInterval(interval)
  }, [])

  // Recent booking updates
  useEffect(() => {
    const bookings = [
      '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡πÉ‡∏à ‡∏à‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ 3 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
      '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏•‡∏µ ‡∏à‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ 7 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', 
      '‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡∏à‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ 12 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
      '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏£ ‡∏à‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ 18 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß'
    ]
    
    const interval = setInterval(() => {
      const randomBooking = bookings[Math.floor(Math.random() * bookings.length)]
      setRecentBooking(randomBooking)
    }, 15000)
    
    return () => clearInterval(interval)
  }, [])

  // Sticky bar visibility
  useEffect(() => {
    const handleScroll = () => {
      if (heroRef.current) {
        const heroBottom = heroRef.current.offsetTop + heroRef.current.offsetHeight
        setShowStickyBar(window.scrollY > heroBottom - 100)
      }
    }

    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  // Gallery swipe handling
  const handleSwipe = (direction: 'left' | 'right') => {
    if (direction === 'left' && activeImage < tour.gallery.length - 1) {
      setActiveImage(activeImage + 1)
    } else if (direction === 'right' && activeImage > 0) {
      setActiveImage(activeImage - 1)
    }
  }

  // Format price helper
  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('th-TH').format(price)
  }

  // Analytics events
  const trackEvent = (eventName: string, data?: any) => {
    if (typeof window !== 'undefined' && (window as any).gtag) {
      (window as any).gtag('event', eventName, {
        tour_id: tour.id,
        tour_name: tour.title,
        price: tour.price,
        source: source || 'direct',
        ...data
      })
    }
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* SEO Head */}
      <head>
        <title>{tour.seo.title} | TourWow</title>
        <meta name="description" content={tour.seo.description} />
        <meta name="keywords" content={tour.seo.keywords.join(', ')} />
        <meta property="og:title" content={tour.title} />
        <meta property="og:description" content={tour.seo.description} />
        <meta property="og:image" content={tour.heroImage} />
        <meta property="og:type" content="product" />
        <link rel="canonical" href={`https://tourwow.com/tour-search-28/${tour.id}`} />
      </head>

      {/* Mobile Header */}
      <header className="fixed top-0 left-0 right-0 z-50 bg-white/90 backdrop-blur-sm border-b border-gray-200">
        <div className="flex items-center justify-between px-4 py-3">
          <Link 
            href="/tour-search-28" 
            className="flex items-center text-gray-700 hover:text-gray-900 transition-colors"
            onClick={() => trackEvent('back_button_clicked')}
          >
            <ArrowLeft className="w-5 h-5 mr-2" />
            <span className="font-medium">‡∏Å‡∏•‡∏±‡∏ö</span>
          </Link>
          
          <div className="flex items-center space-x-2">
            <button
              onClick={() => {
                setIsBookmarked(!isBookmarked)
                trackEvent('bookmark_clicked', { bookmarked: !isBookmarked })
              }}
              className={`p-2 rounded-full transition-all duration-300 ${
                isBookmarked ? 'bg-blue-100 text-blue-600' : 'bg-gray-100 text-gray-600'
              }`}
            >
              <Bookmark className={`w-5 h-5 ${isBookmarked ? 'fill-current' : ''}`} />
            </button>
            
            <button
              onClick={() => {
                if (navigator.share) {
                  navigator.share({
                    title: tour.title,
                    text: tour.subtitle,
                    url: window.location.href
                  })
                }
                trackEvent('share_clicked')
              }}
              className="p-2 bg-gray-100 text-gray-600 rounded-full hover:bg-gray-200 transition-colors"
            >
              <Share2 className="w-5 h-5" />
            </button>
          </div>
        </div>
      </header>

      {/* Hero Section - Magazine Style */}
      <section ref={heroRef} className="relative h-screen overflow-hidden">
        <Image
          src={tour.heroImage}
          alt={tour.title}
          fill
          className="object-cover"
          priority
        />
        
        {/* Gradient Overlay */}
        <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent" />
        
        {/* Floating Trust Badges */}
        <div className="absolute top-20 left-4 flex flex-wrap gap-2">
          <div className="bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold flex items-center gap-1">
            <Flame className="w-4 h-4" />
            HOT
          </div>
          {tour.availableSeats <= 10 && (
            <div className="bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-bold animate-pulse">
              ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {tour.availableSeats} ‡∏ó‡∏µ‡πà!
            </div>
          )}
        </div>

        {/* Gallery Counter */}
        <button
          onClick={() => {
            setShowGallery(true)
            trackEvent('gallery_opened')
          }}
          className="absolute top-20 right-4 bg-black/50 text-white px-3 py-2 rounded-full text-sm flex items-center gap-1 backdrop-blur-sm"
        >
          <Camera className="w-4 h-4" />
          {tour.gallery.length} ‡∏£‡∏π‡∏õ
        </button>

        {/* Hero Content */}
        <div className="absolute bottom-0 left-0 right-0 p-6 text-white">
          {/* Real-time Social Proof */}
          <div className="bg-green-500/90 backdrop-blur-sm rounded-full px-4 py-2 mb-4 inline-flex items-center gap-2">
            <div className="w-2 h-2 bg-white rounded-full animate-pulse" />
            <span className="text-sm font-medium">{viewingCount} ‡∏Ñ‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π</span>
          </div>

          <h1 className="text-3xl font-bold mb-2 leading-tight">{tour.title}</h1>
          <p className="text-lg opacity-90 mb-4">{tour.subtitle}</p>
          
          <div className="flex flex-wrap gap-3 mb-6">
            <div className="bg-white/20 backdrop-blur-sm px-3 py-1 rounded-full flex items-center gap-1">
              <MapPin className="w-4 h-4" />
              <span className="text-sm">{tour.cities.join(' ‚Ä¢ ')}</span>
            </div>
            <div className="bg-white/20 backdrop-blur-sm px-3 py-1 rounded-full flex items-center gap-1">
              <Clock className="w-4 h-4" />
              <span className="text-sm">{tour.duration}</span>
            </div>
            <div className="bg-white/20 backdrop-blur-sm px-3 py-1 rounded-full flex items-center gap-1">
              <Star className="w-4 h-4 fill-current text-yellow-400" />
              <span className="text-sm">{tour.rating} ({tour.reviewCount})</span>
            </div>
          </div>

          {/* Quick Price Display */}
          <div className="flex items-center justify-between">
            <div>
              <div className="text-3xl font-bold">
                ‡∏ø{formatPrice(tour.price)}
                <span className="text-lg font-normal opacity-75"> /‡∏Ñ‡∏ô</span>
              </div>
              {tour.originalPrice && (
                <div className="text-sm opacity-75 line-through">
                  ‡∏ø{formatPrice(tour.originalPrice)}
                </div>
              )}
            </div>
            
            <button
              onClick={() => {
                setShowBookingSheet(true)
                trackEvent('quick_book_clicked', { location: 'hero' })
              }}
              className="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 rounded-2xl font-bold text-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
            >
              ‡∏à‡∏≠‡∏á‡πÄ‡∏•‡∏¢
            </button>
          </div>
        </div>
      </section>

      {/* Main Content Cards */}
      <div className="relative -mt-6 z-10">
        {/* Highlights Card */}
        <div className="bg-white rounded-t-3xl shadow-lg mx-4 mb-6 p-6">
          <div className="flex items-center gap-2 mb-4">
            <Sparkles className="w-6 h-6 text-yellow-500" />
            <h2 className="text-xl font-bold">‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå‡∏ó‡∏£‡∏¥‡∏õ</h2>
          </div>
          
          <div className="grid grid-cols-2 gap-4">
            {tour.highlights.map((highlight, index) => (
              <div key={index} className="bg-gradient-to-br from-blue-50 to-purple-50 rounded-xl p-4">
                <div className="text-2xl mb-2">{highlight.icon}</div>
                <h3 className="font-semibold text-gray-900 mb-1">{highlight.title}</h3>
                <p className="text-sm text-gray-600">{highlight.description}</p>
              </div>
            ))}
          </div>
        </div>

        {/* Recent Booking Alert */}
        <div className="mx-4 mb-6">
          <div className="bg-green-50 border border-green-200 rounded-xl p-4 flex items-center gap-3">
            <div className="w-3 h-3 bg-green-500 rounded-full animate-pulse" />
            <span className="text-sm text-green-800 font-medium">{recentBooking}</span>
            <ThumbsUp className="w-4 h-4 text-green-600 ml-auto" />
          </div>
        </div>

        {/* Departure Selection Card */}
        <div className="bg-white rounded-2xl shadow-lg mx-4 mb-6 p-6">
          <div className="flex items-center gap-2 mb-4">
            <Calendar className="w-6 h-6 text-blue-500" />
            <h2 className="text-xl font-bold">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</h2>
            <div className="ml-auto bg-red-100 text-red-600 px-2 py-1 rounded-full text-xs font-bold">
              ‡∏à‡∏≥‡∏Å‡∏±‡∏î!
            </div>
          </div>
          
          <div className="space-y-3">
            {tour.departures.map((departure, index) => (
              <button
                key={departure.id}
                onClick={() => {
                  setSelectedDeparture(index)
                  trackEvent('departure_selected', { departure_id: departure.id })
                }}
                className={`w-full p-4 rounded-xl border-2 transition-all duration-300 ${
                  selectedDeparture === index
                    ? 'border-blue-500 bg-blue-50'
                    : 'border-gray-200 bg-white hover:border-blue-300'
                }`}
              >
                <div className="flex justify-between items-center">
                  <div className="text-left">
                    <div className="font-semibold text-gray-900">{departure.dateLabel}</div>
                    <div className="text-sm text-gray-600">{departure.specialNote}</div>
                    <div className={`text-sm flex items-center gap-1 mt-1 ${
                      departure.seats <= 5 ? 'text-red-500' : 'text-gray-500'
                    }`}>
                      <Users className="w-4 h-4" />
                      ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {departure.seats} ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="text-xl font-bold text-blue-600">
                      ‡∏ø{formatPrice(departure.price)}
                    </div>
                    <div className="text-sm text-gray-500">‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô</div>
                  </div>
                </div>
              </button>
            ))}
          </div>
        </div>

        {/* Floating Timeline - Itinerary */}
        <div className="bg-white rounded-2xl shadow-lg mx-4 mb-6 p-6">
          <div className="flex items-center gap-2 mb-4">
            <Navigation className="w-6 h-6 text-green-500" />
            <h2 className="text-xl font-bold">‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</h2>
          </div>
          
          <div className="relative">
            {/* Timeline Line */}
            <div className="absolute left-6 top-0 bottom-0 w-0.5 bg-gradient-to-b from-blue-500 to-purple-500"></div>
            
            {tour.itinerary.map((day, index) => (
              <div key={day.day} className="relative flex gap-4 pb-6 last:pb-0">
                {/* Day Circle */}
                <div className="relative z-10 w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white font-bold">
                  {day.day}
                </div>
                
                {/* Day Content */}
                <div className="flex-1 pt-2">
                  <div className="bg-gray-50 rounded-xl p-4">
                    <h3 className="font-bold text-gray-900 mb-1">{day.title}</h3>
                    <p className="text-sm text-blue-600 mb-2">{day.location}</p>
                    <div className="text-sm text-gray-600">
                      <div className="font-medium text-orange-600 mb-1">üåü {day.highlight}</div>
                      <div className="space-y-1">
                        {day.activities.slice(0, 2).map((activity, idx) => (
                          <div key={idx} className="flex items-center gap-2">
                            <div className="w-1.5 h-1.5 bg-blue-500 rounded-full"></div>
                            {activity}
                          </div>
                        ))}
                        {day.activities.length > 2 && (
                          <div className="text-blue-600 text-xs">+{day.activities.length - 2} ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</div>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Trust & Features Card */}
        <div className="bg-white rounded-2xl shadow-lg mx-4 mb-6 p-6">
          <div className="flex items-center gap-2 mb-4">
            <Shield className="w-6 h-6 text-green-500" />
            <h2 className="text-xl font-bold">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à & ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</h2>
          </div>
          
          <div className="grid grid-cols-2 gap-3">
            {tour.features.map((feature, index) => (
              <div key={index} className="flex items-center gap-2 p-3 bg-green-50 rounded-lg">
                <Check className="w-4 h-4 text-green-600" />
                <span className="text-sm text-gray-700">{feature}</span>
              </div>
            ))}
          </div>
          
          <div className="mt-4 pt-4 border-t border-gray-200">
            <div className="flex items-center justify-center gap-4 text-sm text-gray-600">
              <div className="flex items-center gap-1">
                <Award className="w-4 h-4 text-blue-500" />
                <span>‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á ‡∏ó‡∏ó‡∏ó.</span>
              </div>
              <div className="flex items-center gap-1">
                <Shield className="w-4 h-4 text-green-500" />
                <span>‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</span>
              </div>
              <div className="flex items-center gap-1">
                <Phone className="w-4 h-4 text-purple-500" />
                <span>24/7 Support</span>
              </div>
            </div>
          </div>
        </div>

        {/* Reviews Card */}
        <div className="bg-white rounded-2xl shadow-lg mx-4 mb-6 p-6">
          <div className="flex items-center gap-2 mb-4">
            <Star className="w-6 h-6 text-yellow-500 fill-current" />
            <h2 className="text-xl font-bold">‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h2>
            <div className="ml-auto bg-yellow-100 text-yellow-700 px-2 py-1 rounded-full text-xs font-bold">
              {tour.rating}/5
            </div>
          </div>
          
          <div className="space-y-4">
            {tour.reviews.map((review) => (
              <div key={review.id} className="border border-gray-200 rounded-xl p-4">
                <div className="flex items-center gap-3 mb-2">
                  <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                    {review.name.charAt(2)}
                  </div>
                  <div className="flex-1">
                    <div className="font-semibold text-gray-900">{review.name}</div>
                    <div className="flex items-center gap-1">
                      {Array.from({ length: review.rating }, (_, i) => (
                        <Star key={i} className="w-3 h-3 text-yellow-400 fill-current" />
                      ))}
                      {review.verified && (
                        <div className="ml-2 flex items-center gap-1 text-green-600 text-xs">
                          <CheckCircle className="w-3 h-3" />
                          ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß
                        </div>
                      )}
                    </div>
                  </div>
                </div>
                <p className="text-gray-700 text-sm leading-relaxed">{review.review}</p>
                {review.images && (
                  <div className="mt-3 flex gap-2">
                    {review.images.map((img, idx) => (
                      <div key={idx} className="relative w-16 h-16 rounded-lg overflow-hidden">
                        <Image src={img} alt={`Review ${idx + 1}`} fill className="object-cover" />
                      </div>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>

        {/* FAQ Card */}
        <div className="bg-white rounded-2xl shadow-lg mx-4 mb-6 p-6">
          <div className="flex items-center gap-2 mb-4">
            <MessageCircle className="w-6 h-6 text-orange-500" />
            <h2 className="text-xl font-bold">‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢</h2>
          </div>
          
          <div className="space-y-3">
            {tour.faqs.map((faq, index) => (
              <div key={index} className="border border-gray-200 rounded-xl overflow-hidden">
                <button
                  onClick={() => setExpandedFAQ(expandedFAQ === index ? null : index)}
                  className="w-full p-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors"
                >
                  <span className="font-semibold text-gray-900">{faq.q}</span>
                  {expandedFAQ === index ? (
                    <ChevronUp className="w-5 h-5 text-gray-500" />
                  ) : (
                    <ChevronDown className="w-5 h-5 text-gray-500" />
                  )}
                </button>
                
                {expandedFAQ === index && (
                  <div className="px-4 pb-4 text-gray-700 text-sm leading-relaxed border-t border-gray-100 pt-4">
                    {faq.a}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>

        {/* Contact Card */}
        <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl shadow-lg mx-4 mb-20 p-6 text-white">
          <div className="text-center">
            <h2 className="text-xl font-bold mb-2">‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°?</h2>
            <p className="opacity-90 mb-4">‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏î‡∏π‡πÅ‡∏•‡∏ï‡∏•‡∏≠‡∏î 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</p>
            
            <div className="flex gap-3">
              <a 
                href="tel:+66123456789"
                className="flex-1 bg-white/20 backdrop-blur-sm py-3 px-4 rounded-xl font-semibold flex items-center justify-center gap-2 hover:bg-white/30 transition-colors"
                onClick={() => trackEvent('phone_clicked')}
              >
                <Phone className="w-5 h-5" />
                ‡πÇ‡∏ó‡∏£‡πÄ‡∏•‡∏¢
              </a>
              <a 
                href="https://line.me/ti/p/~@tourwow"
                className="flex-1 bg-green-500 py-3 px-4 rounded-xl font-semibold flex items-center justify-center gap-2 hover:bg-green-600 transition-colors"
                onClick={() => trackEvent('line_clicked')}
              >
                <MessageCircle className="w-5 h-5" />
                Line Chat
              </a>
            </div>
          </div>
        </div>
      </div>

      {/* Sticky Bottom Bar */}
      {showStickyBar && (
        <div className="fixed bottom-0 left-0 right-0 z-50 bg-white border-t border-gray-200 p-4 shadow-lg">
          <div className="flex items-center gap-3">
            <div className="flex-1">
              <div className="text-lg font-bold text-blue-600">
                ‡∏ø{formatPrice(tour.departures[selectedDeparture].price)}
              </div>
              <div className="text-sm text-gray-500">
                {tour.departures[selectedDeparture].dateLabel}
              </div>
            </div>
            
            <button
              onClick={() => {
                setShowBookingSheet(true)
                trackEvent('sticky_book_clicked')
              }}
              className="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-3 rounded-xl font-bold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
            >
              ‡∏à‡∏≠‡∏á‡∏ó‡∏±‡∏ß‡∏£‡πå
            </button>
          </div>
        </div>
      )}

      {/* Gallery Modal */}
      {showGallery && (
        <div className="fixed inset-0 z-50 bg-black/95 flex items-center justify-center">
          <div className="relative w-full h-full max-w-4xl">
            {/* Close Button */}
            <button
              onClick={() => setShowGallery(false)}
              className="absolute top-4 right-4 z-10 bg-black/50 text-white p-2 rounded-full"
            >
              <X className="w-6 h-6" />
            </button>
            
            {/* Image Counter */}
            <div className="absolute top-4 left-4 z-10 bg-black/50 text-white px-3 py-1 rounded-full text-sm">
              {activeImage + 1} / {tour.gallery.length}
            </div>
            
            {/* Main Image */}
            <div className="relative w-full h-full">
              <Image
                src={tour.gallery[activeImage]}
                alt={`Gallery ${activeImage + 1}`}
                fill
                className="object-contain"
              />
            </div>
            
            {/* Navigation */}
            {activeImage > 0 && (
              <button
                onClick={() => setActiveImage(activeImage - 1)}
                className="absolute left-4 top-1/2 -translate-y-1/2 bg-black/50 text-white p-2 rounded-full"
              >
                <ChevronDown className="w-6 h-6 rotate-90" />
              </button>
            )}
            
            {activeImage < tour.gallery.length - 1 && (
              <button
                onClick={() => setActiveImage(activeImage + 1)}
                className="absolute right-4 top-1/2 -translate-y-1/2 bg-black/50 text-white p-2 rounded-full"
              >
                <ChevronDown className="w-6 h-6 -rotate-90" />
              </button>
            )}
            
            {/* Thumbnails */}
            <div className="absolute bottom-4 left-1/2 -translate-x-1/2 flex gap-2 max-w-full overflow-x-auto px-4">
              {tour.gallery.map((img, index) => (
                <button
                  key={index}
                  onClick={() => setActiveImage(index)}
                  className={`relative w-16 h-16 rounded-lg overflow-hidden border-2 flex-shrink-0 ${
                    index === activeImage ? 'border-white' : 'border-white/30'
                  }`}
                >
                  <Image src={img} alt={`Thumb ${index + 1}`} fill className="object-cover" />
                </button>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* Booking Bottom Sheet */}
      {showBookingSheet && (
        <div className="fixed inset-0 z-50 bg-black/50">
          <div className="absolute bottom-0 left-0 right-0 bg-white rounded-t-3xl p-6 max-h-[90vh] overflow-y-auto">
            {/* Header */}
            <div className="flex items-center justify-between mb-6">
              <h3 className="text-xl font-bold">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h3>
              <button
                onClick={() => setShowBookingSheet(false)}
                className="p-2 text-gray-500 hover:text-gray-700"
              >
                <X className="w-6 h-6" />
              </button>
            </div>
            
            {bookingStep === 1 && (
              <div className="space-y-6">
                {/* Tour Summary */}
                <div className="bg-gray-50 rounded-xl p-4">
                  <h4 className="font-semibold mb-2">{tour.title}</h4>
                  <div className="flex items-center justify-between text-sm text-gray-600">
                    <span>{tour.departures[selectedDeparture].dateLabel}</span>
                    <span>{tour.duration}</span>
                  </div>
                </div>
                
                {/* Guest Count */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á
                  </label>
                  <div className="flex items-center gap-4">
                    <button className="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center">
                      -
                    </button>
                    <span className="text-xl font-semibold">1</span>
                    <button className="w-10 h-10 bg-blue-600 text-white rounded-full flex items-center justify-center">
                      +
                    </button>
                  </div>
                </div>
                
                {/* Price Summary */}
                <div className="bg-blue-50 rounded-xl p-4">
                  <div className="flex justify-between items-center mb-2">
                    <span>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô</span>
                    <span className="font-semibold">‡∏ø{formatPrice(tour.departures[selectedDeparture].price)}</span>
                  </div>
                  <div className="flex justify-between items-center text-lg font-bold text-blue-600 border-t border-blue-200 pt-2">
                    <span>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                    <span>‡∏ø{formatPrice(tour.departures[selectedDeparture].price)}</span>
                  </div>
                </div>
                
                {/* Action Buttons */}
                <div className="space-y-3">
                  <button
                    onClick={() => {
                      setBookingStep(2)
                      trackEvent('booking_continue_clicked')
                    }}
                    className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-4 rounded-xl font-bold text-lg"
                  >
                    ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
                  </button>
                  
                  <div className="flex gap-3">
                    <a 
                      href="tel:+66123456789"
                      className="flex-1 border-2 border-green-500 text-green-600 py-3 rounded-xl font-semibold text-center"
                    >
                      ‡πÇ‡∏ó‡∏£‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°
                    </a>
                    <a 
                      href="https://line.me/ti/p/~@tourwow"
                      className="flex-1 bg-green-500 text-white py-3 rounded-xl font-semibold text-center"
                    >
                      Line Chat
                    </a>
                  </div>
                </div>
              </div>
            )}
            
            {bookingStep === 2 && (
              <div className="space-y-6">
                <div className="text-center">
                  <CheckCircle className="w-16 h-16 text-green-500 mx-auto mb-4" />
                  <h4 className="text-xl font-bold mb-2">‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à!</h4>
                  <p className="text-gray-600 mb-6">
                    ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ<br />
                    ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
                  </p>
                  
                  <div className="space-y-3">
                    <a 
                      href="tel:+66123456789"
                      className="w-full bg-green-500 text-white py-4 rounded-xl font-bold text-lg flex items-center justify-center gap-2"
                      onClick={() => trackEvent('final_phone_clicked')}
                    >
                      <Phone className="w-5 h-5" />
                      ‡πÇ‡∏ó‡∏£ 02-123-4567
                    </a>
                    
                    <a 
                      href="https://line.me/ti/p/~@tourwow"
                      className="w-full border-2 border-green-500 text-green-600 py-4 rounded-xl font-bold text-lg flex items-center justify-center gap-2"
                      onClick={() => trackEvent('final_line_clicked')}
                    >
                      <MessageCircle className="w-5 h-5" />
                      ‡πÅ‡∏ä‡∏ó LINE @tourwow
                    </a>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  )
}