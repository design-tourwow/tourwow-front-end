'use client'

import React, { useState, useEffect } from 'react'
import { useParams, useRouter } from 'next/navigation'
import { 
  ArrowLeft, Star, Heart, Share2, MapPin, Clock, Users,
  Phone, MessageCircle, ArrowRight, Calendar, CheckCircle,
  X, Eye, ChevronLeft, ChevronRight, AlertCircle, Info,
  Award, Shield, Sparkles, TrendingUp, Camera, Play,
  Wifi, Car, Utensils, Bed, Plane, Globe, ThumbsUp
} from 'lucide-react'
import BookingModal from '@/components/BookingModal'

interface BookingFormData {
  name: string;
  phone: string;
  email?: string;
}

// Enhanced mock tour data
const mockTours = [
  {
    id: 1,
    title: "‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô 7 ‡∏ß‡∏±‡∏ô 6 ‡∏Ñ‡∏∑‡∏ô ‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß-‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï-‡πÇ‡∏≠‡∏ã‡∏≤‡∏Å‡πâ‡∏≤",
    price: 45900,
    originalPrice: 52900,
    duration: "7 ‡∏ß‡∏±‡∏ô 6 ‡∏Ñ‡∏∑‡∏ô",
    rating: 4.8,
    reviews: 127,
    highlights: ["‡∏ß‡∏±‡∏î‡∏Ñ‡∏¥‡πÇ‡∏¢‡∏°‡∏¥‡∏ã‡∏∏", "‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡∏ü‡∏π‡∏à‡∏¥", "‡∏ä‡∏¥‡∏ô‡∏à‡∏π‡∏Å‡∏∏", "‡∏î‡∏≤‡πÄ‡∏ï‡∏∞‡∏ö‡∏≤‡∏ä‡∏¥", "‡∏≠‡∏≤‡∏£‡∏≤‡∏ä‡∏¥‡∏¢‡∏≤‡∏°‡πà‡∏≤", "‡πÇ‡∏î‡∏ó‡∏ô‡πÇ‡∏ö‡∏£‡∏¥"],
    destinations: ["‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß", "‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï", "‡πÇ‡∏≠‡∏ã‡∏≤‡∏Å‡πâ‡∏≤"],
    country: "‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô",
    airline: "JAL",
    hotel: "4-5 ‡∏î‡∏≤‡∏ß",
    availableSeats: 8,
    totalSeats: 35,
    badge: "‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°",
    includes: ["‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô", "‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏° 4-5 ‡∏î‡∏≤‡∏ß", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤ ‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô ‡πÄ‡∏¢‡πá‡∏ô", "‡πÑ‡∏Å‡∏î‡πå‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û", "‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á", "‡∏£‡∏ñ‡πÇ‡∏Ñ‡πâ‡∏ä‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®"],
    excludes: ["‡∏Ñ‡πà‡∏≤‡∏ß‡∏µ‡∏ã‡πà‡∏≤", "‡∏ó‡∏¥‡∏õ‡πÑ‡∏Å‡∏î‡πå 3,000 ‡∏ö‡∏≤‡∏ó", "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏ô‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"],
    departureDate: '2024-03-15',
    departureDates: [
      { date: '15 ‡∏°‡∏µ.‡∏Ñ. 2024', price: 45900, available: true, seats: 8 },
      { date: '22 ‡∏°‡∏µ.‡∏Ñ. 2024', price: 47900, available: true, seats: 12 },
      { date: '29 ‡∏°‡∏µ.‡∏Ñ. 2024', price: 49900, available: true, seats: 15 },
      { date: '5 ‡πÄ‡∏°.‡∏¢. 2024', price: 52900, available: true, seats: 20 },
    ],
    groupSize: { min: 15, max: 35 },
    overview: "‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô‡∏™‡∏∏‡∏î‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Å ‡∏û‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏£‡∏ß‡∏à 3 ‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ ‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡πÇ‡∏ï‡πÅ‡∏´‡πà‡∏á‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏° ‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏ã‡∏≤‡∏Å‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÅ‡∏´‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡∏ü‡∏π‡∏à‡∏¥ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏•‡∏∑‡∏°‡πÉ‡∏ô‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏ô‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞",
    itinerary: [
      {
        day: 1,
        title: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1 - ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏π‡πà‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß",
        activities: [
          "‡∏≠‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡∏™‡∏∏‡∏ß‡∏£‡∏£‡∏ì‡∏†‡∏π‡∏°‡∏¥ ‡πÄ‡∏ß‡∏•‡∏≤ 01:25 ‡∏ô.",
          "‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ñ‡∏∂‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡∏ô‡∏≤‡∏£‡∏¥‡∏ï‡∏∞ ‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß ‡πÄ‡∏ß‡∏•‡∏≤ 08:50 ‡∏ô.",
          "‡∏ô‡∏≥‡∏ó‡πà‡∏≤‡∏ô‡πÄ‡∏¢‡∏∑‡∏≠‡∏ô‡∏®‡∏≤‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏≤‡∏ã‡∏≤‡∏Å‡∏∏‡∏™‡∏∞ (Asakusa Shrine)",
          "‡∏ä‡∏°‡πÅ‡∏•‡∏∞‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏¢‡πà‡∏≤‡∏ô Nakamise Shopping Street", 
          "‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏° ‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô"
        ],
        meals: ["‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏¢‡πá‡∏ô"],
        hotel: "Hotel Gracery Shinjuku ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡πà‡∏≤"
      },
      {
        day: 2,
        title: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 2 - ‡∏ä‡∏°‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡∏ü‡∏π‡∏à‡∏¥ + ‡∏Æ‡∏≤‡πÇ‡∏Å‡πÄ‡∏ô‡πà",
        activities: [
          "‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°",
          "‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏π‡πà‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡∏ü‡∏π‡∏à‡∏¥ ‡∏ä‡∏±‡πâ‡∏ô 5 (‡∏´‡∏≤‡∏Å‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢)",
          "‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏ä‡∏°‡∏ó‡∏∞‡πÄ‡∏•‡∏™‡∏≤‡∏ö‡∏≠‡∏≤‡∏ä‡∏¥ (Lake Ashi)",
          "‡∏ô‡∏±‡πà‡∏á‡∏Å‡∏£‡∏∞‡πÄ‡∏ä‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡πÇ‡∏Ñ‡∏°‡∏∞‡∏á‡∏∞‡∏î‡∏≤‡πÄ‡∏Å‡∏∞",
          "‡πÅ‡∏ß‡∏∞‡∏ä‡∏°‡πÅ‡∏•‡∏∞‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏ó‡∏µ‡πà Gotemba Premium Outlet"
        ],
        meals: ["‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏¢‡πá‡∏ô"],
        hotel: "Hotel Gracery Shinjuku ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡πà‡∏≤"
      },
      {
        day: 3, 
        title: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 3 - ‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß - ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢",
        activities: [
          "‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°",
          "‡πÄ‡∏¢‡∏∑‡∏≠‡∏ô Imperial Palace East Gardens",
          "‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏¢‡πà‡∏≤‡∏ô Ginza ‡∏´‡∏£‡∏∑‡∏≠ Shibuya",
          "‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏ß‡∏¥‡∏ß‡∏Å‡∏£‡∏∏‡∏á‡πÇ‡∏ï‡πÄ‡∏Å‡∏µ‡∏¢‡∏ß‡∏à‡∏≤‡∏Å Tokyo Skytree ‡∏´‡∏£‡∏∑‡∏≠ Tokyo Tower",
          "‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏¢‡πà‡∏≤‡∏ô Harajuku ‡πÅ‡∏•‡∏∞ Omotesando"
        ],
        meals: ["‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏¢‡πá‡∏ô"],
        hotel: "Hotel Gracery Shinjuku ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡πà‡∏≤"
      }
    ],
    awards: ["TripAdvisor Excellence 2024", "Thailand Tourism Awards", "Best Tour Package 2024"],
    certifications: ["ISO 9001:2015", "ATTA Member", "TAT License"],
    gallery: 12,
    videoUrl: "https://www.youtube.com/watch?v=example",
    lastBooked: "2 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß",
    trending: true
  },
  {
    id: 2,
    title: "‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ‡πÉ‡∏ï‡πâ 6 ‡∏ß‡∏±‡∏ô 5 ‡∏Ñ‡∏∑‡∏ô ‡πÇ‡∏ã‡∏•-‡∏õ‡∏π‡∏ã‡∏≤‡∏ô-‡πÄ‡∏ä‡∏à‡∏π",
    price: 38900,
    originalPrice: 45900,
    duration: "6 ‡∏ß‡∏±‡∏ô 5 ‡∏Ñ‡∏∑‡∏ô",
    rating: 4.7,
    reviews: 89,
    highlights: ["‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏ß‡∏±‡∏á‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏ö‡∏Å‡∏Å‡∏∏‡∏á", "‡πÄ‡∏Å‡∏≤‡∏∞‡πÄ‡∏ä‡∏à‡∏π", "‡∏ï‡∏•‡∏≤‡∏î‡∏ô‡∏±‡∏°‡πÅ‡∏î‡∏°‡∏∏‡∏ô", "‡∏´‡∏≠‡∏Ñ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏ô‡πÇ‡∏ã‡∏•", "‡∏Æ‡∏á‡πÅ‡∏î", "‡∏°‡∏¢‡∏≠‡∏á‡∏î‡∏á"],
    destinations: ["‡πÇ‡∏ã‡∏•", "‡∏õ‡∏π‡∏ã‡∏≤‡∏ô", "‡πÄ‡∏ä‡∏à‡∏π"],
    country: "‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ",
    airline: "Korean Air",
    hotel: "4 ‡∏î‡∏≤‡∏ß",
    availableSeats: 15,
    totalSeats: 40,
    badge: "‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô",
    includes: ["‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô", "‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°", "‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡πÑ‡∏Å‡∏î‡πå‡πÑ‡∏ó‡∏¢"],
    departureDate: '2024-04-10'
  },
  {
    id: 3,
    title: "‡∏¢‡∏∏‡πÇ‡∏£‡∏õ 12 ‡∏ß‡∏±‡∏ô 11 ‡∏Ñ‡∏∑‡∏ô ‡∏ù‡∏£‡∏±‡πà‡∏á‡πÄ‡∏®‡∏™-‡∏≠‡∏¥‡∏ï‡∏≤‡∏•‡∏µ-‡∏™‡∏ß‡∏¥‡∏ï‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏ô‡∏î‡πå",
    price: 129900,
    originalPrice: 149900,
    duration: "12 ‡∏ß‡∏±‡∏ô 11 ‡∏Ñ‡∏∑‡∏ô",
    rating: 4.9,
    reviews: 203,
    highlights: ["‡∏´‡∏≠‡πÑ‡∏≠‡πÄ‡∏ü‡∏•", "‡πÇ‡∏Ñ‡∏•‡∏≠‡∏™‡πÄ‡∏ã‡∏µ‡∏¢‡∏°", "‡∏´‡∏≠‡πÄ‡∏≠‡∏ô‡∏õ‡∏¥‡∏ã‡∏≤", "‡πÄ‡∏ó‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ç‡∏≤‡πÅ‡∏≠‡∏•‡∏õ‡πå"],
    destinations: ["‡∏õ‡∏≤‡∏£‡∏µ‡∏™", "‡πÇ‡∏£‡∏°", "‡∏°‡∏¥‡∏•‡∏≤‡∏ô", "‡∏ã‡∏π‡∏£‡∏¥‡∏Ñ"],
    country: "‡∏¢‡∏∏‡πÇ‡∏£‡∏õ",
    airline: "Emirates",
    hotel: "4-5 ‡∏î‡∏≤‡∏ß",
    availableSeats: 5,
    totalSeats: 28,
    badge: "‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°",
    includes: ["‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô", "‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°", "‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£", "‡πÑ‡∏Å‡∏î‡πå‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô", "‡∏£‡∏ñ‡∏ó‡∏±‡∏ß‡∏£‡πå"],
    departureDate: '2024-05-20'
  }
]

// Function to get tour images
const getTourImage = (tour: any) => {
  const countryImages: { [key: string]: string[] } = {
    '‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô': [
      'https://picsum.photos/800/500?random=1',
      'https://picsum.photos/800/500?random=2',
      'https://picsum.photos/800/500?random=3',
      'https://picsum.photos/800/500?random=4',
      'https://picsum.photos/800/500?random=5'
    ],
    '‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ': [
      'https://picsum.photos/800/500?random=6',
      'https://picsum.photos/800/500?random=7'
    ],
    '‡∏¢‡∏∏‡πÇ‡∏£‡∏õ': [
      'https://picsum.photos/800/500?random=8',
      'https://picsum.photos/800/500?random=9'
    ]
  }
  
  return countryImages[tour.country] || ['https://images.unsplash.com/photo-1501785888041-af3ef285b470?w=800&h=500&fit=crop']
}

// Sample reviews data
const sampleReviews = [
  {
    id: 1,
    name: "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ",
    avatar: "üë®‚Äçüíº",
    rating: 5,
    date: "3 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß",
    comment: "‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö ‡πÑ‡∏Å‡∏î‡πå‡πÉ‡∏™‡πà‡πÉ‡∏à‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏£‡πà‡∏≠‡∏¢ ‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏∏‡∏î‡πÜ ‡∏à‡∏∞‡πÑ‡∏õ‡∏≠‡∏µ‡∏Å‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô",
    helpful: 12,
    images: 3
  },
  {
    id: 2,
    name: "‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏¥‡∏†‡∏≤ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°",
    avatar: "üë©‚Äçüíª",
    rating: 5,
    date: "1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß",
    comment: "‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡∏Ñ‡πà‡∏∞ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° ‡πÑ‡∏Å‡∏î‡πå‡∏û‡∏π‡∏î‡∏î‡∏µ ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÑ‡∏î‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏¢‡∏≠‡∏∞",
    helpful: 8,
    images: 5
  },
  {
    id: 3,
    name: "‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò ‡∏ô‡∏±‡∏Å‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß",
    avatar: "üß≥",
    rating: 4,
    date: "2 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß", 
    comment: "‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏°‡∏µ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏ö‡∏≤‡∏á‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡πâ‡∏≠‡∏¢‡πÑ‡∏õ‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡∏Å‡πá‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏π‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏£‡∏∏‡πä‡∏õ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
    helpful: 15,
    images: 2
  }
]

export default function TourDetailPage() {
  const params = useParams()
  const router = useRouter()
  const [isClient, setIsClient] = useState(false)
  const [selectedImage, setSelectedImage] = useState(0)
  const [activeTab, setActiveTab] = useState('overview')
  const [showBookingModal, setShowBookingModal] = useState(false)
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [isWishlisted, setIsWishlisted] = useState(false)
  const [selectedDate, setSelectedDate] = useState('')
  const [travelers, setTravelers] = useState(2)
  const [showAllReviews, setShowAllReviews] = useState(false)
  const [showFullItinerary, setShowFullItinerary] = useState(false)

  // Prevent hydration mismatch
  useEffect(() => {
    setIsClient(true)
  }, [])
  
  // Find tour by id
  const tourId = parseInt(params?.id as string)
  const tour = mockTours.find(t => t.id === tourId)
  
  if (!tour) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center px-4">
        <div className="text-center max-w-md">
          <div className="text-6xl mb-4">üòï</div>
          <h1 className="text-xl font-bold text-gray-900 mb-2">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ó‡∏±‡∏ß‡∏£‡πå</h1>
          <p className="text-gray-600 text-sm mb-6">‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≠‡∏á‡∏´‡∏≤</p>
          <button 
            onClick={() => router.back()}
            className="w-full py-3 bg-blue-600 text-white rounded-xl font-medium"
          >
            ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
          </button>
        </div>
      </div>
    )
  }
  
  // Prevent hydration mismatch
  if (!isClient) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
        </div>
      </div>
    )
  }

  const images = getTourImage(tour)
  const savingsAmount = tour.originalPrice - tour.price
  const savingsPercent = Math.round((savingsAmount / tour.originalPrice) * 100)
  const bookedPercent = Math.round(((tour.totalSeats - tour.availableSeats) / tour.totalSeats) * 100)
  
  const handleBooking = () => {
    setShowBookingModal(true)
  }

  const handleBookingSubmit = async (formData: BookingFormData) => {
    setIsSubmitting(true)
    try {
      await new Promise(resolve => setTimeout(resolve, 2000))
      setShowBookingModal(false)
      // Navigate to booking success page
      router.push(`/booking-success?tour=${tour.title}&price=${tour.price}&travelers=${travelers}`)
    } catch (error) {
      console.error('Booking error:', error)
    } finally {
      setIsSubmitting(false)
    }
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* üì± ENHANCED MOBILE HEADER */}
      <header className="sticky top-0 z-50 bg-white/95 backdrop-blur-sm shadow-sm border-b border-gray-100">
        <div className="flex items-center justify-between px-4 py-3">
          <button 
            onClick={() => router.back()}
            className="p-2 -ml-2 hover:bg-gray-100 rounded-lg transition-colors"
          >
            <ArrowLeft className="w-6 h-6 text-gray-700" />
          </button>
          
          <div className="flex-1 text-center px-4">
            <h1 className="font-semibold text-gray-900 truncate text-sm">
              {tour.title}
            </h1>
            {tour.trending && (
              <div className="flex items-center justify-center gap-1 mt-1">
                <TrendingUp className="w-3 h-3 text-red-500" />
                <span className="text-xs text-red-500 font-medium">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≤‡πÅ‡∏£‡∏á</span>
              </div>
            )}
          </div>
          
          <div className="flex items-center gap-1">
            <button 
              onClick={() => setIsWishlisted(!isWishlisted)}
              className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
            >
              <Heart className={`w-5 h-5 ${isWishlisted ? 'fill-red-500 text-red-500' : 'text-gray-500'}`} />
            </button>
            <button className="p-2 hover:bg-gray-100 rounded-lg transition-colors">
              <Share2 className="w-5 h-5 text-gray-500" />
            </button>
          </div>
        </div>
      </header>

      {/* üñºÔ∏è ENHANCED HERO IMAGE SECTION */}
      <section className="relative">
        <div className="aspect-[4/3] bg-gray-200 relative overflow-hidden">
          <img
            src={images[selectedImage]}
            alt={tour.title}
            className="w-full h-full object-cover"
          />
          
          {/* Enhanced Overlay Elements */}
          <div className="absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent"></div>
          
          {/* Top Left - Awards & Certifications */}
          <div className="absolute top-4 left-4 flex flex-col gap-2">
            {tour.awards && (
              <div className="bg-gradient-to-r from-yellow-500 to-orange-500 text-white px-3 py-1 rounded-full text-xs font-bold shadow-lg flex items-center gap-1">
                <Award className="w-3 h-3" />
                <span>‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• TripAdvisor</span>
              </div>
            )}
            <div className="bg-green-500 text-white px-3 py-1 rounded-full text-xs font-bold shadow-lg flex items-center gap-1">
              <Shield className="w-3 h-3" />
              <span>‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 100%</span>
            </div>
          </div>
          
          {/* Top Right - Discount Badge */}
          <div className="absolute top-4 right-4 bg-gradient-to-r from-red-500 to-red-600 text-white px-4 py-2 rounded-xl shadow-lg">
            <div className="text-sm font-bold">‡∏•‡∏î {savingsPercent}%</div>
            <div className="text-xs opacity-90">‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î ‡∏ø{savingsAmount.toLocaleString()}</div>
          </div>
          
          {/* Bottom Left - Booking Status */}
          <div className="absolute bottom-4 left-4 space-y-2">
            {tour.lastBooked && (
              <div className="bg-blue-600/90 backdrop-blur-sm text-white px-3 py-2 rounded-lg shadow-lg text-sm">
                üî• ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏à‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ {tour.lastBooked}
              </div>
            )}
            <div className="bg-gradient-to-r from-orange-500 to-red-500 text-white px-3 py-2 rounded-xl shadow-lg flex items-center gap-1">
              <AlertCircle className="w-4 h-4" />
              <span className="text-sm font-medium">‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {tour.availableSeats} ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á</span>
            </div>
          </div>
          
          {/* Bottom Right - Media Info */}
          <div className="absolute bottom-4 right-4 flex items-center gap-2">
            {tour.gallery && (
              <div className="bg-black/60 backdrop-blur-sm text-white px-3 py-1 rounded-lg flex items-center gap-1">
                <Camera className="w-3 h-3" />
                <span className="text-xs">{tour.gallery} ‡∏£‡∏π‡∏õ</span>
              </div>
            )}
            {tour.videoUrl && (
              <div className="bg-black/60 backdrop-blur-sm text-white px-3 py-1 rounded-lg flex items-center gap-1">
                <Play className="w-3 h-3" />
                <span className="text-xs">‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠</span>
              </div>
            )}
          </div>
          
          {/* Image Navigation */}
          {images.length > 1 && (
            <>
              <button
                onClick={() => setSelectedImage(Math.max(0, selectedImage - 1))}
                disabled={selectedImage === 0}
                className="absolute left-4 top-1/2 -translate-y-1/2 p-3 bg-black/30 backdrop-blur-sm text-white rounded-full disabled:opacity-30 hover:bg-black/50 transition-all"
              >
                <ChevronLeft className="w-5 h-5" />
              </button>
              <button
                onClick={() => setSelectedImage(Math.min(images.length - 1, selectedImage + 1))}
                disabled={selectedImage === images.length - 1}
                className="absolute right-4 top-1/2 -translate-y-1/2 p-3 bg-black/30 backdrop-blur-sm text-white rounded-full disabled:opacity-30 hover:bg-black/50 transition-all"
              >
                <ChevronRight className="w-5 h-5" />
              </button>
              
              {/* Dot Indicators */}
              <div className="absolute bottom-16 left-1/2 -translate-x-1/2 flex items-center gap-2">
                {images.map((_, index) => (
                  <button
                    key={index}
                    onClick={() => setSelectedImage(index)}
                    className={`rounded-full transition-all ${
                      selectedImage === index 
                        ? 'bg-white' 
                        : 'bg-white/60 hover:bg-white/80'
                    }`}
                    style={{
                      width: selectedImage === index ? '24px' : '8px',
                      height: '8px'
                    }}
                  />
                ))}
              </div>
            </>
          )}
        </div>
      </section>

      {/* üìã ENHANCED MAIN CONTENT */}
      <main className="px-4 py-4 space-y-5">
        
        {/* ‚≠ê ENHANCED QUICK INFO CARD */}
        <div className="bg-white rounded-2xl p-6 shadow-lg border border-gray-100">
          {/* Enhanced Badge Section */}
          <div className="flex items-center gap-2 mb-4">
            {tour.badge && (
              <span className={`inline-flex items-center gap-1 px-3 py-1.5 rounded-full text-xs font-bold ${
                tour.badge === '‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°' ? 'bg-gradient-to-r from-blue-500 to-blue-600 text-white' :
                tour.badge === '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô' ? 'bg-gradient-to-r from-green-500 to-green-600 text-white' :
                'bg-gradient-to-r from-purple-500 to-purple-600 text-white'
              }`}>
                {tour.badge === '‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°' && <TrendingUp className="w-3 h-3" />}
                {tour.badge === '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô' && <Sparkles className="w-3 h-3" />}
                {tour.badge}
              </span>
            )}
            <span className="inline-flex items-center gap-1 px-3 py-1 bg-orange-100 text-orange-800 rounded-full text-xs font-medium">
              <Users className="w-3 h-3" />
              ‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß {bookedPercent}%
            </span>
          </div>
          
          <h2 className="text-xl font-bold text-gray-900 leading-tight mb-4">
            {tour.title}
          </h2>
          
          {/* Enhanced Rating & Reviews */}
          <div className="flex items-center gap-4 mb-4">
            <div className="flex items-center gap-1">
              <div className="flex items-center">
                {[...Array(5)].map((_, i) => (
                  <Star
                    key={i}
                    className={`w-4 h-4 ${
                      i < Math.floor(tour.rating) 
                        ? 'fill-yellow-400 text-yellow-400' 
                        : 'text-gray-300'
                    }`}
                  />
                ))}
              </div>
              <span className="font-semibold text-gray-900">{tour.rating}</span>
              <span className="text-gray-500 text-sm">({tour.reviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß)</span>
            </div>
            <div className="flex items-center gap-1 text-gray-600 text-sm">
              <Clock className="w-4 h-4" />
              <span>{tour.duration}</span>
            </div>
          </div>
          
          {/* Destinations with Icons */}
          <div className="flex flex-wrap gap-2 mb-5">
            {tour.destinations.map((dest, index) => (
              <span key={index} className="inline-flex items-center gap-1 px-3 py-2 bg-gradient-to-r from-blue-50 to-blue-100 text-blue-700 rounded-xl text-sm font-medium border border-blue-200">
                <MapPin className="w-3 h-3" />
                {dest}
              </span>
            ))}
          </div>
          
          {/* Enhanced Price Section */}
          <div className="bg-gradient-to-r from-blue-50 via-blue-100 to-indigo-100 rounded-2xl p-5 mb-6 border border-blue-200">
            <div className="flex items-baseline gap-3 mb-2">
              <span className="text-3xl font-bold text-blue-600">
                ‡∏ø{tour.price.toLocaleString()}
              </span>
              <span className="text-lg text-gray-500 line-through">
                ‡∏ø{tour.originalPrice.toLocaleString()}
              </span>
              <span className="bg-red-500 text-white px-2 py-1 rounded-lg text-xs font-bold">
                -{savingsPercent}%
              </span>
            </div>
            <p className="text-sm text-gray-600 mb-3">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ó‡πà‡∏≤‡∏ô ‚Ä¢ ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á ‚Ä¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏≠‡∏ö‡πÅ‡∏ù‡∏á</p>
            
            {/* Price Benefits */}
            <div className="grid grid-cols-2 gap-3 text-xs">
              <div className="flex items-center gap-1 text-green-600">
                <CheckCircle className="w-3 h-3" />
                <span>‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</span>
              </div>
              <div className="flex items-center gap-1 text-green-600">
                <CheckCircle className="w-3 h-3" />
                <span>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ü‡∏£‡∏µ 7 ‡∏ß‡∏±‡∏ô</span>
              </div>
            </div>
          </div>

          {/* Group Size & Date Selection */}
          <div className="grid grid-cols-1 gap-4 mb-6">
            {/* Travelers Selection */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-3">
                ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á
              </label>
              <div className="flex items-center gap-4 bg-gray-50 rounded-xl p-3">
                <button
                  onClick={() => setTravelers(Math.max(1, travelers - 1))}
                  className="w-8 h-8 bg-white rounded-lg shadow-sm flex items-center justify-center hover:bg-gray-100 transition-colors"
                >
                  <span className="text-lg font-bold text-gray-600">‚àí</span>
                </button>
                <div className="flex-1 text-center">
                  <span className="text-xl font-bold text-gray-900">{travelers}</span>
                  <span className="text-sm text-gray-600 ml-1">‡∏ó‡πà‡∏≤‡∏ô</span>
                </div>
                <button
                  onClick={() => setTravelers(travelers + 1)}
                  className="w-8 h-8 bg-white rounded-lg shadow-sm flex items-center justify-center hover:bg-gray-100 transition-colors"
                >
                  <span className="text-lg font-bold text-gray-600">+</span>
                </button>
              </div>
            </div>

            {/* Date Selection */}
            {tour.departureDates && (
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-3">
                  ‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á
                </label>
                <div className="space-y-2">
                  {tour.departureDates.map((date, index) => (
                    <div 
                      key={index}
                      className={`flex items-center justify-between p-3 border rounded-xl cursor-pointer transition-all ${
                        selectedDate === date.date 
                          ? 'border-blue-500 bg-blue-50' 
                          : 'border-gray-200 hover:border-gray-300'
                      }`}
                      onClick={() => setSelectedDate(date.date)}
                    >
                      <div>
                        <div className="font-medium text-gray-900">{date.date}</div>
                        <div className="text-xs text-gray-500">‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {date.seats} ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á</div>
                      </div>
                      <div className="text-right">
                        <div className="font-bold text-blue-600">‡∏ø{date.price.toLocaleString()}</div>
                        <div className="text-xs text-gray-500">‡∏ï‡πà‡∏≠‡∏ó‡πà‡∏≤‡∏ô</div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
          
          {/* üéØ ENHANCED PRIMARY CTA BUTTON */}
          <button
            onClick={handleBooking}
            disabled={isSubmitting}
            className="w-full py-4 bg-gradient-to-r from-blue-600 via-blue-700 to-blue-800 hover:from-blue-700 hover:via-blue-800 hover:to-blue-900 text-white rounded-2xl font-bold text-lg shadow-lg hover:shadow-2xl transition-all transform hover:-translate-y-0.5 disabled:opacity-50 flex items-center justify-center gap-3"
          >
            {isSubmitting ? (
              <>
                <div className="animate-spin rounded-full h-6 w-6 border-2 border-white border-t-transparent"></div>
                ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...
              </>
            ) : (
              <>
                <Sparkles className="w-5 h-5" />
                ‡∏à‡∏≠‡∏á‡∏ó‡∏±‡∏ß‡∏£‡πå‡πÄ‡∏•‡∏¢ ‚Ä¢ ‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                <ArrowRight className="w-5 h-5" />
              </>
            )}
          </button>
          
          {/* Trust Signals */}
          <div className="flex items-center justify-center gap-4 mt-4 text-xs text-gray-500">
            <div className="flex items-center gap-1">
              <Shield className="w-3 h-3" />
              <span>‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</span>
            </div>
            <div className="flex items-center gap-1">
              <CheckCircle className="w-3 h-3" />
              <span>‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à</span>
            </div>
          </div>
        </div>

        {/* üìë ENHANCED CONTENT TABS */}
        <div className="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
          {/* Enhanced Tab Navigation */}
          <div className="flex overflow-x-auto border-b border-gray-200 bg-gray-50">
            {[
              { id: 'overview', label: '‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°', icon: Eye, count: null },
              { id: 'itinerary', label: '‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°', icon: Calendar, count: tour.itinerary?.length },
              { id: 'includes', label: '‡∏£‡∏ß‡∏°/‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°', icon: CheckCircle, count: null },
              { id: 'reviews', label: '‡∏£‡∏µ‡∏ß‡∏¥‡∏ß', icon: Star, count: tour.reviews },
              { id: 'contact', label: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠', icon: Phone, count: null }
            ].map((tab) => {
              const Icon = tab.icon
              return (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`flex items-center gap-2 px-5 py-4 text-sm font-medium whitespace-nowrap transition-all relative ${
                    activeTab === tab.id
                      ? 'text-blue-600 bg-white border-b-3 border-blue-600 shadow-sm'
                      : 'text-gray-600 hover:text-blue-600 hover:bg-white/50'
                  }`}
                >
                  <Icon className="w-4 h-4" />
                  <span>{tab.label}</span>
                  {tab.count && (
                    <span className={`px-2 py-0.5 rounded-full text-xs font-bold ${
                      activeTab === tab.id ? 'bg-blue-100 text-blue-600' : 'bg-gray-200 text-gray-600'
                    }`}>
                      {tab.count}
                    </span>
                  )}
                </button>
              )
            })}
          </div>
          
          {/* Enhanced Tab Content */}
          <div className="p-6">
            {activeTab === 'overview' && (
              <div className="space-y-6">
                <div>
                  <h3 className="font-bold text-gray-900 mb-4 flex items-center gap-2">
                    <Sparkles className="w-5 h-5 text-blue-600" />
                    ‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ô‡∏µ‡πâ?
                  </h3>
                  <p className="text-gray-700 leading-relaxed mb-4">{tour.overview}</p>
                </div>
                
                <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-5 border border-blue-200">
                  <h4 className="font-bold text-gray-900 mb-4">‡∏à‡∏∏‡∏î‡πÄ‡∏î‡πà‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</h4>
                  <div className="grid grid-cols-1 gap-3">
                    {tour.highlights.map((highlight, index) => (
                      <div key={index} className="flex items-start gap-3">
                        <div className="w-6 h-6 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                          <CheckCircle className="w-3 h-3 text-white" />
                        </div>
                        <span className="text-gray-800 font-medium">{highlight}</span>
                      </div>
                    ))}
                  </div>
                </div>
                
                <div className="grid grid-cols-2 gap-4">
                  <div className="bg-gradient-to-br from-blue-50 to-blue-100 rounded-2xl p-5 text-center border border-blue-200">
                    <div className="text-3xl mb-3">‚úàÔ∏è</div>
                    <div className="font-bold text-gray-900">{tour.airline}</div>
                    <div className="text-sm text-gray-600">‡∏™‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥</div>
                  </div>
                  <div className="bg-gradient-to-br from-purple-50 to-purple-100 rounded-2xl p-5 text-center border border-purple-200">
                    <div className="text-3xl mb-3">üè®</div>
                    <div className="font-bold text-gray-900">{tour.hotel}</div>
                    <div className="text-sm text-gray-600">‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û</div>
                  </div>
                </div>

                {/* Awards & Certifications */}
                {tour.awards && (
                  <div className="bg-gradient-to-r from-yellow-50 to-orange-50 rounded-2xl p-5 border border-yellow-200">
                    <h4 className="font-bold text-gray-900 mb-3 flex items-center gap-2">
                      <Award className="w-5 h-5 text-yellow-600" />
                      ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á
                    </h4>
                    <div className="flex flex-wrap gap-2">
                      {tour.awards.map((award, index) => (
                        <span key={index} className="inline-flex items-center gap-1 px-3 py-1 bg-white rounded-full text-sm font-medium text-gray-700 shadow-sm">
                          <Award className="w-3 h-3 text-yellow-500" />
                          {award}
                        </span>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            )}
            
            {activeTab === 'itinerary' && (
              <div className="space-y-5">
                <div className="flex items-center justify-between">
                  <h3 className="font-bold text-gray-900 flex items-center gap-2">
                    <Calendar className="w-5 h-5 text-blue-600" />
                    ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° {tour.duration}
                  </h3>
                  {tour.itinerary && tour.itinerary.length > 3 && (
                    <button
                      onClick={() => setShowFullItinerary(!showFullItinerary)}
                      className="text-sm text-blue-600 hover:text-blue-700 font-medium"
                    >
                      {showFullItinerary ? '‡∏¢‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°' : '‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'}
                    </button>
                  )}
                </div>
                
                <div className="space-y-4">
                  {tour.itinerary?.slice(0, showFullItinerary ? undefined : 3).map((day, index) => (
                    <div key={day.day} className="border border-gray-200 rounded-2xl p-5 hover:shadow-md transition-shadow bg-gradient-to-r from-gray-50 to-white">
                      <div className="flex items-start gap-4 mb-4">
                        <div className="w-12 h-12 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-full flex items-center justify-center font-bold text-lg shadow-lg flex-shrink-0">
                          {day.day}
                        </div>
                        <div className="flex-1">
                          <h4 className="font-bold text-gray-900 text-lg">{day.title}</h4>
                          {day.hotel && (
                            <p className="text-sm text-gray-600 flex items-center gap-1 mt-1">
                              <Bed className="w-3 h-3" />
                              {day.hotel}
                            </p>
                          )}
                        </div>
                      </div>
                      
                      <div className="space-y-3 ml-16">
                        {day.activities.map((activity, actIndex) => (
                          <div key={actIndex} className="flex items-start gap-3">
                            <div className="w-2 h-2 bg-blue-600 rounded-full mt-2 flex-shrink-0"></div>
                            <span className="text-gray-700">{activity}</span>
                          </div>
                        ))}
                        
                        {day.meals && (
                          <div className="bg-blue-50 rounded-xl p-3 border border-blue-200">
                            <h5 className="font-semibold text-blue-800 mb-2 flex items-center gap-2">
                              <Utensils className="w-4 h-4" />
                              ‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£
                            </h5>
                            <div className="flex flex-wrap gap-2">
                              {day.meals.map((meal, mealIndex) => (
                                <span key={mealIndex} className="px-2 py-1 bg-blue-100 text-blue-700 rounded-lg text-sm font-medium">
                                  {meal}
                                </span>
                              ))}
                            </div>
                          </div>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
                
                {!showFullItinerary && tour.itinerary && tour.itinerary.length > 3 && (
                  <div className="text-center py-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-200">
                    <span className="text-gray-600">‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏ï‡πá‡∏°...</span>
                    <button
                      onClick={() => setShowFullItinerary(true)}
                      className="block mx-auto mt-2 px-4 py-2 bg-blue-600 text-white rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors"
                    >
                      ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    </button>
                  </div>
                )}
              </div>
            )}
            
            {activeTab === 'includes' && (
              <div className="space-y-6">
                <h3 className="font-bold text-gray-900 mb-4 flex items-center gap-2">
                  <CheckCircle className="w-5 h-5 text-green-600" />
                  ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡∏ß‡∏£‡πå
                </h3>
                
                {/* Enhanced Includes */}
                <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-2xl p-5 border border-green-200">
                  <h4 className="font-bold text-green-800 mb-4 flex items-center gap-2">
                    <CheckCircle className="w-5 h-5" />
                    ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡πÅ‡∏•‡πâ‡∏ß
                  </h4>
                  <div className="grid grid-cols-1 gap-3">
                    {tour.includes.map((item, index) => (
                      <div key={index} className="flex items-start gap-3">
                        <CheckCircle className="w-5 h-5 text-green-600 flex-shrink-0 mt-0.5" />
                        <span className="text-green-800 font-medium">{item}</span>
                      </div>
                    ))}
                  </div>
                </div>
                
                {/* Enhanced Excludes */}
                <div className="bg-gradient-to-r from-red-50 to-pink-50 rounded-2xl p-5 border border-red-200">
                  <h4 className="font-bold text-red-800 mb-4 flex items-center gap-2">
                    <X className="w-5 h-5" />
                    ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°
                  </h4>
                  <div className="grid grid-cols-1 gap-3">
                    {tour.excludes?.map((item, index) => (
                      <div key={index} className="flex items-start gap-3">
                        <X className="w-5 h-5 text-red-600 flex-shrink-0 mt-0.5" />
                        <span className="text-red-800 font-medium">{item}</span>
                      </div>
                    ))}
                  </div>
                </div>
                
                {/* Group Size Info */}
                <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-5 border border-blue-200">
                  <h4 className="font-bold text-blue-800 mb-3 flex items-center gap-2">
                    <Users className="w-5 h-5" />
                    ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏∏‡πä‡∏õ‡∏ó‡∏±‡∏ß‡∏£‡πå
                  </h4>
                  <div className="grid grid-cols-2 gap-4">
                    <div className="bg-white rounded-xl p-3">
                      <div className="text-sm text-gray-600">‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏£‡∏∏‡πä‡∏õ</div>
                      <div className="font-bold text-blue-800">{tour.groupSize?.min} - {tour.groupSize?.max} ‡∏ó‡πà‡∏≤‡∏ô</div>
                    </div>
                    <div className="bg-white rounded-xl p-3">
                      <div className="text-sm text-gray-600">‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                      <div className="font-bold text-blue-800">{tour.totalSeats} ‡∏ó‡πà‡∏≤‡∏ô</div>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'reviews' && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <h3 className="font-bold text-gray-900 flex items-center gap-2">
                    <Star className="w-5 h-5 text-yellow-500" />
                    ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ({tour.reviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß)
                  </h3>
                  <div className="flex items-center gap-2 bg-gradient-to-r from-yellow-100 to-orange-100 px-3 py-2 rounded-xl border border-yellow-200">
                    <Star className="w-5 h-5 fill-yellow-400 text-yellow-400" />
                    <span className="font-bold text-lg text-gray-900">{tour.rating}</span>
                  </div>
                </div>
                
                {/* Rating Breakdown */}
                <div className="bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-5 border border-gray-200">
                  <h4 className="font-semibold text-gray-900 mb-4">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°</h4>
                  <div className="space-y-3">
                    {[5,4,3,2,1].map((star) => (
                      <div key={star} className="flex items-center gap-3">
                        <span className="text-sm text-gray-600 w-8">{star} ‡∏î‡∏≤‡∏ß</span>
                        <div className="flex-1 bg-gray-200 rounded-full h-2">
                          <div 
                            className="bg-gradient-to-r from-yellow-400 to-orange-500 h-2 rounded-full" 
                            style={{ width: `${star === 5 ? 75 : star === 4 ? 20 : star === 3 ? 3 : star === 2 ? 1 : 1}%` }}
                          ></div>
                        </div>
                        <span className="text-sm text-gray-600 w-8">{star === 5 ? '75%' : star === 4 ? '20%' : '3%'}</span>
                      </div>
                    ))}
                  </div>
                </div>
                
                {/* Sample Reviews */}
                <div className="space-y-4">
                  {sampleReviews.slice(0, showAllReviews ? undefined : 2).map((review) => (
                    <div key={review.id} className="bg-white border border-gray-200 rounded-2xl p-5 hover:shadow-md transition-shadow">
                      <div className="flex items-start gap-4 mb-4">
                        <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center text-white text-xl">
                          {review.avatar}
                        </div>
                        <div className="flex-1">
                          <div className="flex items-center justify-between mb-2">
                            <h5 className="font-semibold text-gray-900">{review.name}</h5>
                            <span className="text-sm text-gray-500">{review.date}</span>
                          </div>
                          <div className="flex items-center gap-2 mb-2">
                            <div className="flex items-center">
                              {[...Array(5)].map((_, i) => (
                                <Star
                                  key={i}
                                  className={`w-4 h-4 ${
                                    i < review.rating 
                                      ? 'fill-yellow-400 text-yellow-400' 
                                      : 'text-gray-300'
                                  }`}
                                />
                              ))}
                            </div>
                            {review.images > 0 && (
                              <span className="text-xs bg-blue-100 text-blue-600 px-2 py-1 rounded-full flex items-center gap-1">
                                <Camera className="w-3 h-3" />
                                {review.images} ‡∏£‡∏π‡∏õ
                              </span>
                            )}
                          </div>
                        </div>
                      </div>
                      <p className="text-gray-700 mb-3 leading-relaxed">{review.comment}</p>
                      <div className="flex items-center gap-4 text-sm">
                        <button className="flex items-center gap-1 text-gray-600 hover:text-blue-600 transition-colors">
                          <ThumbsUp className="w-4 h-4" />
                          ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå ({review.helpful})
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
                
                {sampleReviews.length > 2 && (
                  <div className="text-center">
                    <button
                      onClick={() => setShowAllReviews(!showAllReviews)}
                      className="px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-xl font-medium hover:from-blue-700 hover:to-blue-800 transition-all"
                    >
                      {showAllReviews ? '‡∏î‡∏π‡∏ô‡πâ‡∏≠‡∏¢‡∏•‡∏á' : `‡∏î‡∏π‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (${tour.reviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß)`}
                    </button>
                  </div>
                )}
              </div>
            )}
            
            {activeTab === 'contact' && (
              <div className="space-y-6">
                <h3 className="font-bold text-gray-900 flex items-center gap-2">
                  <Phone className="w-5 h-5 text-blue-600" />
                  ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                </h3>
                
                <div className="grid grid-cols-1 gap-4">
                  <a href="tel:021234567" className="flex items-center gap-4 p-5 bg-gradient-to-r from-blue-50 to-blue-100 rounded-2xl border border-blue-200 hover:shadow-lg transition-all group active:scale-95">
                    <div className="w-14 h-14 bg-gradient-to-r from-blue-600 to-blue-700 rounded-2xl flex items-center justify-center shadow-lg">
                      <Phone className="w-7 h-7 text-white" />
                    </div>
                    <div className="flex-1">
                      <div className="font-bold text-gray-900 text-lg group-hover:text-blue-600 transition-colors">‡πÇ‡∏ó‡∏£ 02-123-4567</div>
                      <div className="text-sm text-gray-600">‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ 08:00-20:00 ‡∏ô. ‚Ä¢ ‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏ü‡∏£‡∏µ</div>
                      <div className="text-xs text-blue-600 mt-1">üìû ‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏ó‡∏£‡πÄ‡∏•‡∏¢</div>
                    </div>
                  </a>
                  
                  <a href="https://line.me/ti/p/@tourwow" target="_blank" rel="noopener noreferrer" className="flex items-center gap-4 p-5 bg-gradient-to-r from-green-50 to-green-100 rounded-2xl border border-green-200 hover:shadow-lg transition-all group active:scale-95">
                    <div className="w-14 h-14 bg-gradient-to-r from-green-600 to-green-700 rounded-2xl flex items-center justify-center shadow-lg">
                      <MessageCircle className="w-7 h-7 text-white" />
                    </div>
                    <div className="flex-1">
                      <div className="font-bold text-gray-900 text-lg group-hover:text-green-600 transition-colors">LINE: @tourwow</div>
                      <div className="text-sm text-gray-600">‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß 24/7 ‚Ä¢ ‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà</div>
                      <div className="text-xs text-green-600 mt-1">üí¨ ‡πÅ‡∏ä‡∏ó‡πÄ‡∏•‡∏¢</div>
                    </div>
                  </a>

                  <div className="bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-5 border border-gray-200">
                    <h4 className="font-bold text-gray-900 mb-3">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</h4>
                    <div className="space-y-2 text-sm text-gray-700">
                      <div className="flex items-center gap-2">
                        <Clock className="w-4 h-4 text-blue-600" />
                        <span><strong>‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå:</strong> 08:00-20:00 ‡∏ô.</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <Clock className="w-4 h-4 text-blue-600" />
                        <span><strong>‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå:</strong> 09:00-18:00 ‡∏ô.</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </main>

      {/* üîí ENHANCED STICKY BOTTOM CTA */}
      <div className="sticky bottom-0 left-0 right-0 bg-white/95 backdrop-blur-sm border-t border-gray-200 px-4 py-4 shadow-2xl">
        <div className="flex items-center gap-4">
          <div className="flex-1">
            <div className="flex items-center gap-2">
              <div className="text-xs text-gray-500">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</div>
              <span className="bg-red-500 text-white px-2 py-0.5 rounded text-xs font-bold">
                -{savingsPercent}%
              </span>
            </div>
            <div className="text-lg font-bold text-blue-600">
              ‡∏ø{tour.price.toLocaleString()}
            </div>
          </div>
          <button
            onClick={handleBooking}
            disabled={isSubmitting}
            className="flex-1 max-w-xs py-3 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white rounded-xl font-bold shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-0.5 flex items-center justify-center gap-2 disabled:opacity-50"
          >
            {isSubmitting ? (
              <>
                <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent"></div>
                ‡∏à‡∏≠‡∏á...
              </>
            ) : (
              <>
                <Sparkles className="w-4 h-4" />
                ‡∏à‡∏≠‡∏á‡πÄ‡∏•‡∏¢
                <ArrowRight className="w-4 h-4" />
              </>
            )}
          </button>
        </div>
      </div>

      {/* Enhanced Booking Modal */}
      {showBookingModal && (
        <BookingModal
          isOpen={showBookingModal}
          onClose={() => setShowBookingModal(false)}
          onConfirm={handleBookingSubmit}
          tourSummary={{
            tourName: tour.title,
            dateRange: selectedDate || tour.departureDate,
            pricePerPerson: tour.price,
            travelerCount: travelers,
            totalAmount: tour.price * travelers
          }}
          isGuestBooking={true}
        />
      )}
    </div>
  )
}