'use client'

import Image from 'next/image'
import { Star, MapPin, Clock, Users, Calendar, Check, ArrowLeft, Heart, Share2, ChevronDown, ChevronUp, X } from 'lucide-react'
import { useState } from 'react'
import { useRouter } from 'next/navigation'
import { useLoading } from '@/components/LoadingProvider'
import { Tour } from '@/lib/tour-data'
import StarRating from '@/components/StarRating'

interface TourDetailClientProps {
  tour: Tour
}

export default function TourDetailClient({ tour }: TourDetailClientProps) {
  const [selectedDate, setSelectedDate] = useState('')
  const [travelers, setTravelers] = useState(1)
  const [expandedDay, setExpandedDay] = useState<number | null>(null)
  const router = useRouter()
  const { showLoading, hideLoading } = useLoading()
  
  const handleBookTour = () => {
    showLoading('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏á‡∏ó‡∏±‡∏ß‡∏£‡πå...')
    setTimeout(() => {
      hideLoading()
      router.push('/booking')
    }, 1500)
  }

  const handleContactInquiry = () => {
    showLoading('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠...')
    setTimeout(() => {
      hideLoading()
      router.push('/contact')
    }, 1500)
  }

  const handleBackToTours = () => {
    showLoading('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏±‡∏ß‡∏£‡πå...')
    setTimeout(() => {
      hideLoading()
      router.push('/tours')
    }, 1000)
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        {/* Back Button */}
        <button
          onClick={handleBackToTours}
          className="flex items-center text-blue-600 hover:text-blue-700 mb-6 transition-colors"
        >
          <ArrowLeft className="w-5 h-5 mr-2" />
          ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏±‡∏ß‡∏£‡πå
        </button>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <div className="lg:col-span-2">
            {/* Hero Image */}
            <div className="relative h-96 bg-gradient-to-r from-blue-500 to-blue-700 flex items-center justify-center text-white mb-8 rounded-xl overflow-hidden">
              <Image src={tour.image} alt={tour.title} fill className="object-cover opacity-40" priority />
              <div className="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-black/20"></div>
              <div className="relative z-10 text-center max-w-4xl px-6">
                <div className="mb-4">
                  <span className="bg-blue-600/80 backdrop-blur-sm text-white px-4 py-2 rounded-full text-sm font-semibold">
                    {tour.category}
                  </span>
                </div>
                <h1 className="text-4xl md:text-6xl font-bold mb-4 drop-shadow-2xl">{tour.title}</h1>
                <p className="text-xl md:text-2xl drop-shadow-xl opacity-90">
                  {tour.location} | {tour.duration} | 
                  {tour.availability === '‡πÄ‡∏ï‡πá‡∏°' ? '‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß' : 
                   tour.availableSlots ? `‡∏ß‡πà‡∏≤‡∏á ${tour.availableSlots} ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á` : tour.groupSize}
                </p>
                <div className="flex items-center justify-center mt-6 gap-6 text-lg">
                  <div className="flex items-center gap-2">
                    <Star className="w-6 h-6 text-yellow-400 fill-current" />
                    <span className="font-semibold">{tour.rating}</span>
                    <span className="opacity-75">({tour.reviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß)</span>
                  </div>
                  <div className={`px-4 py-2 rounded-full font-semibold ${
                    tour.availability === '‡∏ß‡πà‡∏≤‡∏á' ? 'bg-green-500' : 
                    tour.availability === '‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢' ? 'bg-red-500 animate-pulse' : 
                    'bg-gray-500'
                  }`}>
                    {tour.availability === '‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢' ? 'üî• ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢!' : tour.availability}
                  </div>
                </div>
              </div>
            </div>

            {/* Tour Info */}
            <div className="bg-white rounded-lg shadow-lg p-6 mb-8">
              <div className="flex flex-wrap items-center gap-4 mb-4">
                <span className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                  {tour.category}
                </span>
                <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                  tour.availability === '‡∏ß‡πà‡∏≤‡∏á' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-red-100 text-red-800'
                }`}>
                  {tour.availability}
                </span>
              </div>

              <h1 className="text-3xl font-bold text-gray-800 mb-4">{tour.title}</h1>
              
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
                <div className="flex items-center text-gray-600">
                  <MapPin className="w-5 h-5 mr-2 text-blue-600" />
                  <span>{tour.location}</span>
                </div>
                <div className="flex items-center text-gray-600">
                  <Clock className="w-5 h-5 mr-2 text-blue-600" />
                  <span>{tour.duration}</span>
                </div>
                <div className="flex items-center text-gray-600">
                  <Users className="w-5 h-5 mr-2 text-blue-600" />
                  <span>
                    {tour.availability === '‡πÄ‡∏ï‡πá‡∏°' ? '‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß' : 
                     tour.availableSlots ? `‡∏ß‡πà‡∏≤‡∏á ${tour.availableSlots} ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á` : tour.groupSize}
                  </span>
                </div>
                <div className="flex items-center text-gray-600">
                  <Calendar className="w-5 h-5 mr-2 text-blue-600" />
                  <span>{tour.departureDates?.length || 0} ‡∏£‡∏≠‡∏ö</span>
                </div>
              </div>

              <div className="flex items-center mb-6">
                <div className="mr-4">
                  <StarRating rating={tour.rating} size="md" />
                </div>
                <span className="text-lg font-semibold text-gray-700">{tour.rating.toFixed(1)}</span>
                <span className="text-gray-600 ml-2">({tour.reviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß)</span>
              </div>

              <p className="text-gray-700 leading-relaxed mb-6">{tour.description}</p>

              <div className="border-t pt-6">
                <h3 className="text-xl font-bold mb-4">‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡∏ß‡∏£‡πå</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                  {tour.highlights.map((highlight, index) => (
                    <div key={index} className="flex items-center">
                      <Check className="w-4 h-4 text-green-600 mr-2 flex-shrink-0" />
                      <span className="text-gray-700">{highlight}</span>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Itinerary Section */}
            <div className="bg-white rounded-lg shadow-lg p-6 mb-8">
              <h3 className="text-xl font-bold mb-4 text-blue-700">‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô</h3>
              <p className="text-sm text-gray-500 mb-6">‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°</p>
              <div className="space-y-6">
                {(() => {
                  // ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏à‡∏≤‡∏Å duration ‡πÄ‡∏ä‡πà‡∏ô "6 ‡∏ß‡∏±‡∏ô 4 ‡∏Ñ‡∏∑‡∏ô" => 6
                  const dayMatch = tour.duration.match(/(\d+)\s*‡∏ß‡∏±‡∏ô/)
                  const totalDays = dayMatch ? parseInt(dayMatch[1]) : (tour.itinerary?.length || 1)
                  // ‡∏ñ‡πâ‡∏≤ itinerary ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡πÉ‡∏´‡πâ generate mock ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°
                  let itinerary = tour.itinerary ? [...tour.itinerary] : []
                  const randomImages = [
                    'https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80',
                    'https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=800&q=80',
                    'https://images.unsplash.com/photo-1500534314209-a25ddb2bd429?auto=format&fit=crop&w=800&q=80',
                    'https://images.unsplash.com/photo-1465156799763-2c087c332922?auto=format&fit=crop&w=800&q=80',
                    'https://images.unsplash.com/photo-1467269204594-9661b134dd2b?auto=format&fit=crop&w=800&q=80',
                    'https://images.unsplash.com/photo-1502082553048-f009c37129b9?auto=format&fit=crop&w=800&q=80',
                    'https://images.unsplash.com/photo-1465101178521-c1a9136a3b99?auto=format&fit=crop&w=800&q=80',
                  ]
                  for (let i = itinerary.length + 1; i <= totalDays; i++) {
                    itinerary.push({
                      day: i,
                      title: `‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${i}`,
                      description: `‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${i} ‡∏Ç‡∏≠‡∏á‡∏ó‡∏£‡∏¥‡∏õ‡∏ô‡∏µ‡πâ ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏ä‡∏¥‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏≠‡∏±‡∏ò‡∏¢‡∏≤‡∏®‡∏±‡∏¢`,
                      image: randomImages[(i-1) % randomImages.length],
                      highlights: [
                        `‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏î‡πà‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô ${i}`,
                        `‡∏à‡∏∏‡∏î‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°`,
                        `‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà`
                      ],
                      meals: ["‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏¢‡πá‡∏ô"],
                      accommodation: i === totalDays ? "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏•‡∏±‡∏ö" : `‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô 4 ‡∏î‡∏≤‡∏ß ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${i}`,
                      fullDescription: `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${i} ‡∏Ç‡∏≠‡∏á‡∏ó‡∏£‡∏¥‡∏õ‡∏ô‡∏µ‡πâ ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏ä‡∏¥‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏≠‡∏±‡∏ò‡∏¢‡∏≤‡∏®‡∏±‡∏¢ ‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏à‡∏∞‡∏î‡∏π‡πÅ‡∏•‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏•‡∏≠‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á`
                    })
                  }
                  return itinerary.map((day, idx) => (
                    <div key={day.day} className="border rounded-lg p-4 flex flex-col md:flex-row gap-4 bg-blue-50/30 shadow-sm hover:shadow-lg transition-shadow">
                      <div className="md:w-1/3 flex-shrink-0 flex items-center justify-center">
                        <Image
                          src={day.image}
                          alt={day.title}
                          width={400}
                          height={250}
                          className="rounded-lg object-cover w-full h-48 md:h-40 shadow-md"
                        />
                      </div>
                      <div className="md:w-2/3">
                        <div className="flex items-center gap-2 mb-2">
                          <span className="bg-blue-600 text-white px-3 py-1 rounded-full text-xs font-bold shadow">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {day.day}</span>
                          <span className="text-lg font-bold text-blue-900 drop-shadow">{day.title}</span>
                        </div>
                        <div className="mb-2 text-gray-700 font-semibold flex flex-wrap gap-2">
                          {day.highlights && day.highlights.map((h, i) => (
                            <span key={i} className="inline-flex items-center bg-emerald-100 text-emerald-700 px-2 py-0.5 rounded text-xs font-medium">
                              <Check className="w-3 h-3 mr-1 text-emerald-500" />{h}
                            </span>
                          ))}
                        </div>
                        <div className="mb-2 text-gray-600 leading-relaxed text-base">
                          {day.fullDescription || day.description}
                        </div>
                        <div className="flex flex-wrap gap-4 mt-2">
                          {day.meals && (
                            <div className="text-sm text-emerald-700 flex items-center gap-1 bg-emerald-50 px-2 py-1 rounded">
                              <span role="img" aria-label="meals">üçΩÔ∏è</span> ‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£: {day.meals.join(', ')}
                            </div>
                          )}
                          {day.accommodation && (
                            <div className="text-sm text-indigo-700 flex items-center gap-1 bg-indigo-50 px-2 py-1 rounded">
                              <span role="img" aria-label="hotel">üè®</span> ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å: {day.accommodation}
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  ))
                })()}
              </div>
            </div>

            {/* Included/Not Included */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
              <div className="bg-white rounded-lg shadow-lg p-6">
                <h3 className="text-xl font-bold mb-4 text-green-600">‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à</h3>
                <ul className="space-y-2">
                  {tour.included.map((item, index) => (
                    <li key={index} className="flex items-start">
                      <Check className="w-4 h-4 text-green-600 mr-2 mt-1 flex-shrink-0" />
                      <span className="text-gray-700">{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
              <div className="bg-white rounded-lg shadow-lg p-6">
                <h3 className="text-xl font-bold mb-4 text-red-600">‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à</h3>
                <ul className="space-y-2">
                  {tour.notIncluded.map((item, index) => (
                    <li key={index} className="flex items-start">
                      <X className="w-4 h-4 text-red-600 mr-2 mt-1 flex-shrink-0" />
                      <span className="text-gray-700">{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          </div>

          {/* Booking Sidebar */}
          <div className="lg:col-span-1">
            <div className="bg-white rounded-lg shadow-lg p-6 sticky top-24">
              <div className="mb-6">
                <div className="flex items-center justify-between mb-2">
                  <div className="text-3xl font-bold text-emerald-600">‡∏ø{tour.price.toLocaleString()}</div>
                  {tour.originalPrice && tour.originalPrice > tour.price && (
                    <div className="text-lg text-gray-500 line-through">‡∏ø{tour.originalPrice.toLocaleString()}</div>
                  )}
                </div>
                <p className="text-lg font-semibold text-blue-700 bg-blue-50 px-3 py-1 rounded-md inline-block">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô</p>
                {tour.originalPrice && tour.originalPrice > tour.price && (
                  <div className="bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold mt-2 inline-block animate-pulse">
                    üî• ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î ‡∏ø{(tour.originalPrice - tour.price).toLocaleString()}!
                  </div>
                )}
              </div>

              <div className="space-y-4 mb-6">
                <div>
                  <label className="block text-sm font-medium mb-2">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</label>
                  <select 
                    value={selectedDate}
                    onChange={(e) => setSelectedDate(e.target.value)}
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</option>
                    {tour.departureDates?.map((dateRange, index) => (
                      <option key={index} value={`${dateRange.start}-${dateRange.end}`}>
                        {dateRange.start} - {dateRange.end}
                      </option>
                    ))}
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</label>
                  <select 
                    value={travelers}
                    onChange={(e) => setTravelers(parseInt(e.target.value))}
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    disabled={tour.availability === '‡πÄ‡∏ï‡πá‡∏°'}
                  >
                    {Array.from({ 
                      length: tour.availability === '‡πÄ‡∏ï‡πá‡∏°' ? 0 : 
                               tour.availableSlots ? Math.min(tour.availableSlots, 30) : 30 
                    }, (_, i) => i + 1).map(num => (
                      <option key={num} value={num}>{num} ‡∏Ñ‡∏ô</option>
                    ))}
                    {tour.availability === '‡πÄ‡∏ï‡πá‡∏°' && (
                      <option value={0}>‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß</option>
                    )}
                  </select>
                </div>
              </div>

              <div className="border-t pt-4 mb-6">
                <div className="flex justify-between items-center mb-2">
                  <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ({travelers} ‡∏Ñ‡∏ô)</span>
                  <span>‡∏ø{(tour.price * travelers).toLocaleString()}</span>
                </div>
                <div className="flex justify-between items-center mb-2">
                  <span>‡∏†‡∏≤‡∏©‡∏µ & ‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°</span>
                  <span>‡∏ø{Math.round(tour.price * travelers * 0.1).toLocaleString()}</span>
                </div>
                <div className="flex justify-between items-center font-bold text-lg border-t pt-2">
                  <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                  <span className="text-emerald-600">‡∏ø{(tour.price * travelers + Math.round(tour.price * travelers * 0.1)).toLocaleString()}</span>
                </div>
              </div>

              <div className="space-y-3">
                {tour.availability === '‡πÄ‡∏ï‡πá‡∏°' ? (
                  <button 
                    disabled
                    className="w-full bg-gray-400 text-white font-bold py-3 px-8 rounded-lg shadow-lg cursor-not-allowed text-lg"
                  >
                    ‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß
                  </button>
                ) : (
                  <button 
                    onClick={handleBookTour} 
                    className="w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white font-bold py-3 px-8 rounded-lg shadow-lg hover:from-blue-700 hover:to-blue-800 transition-all duration-200 text-lg transform hover:scale-105"
                  >
                    {tour.availability === '‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢' ? 'üî• ‡∏à‡∏≠‡∏á‡∏î‡πà‡∏ß‡∏ô!' : '‡∏à‡∏≠‡∏á‡∏ó‡∏±‡∏ß‡∏£‡πå‡∏ô‡∏µ‡πâ'}
                  </button>
                )}
                <button 
                  onClick={handleContactInquiry} 
                  className="w-full bg-white text-blue-700 font-bold py-3 px-8 rounded-lg shadow-lg hover:bg-blue-50 transition-all duration-200 text-lg border-2 border-blue-600 hover:border-blue-700"
                >
                  ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                </button>
              </div>

              <div className="mt-6 text-center">
                <p className="text-sm text-gray-600 mb-2">‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠?</p>
                <p className="text-sm font-semibold">‡πÇ‡∏ó‡∏£: 02-674-1500</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}